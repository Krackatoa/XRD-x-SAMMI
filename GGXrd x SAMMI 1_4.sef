[extension_name]
Guilty Gear Xrd x Sammi
[extension_info]
With Pangaea's Rev2Mod installed, pipe live gamestate data from Guilty Gear Xrd: Rev 2 (Steam Version) directly into Sammi.
[extension_version]
1.4.0
[insert_external]
<script>
    const Xrd_Websocket_Names = [];
    const Xrd_Websockets = [];
	let Xrd_Connected = 0;
	
</script>
<div class="row">
  <div class="col-12 col-md-8 col-lg-6 mx-auto">
    <div class="card bg-dark text-white">
      <div class="card-header">
        <h3>Guilty Gear Xrd x Sammi</h3>
        <div class="d-flex justify-content-between align-items-center">
		<h5><div id="xrd-connection-status">Connection: OFF</div></h5>
          <h5>Version: 1.4.0</h5> 
          <a href="https://github.com/super-continent/ggxrd-mod/" class="btn btn-dark" target="_blank" rel="noopener noreferrer">Download Pangaea's Mod Here</a>
        </div>
      </div>
      <div class="card-body">
        <h4 class="card-title">Overview</h4>
        <p class="card-text">Trigger Sammi events from Xrd. </p>
		<p>Made possible by Pangaea's Guilty Gear Rev2 Hook.</p>
        <hr>
		<h4 class="card-title">Instructions</h4>
		<p>Connect to Xrd via the <i>Create Xrd Websocket</i> command, then make use of the following Extension Triggers, paired with the <i>Trigger Pull Data</i> command:</p>
		<p><i>ggxrd_stateUpdate</i> - General game updates. 60Hz tick rate.<br><br>
		<i>ggxrd_hitEvent</i> - On Hit and On Block events.<br><br>
		<i>ggxrd_objectCreatedEvent</i> - On Projectile/Object Generation.<br><br>
		<i>ggxrd_comboEndEvent</i> - On Combo End.<br><br>
		<i>ggxrd_roundStartEvent</i> - On Round Start.<br><br>
		<i>ggxrd_roundEndEvent</i> - On Round End.<br><br>
		<i>ggxrd_timeoutEvent</i> - Dedicated event for when you leave gameplay.</p>
		<p>Note: These triggers only occur during gameplay.</p>
		<hr>
		<h4 class="card-title">Bonus Functionality</h4>
		<p>Included is a <i>Xrd Moveset Interpreter</i> command for SAMMI that will convert the raw character and object states into their most-likely spoken name, numpad notation, or Text-To-Speech-friendly spelling. Feel free to edit this extension at your whismy if you want to alter this functionality.</p>
		<hr>
		<h4 class="card-title">Socials</h4>
        <p>Extension created by Krackatoa. Follow me on:</p>
        <div class="social-icons">
			<a href="https://bsky.app/profile/krackatoa.ca" style="text-decoration: none;" target="_blank" rel="noopener noreferrer">Bluesky</a><br>
			<a href="https://twitch.tv/krackatoa" style="text-decoration: none;" target="_blank" rel="noopener noreferrer">Twitch</a><br>
			<a href="https://youtube.com/krackatoa" style="text-decoration: none;" target="_blank" rel="noopener noreferrer">YouTube</a><br>
			<a href="http://www.twitter.com/koryuken" style="text-decoration: none;" target="_blank" rel="noopener noreferrer">Twitter</a><br><br>		
        </div>
		<p>Mod created by Pangaea. Follow them on:</p>
        <div class="social-icons">
			<a href="https://bsky.app/profile/toptwentynotes.bsky.social" style="text-decoration: none;" target="_blank" rel="noopener noreferrer">Bluesky</a><br>
			<a href="https://twitter.com/TopTwentyNotes" style="text-decoration: none;" target="_blank" rel="noopener noreferrer">Twitter</a><br>			
        </div>
      </div>
      <div class="card-footer">
        <small>Last updated: 2025-12-2, Websocket Extension Code by failstream.</small>
      </div>
    </div>
  </div>
</div>
[insert_command]

SAMMI.extCommand('Create Xrd Websocket', 3355443, 52, {
    url: ['Websocket URL (Xrd Webserver)', 14, 'ws://localhost:6651', 1]
});

SAMMI.extCommand('Xrd Moveset Interpreter', 3355443, 52, {
	mode:['Mode', 19, 'Real Name', null,['Real Name','Numpad','TTS Friendly']],
	character: ['Character Filter', 20, 'all', null,['all','Answer','Axl','Baiken','Bedman','Chipp','Dizzy','Elphelt','Faust','Ino','JackO','Jam','Johnny','Kum','Ky','Leo','May','Millia','Potemkin','Ramlethal','Raven','Sin','Slayer','Sol','Venom','Zato-1'] ,1],
	state: ['Character State', 14, '', 1],
	returnVariable: ['Return Variable', 14, '', 1],
});

// Call the main function when the extension loads
Xrd_Main();
[insert_hook]
[insert_script]
async function Xrd_CreateWebsocket(url) {
   try {
		
		if (!url) {
            throw 'Websocket: url field is not optional!';
        } 
		let xrd_name = "xturd_websocket";
        let xrd_name_exists = Xrd_Websocket_Names.indexOf(xrd_name);
		
        if (xrd_name_exists == -1) {
            Xrd_Websocket_Names.push(xrd_name);
            let i = Xrd_Websocket_Names.indexOf(xrd_name);
            Xrd_Websockets[i] = new WebSocket(url);
            Xrd_Websockets[i].onopen = function (event) {

				if(Xrd_Connected == 0)
				{
					xrd_connectionStatusElement = document.getElementById('xrd-connection-status');
					xrd_connectionStatusElement.textContent = 'Connection: ON';
					SAMMI.alert('Xrd has connected!');
					console.log('Xrd has connected!');
					Xrd_Connected = 1;
				}
            };
			
            Xrd_Websockets[i].onclose = function (event) 
			{
                if(Xrd_Connected == 1)
				{
					SAMMI.alert('Xrd has disconnected!');
					console.log('Xrd has disconnected!');
					Xrd_Connected = 0;
					xrd_connectionStatusElement = document.getElementById('xrd-connection-status');
					xrd_connectionStatusElement.textContent = 'Connection: OFF';
				}					
				Xrd_RemoveWebsocket(Xrd_Websocket_Names[i]);
				Xrd_Websocket_Names.splice(i, 1);
				SAMMI.triggerButton("Xrd_Connect");
                
            };
			
            Xrd_Websockets[i].onerror = function (event) {               
                if (error) {
                    console.log(error);
                }               
            };
			
            Xrd_Websockets[i].onmessage = function (event) 
			{

				//This is where you set up the logic for incoming info.					
				obj = JSON.parse(event.data);
				
				if(obj.event == "ggxrd_stateUpdate")
				{
					SAMMI.triggerExt('ggxrd_stateUpdate', {data: obj});	
				}
				else if(obj.event == "ggxrd_hitEvent")
				{
					SAMMI.triggerExt('ggxrd_hitEvent', {data: obj});
				}
				else if(obj.event == "ggxrd_objectCreatedEvent")
				{
					SAMMI.triggerExt('ggxrd_objectCreatedEvent', {data: obj});
				}
				else if(obj.event == "ggxrd_roundStartEvent")
				{
					SAMMI.triggerExt('ggxrd_roundStartEvent', {data: obj});
				}
				else if(obj.event == "ggxrd_roundEndEvent")
				{
					SAMMI.triggerExt('ggxrd_roundEndEvent', {data: obj});
				}
				else if(obj.event == "ggxrd_comboEndEvent")
				{
					SAMMI.triggerExt('ggxrd_comboEndEvent', {data: obj});
				}
				else if(obj.event == "ggxrd_gamestateDeinitializedEvent")
				{
					SAMMI.triggerExt('ggxrd_timeoutEvent', {data: obj});
				} else
				{
					SAMMI.triggerExt('ggxrd_unknownEvent', {data: obj});
				}
            };
        } else {
            throw 'Xrd could not connect: ' + name;
        } 

    } catch (e) {
        console.log(e);
    }
}

function Xrd_RemoveWebsocket(name) {
    try {
        if (!name) {
            throw 'cannot remove websocket without a name!';
        }
        let i = Xrd_Websocket_Names.indexOf(name);
        if (i != -1) {
            Xrd_Websockets[i].close();
        } else {
            throw 'This websocket name: ' + name + ' does not exist! Cannot remove.';
        }
    } catch(e) {
        SAMMI.alert(e)
    }
}

function Xrd_Main() {
    console.log("Xturd Extension connected to SAMMI Bridge");

	sammiclient.on('Create Xrd Websocket', (payload) => {
		//SAMMI.alert("Connecting to Xrd.");
		Xrd_CreateWebsocket(payload.Data.url);		
	});
	
	sammiclient.on('Xrd Moveset Interpreter', (payload) => {
		const { FromButton } = payload.Data;
		const state = payload.Data.state;
		const returnVariable = payload.Data.returnVariable;
		const mode = payload.Data.mode;

		character = payload.Data.character;
		output = state;
		foundException = 0;
		
		switch (character.toLowerCase())
		{
			case "all": character = "all"; break;
			case "answer": character = "Answer"; break;
			case "axl": character = "Axl"; break;
			case "baiken": character = "Baiken"; break;
			case "bedman": character = "Bedman"; break;
			case "chipp": character = "Chipp"; break;
			case "dizzy": character = "Dizzy"; break;
			case "elphelt": character = "Elphelt"; break;
			case "faust": character = "Faust"; break;
			case "ino": character = "Ino"; break;
			case "i-no": character = "Ino"; break;
			case "jacko": character = "JackO"; break;
			case "jack-o": character = "JackO"; break;
			case "jack-o'": character = "JackO";
			case "jam": character = "Jam"; break;
			case "johnny": character = "Johnny"; break;
			case "johnny sfondi": character = "Johnny"; break;
			case "kum": character = "Kum"; break;
			case "kum haehyun": character = "Kum"; break;
			case "haehyun": character = "Kum"; break;
			case "ky": character = "Ky"; break;
			case "kyle": character = "Ky"; break;
			case "ky kiske": character = "Ky"; break;
			case "leo": character = "Leo"; break;
			case "leo whitefang": character = "Leo"; break;
			case "may": character = "May"; break;
			case "millia rage": character = "Millia"; break;
			case "millia": character = "Millia"; break;
			case "potemkin": character = "Potemkin"; break;
			case "pot": character = "Potemkin"; break;
			case "ramlethal": character = "Ramlethal"; break;
			case "ram": character = "Ramlethal"; break;
			case "raven": character = "Raven"; break;
			case "sin": character = "Sin"; break;
			case "slayer": character = "Slayer"; break;
			case "sol": character = "Sol"; break;
			case "sol badguy": character = "Sol"; break;
			case "venom": character = "Venom"; break;
			case "pepperysplash": character = "Venom"; break;
			case "zato-one": character = "Zato"; break;
			case "zato=1": character = "Zato"; break;
			case "zato": character = "Zato"; break;
			default: character = "all"; break;
		}

			//Universal & Common States
			
		if (state.includes("CmnAct"))
		{
			if (mode == "Numpad")
			{
				switch(state)
				{
					case "CmnActFDash": output = "66"; break;
					case "CmnActBDash": output = "44"; break;
					case "CmnActRomanCancel": output = "RC"; break;
					case "CmnActAirBDash": output = "44"; break;
					case "CmnActAirFDash": output = "66"; break;
					case "CmnActJump": output = "^"; break;
					case "CmnActJumpPre": output = "^"; break;
					case "CmnActJumpLanding": output = "v"; break;
				}
			} 
			else if (mode == "Real Name" || mode == "TTS Friendly")
			{
				switch(state)
				{
					case "CmnActStand": output = "Standing"; break;
					case "CmnActCrouch": output = "Crouching"; break;
					case "CmnActJump": output = "Jumping"; break;
					case "CmnActJumpPre": output = "Prejump"; break;
					case "CmnActFWalk": output = "Forward Walk"; break;
					case "CmnActBWalk": output = "Back Walk"; break;
					case "CmnActFDash": output = "Forward Dash"; break;
					case "CmnActBDash": output = "Backdash"; break;
					case "CmnActAirFDash": output = "Airdash"; break;
					case "CmnActAirBDash": output = "Air Backdash"; break;
					case "CmnActFDashStop": output = "Runstop"; break;
					case "CmnActUkemi": output = "Air Tech"; break;
					case "CmnActMidGuardLoop": output = "Stand Block"; break;
					case "CmnActCrouchGuardLoop": output = "Crouch Block"; break;
					case "CmnActAirGuardLoop": output = "Air Block"; break;
					case "CmnActHajikareAir": output = "Air Blitz Reject"; break;
					case "CmnActHajikareStand": output = "Blitz Reject"; break;
					case "CmnActRomanCancel": output = "Roman Cancel"; break;
					case "CmnActJitabataLoop":output = "Stagger"; break;
					case "CmnActKizetsu":output = "Stun"; break;
					case "CmnActBurst": output = "Burst"; break;
					case "CmnActStand2Crouch": output = "Crouching"; break;
					case "CmnActCrouch2Stand": output = "Standing"; break;
					case "CmnActJumpLanding": output = "Landing"; break;
					case "CmnActLandingStiff": output = "Extra Landing Frames"; break;
					case "CmnActCrouchGuardEnd": output = "Crouching"; break;
					case "CmnActMidGuardEnd": output = "Standing"; break;
					case "CmnActAirGuardEnd": output = "Jumping"; break;
				}
			}
		}
		
		//Hitstun Detection		
		if (state.includes("Nokezori") && state == output && foundException == 0)
		{
			if(state.includes("Crouch"))
			{
				output = "Crouching Hitstun";
			} else
			{
				output = "Standing Hitstun";
			}
		}
		
		//Other General States
		if(state == output)
		{
			switch(state)
			{
				case "ThrowExe": output = "Throw"; break;
			}
		}
		//Blitz Detection, prioritize 
		if(mode == "Numpad" )
		{
			if (state.includes("Counter"))
			{
				switch(state)
				{
					case "CounterGuardStand": output = "S+H"; break;
					case "CounterGuardCrouch": output = "2S+H"; break;
					case "CounterGuardAir": output = "jS+H"; break;				
				}
			}
		} else if (mode == "Real Name" || mode == "TTS Friendly")
		{
			if (state.includes("Counter"))
			{
				switch(state)
				{
					case "CounterGuardStand": output = "Stand Blitz"; break;
					case "CounterGuardCrouch": output = "Crouch Blitz"; break;
					case "CounterGuardAir": output = "Air Blitz"; break;				
				}
			}
		}
		
		//Attack States
		if (mode == "Numpad" || mode == "Real Name")
		{
			if (state.includes("NmlAtkAir"))
			{
				switch(state)
				{
					case "NmlAtkAir5A": output = "jP"; break;
					case "NmlAtkAir5B": output = "jK"; break;
					case "NmlAtkAir5C": output = "jS"; break;
					case "NmlAtkAir5D": output = "jH"; break;
					case "NmlAtkAir5E": output = "jD"; break;
					case "NmlAtkAir2A": output = "j2P"; break;
					case "NmlAtkAir2B": output = "j2K"; break;
					case "NmlAtkAir2C": output = "j2S"; break;
					case "NmlAtkAir2D": output = "j2H"; break;
					case "NmlAtkAir2E": output = "j2D"; break;
				}				
			} 
		}
		
		if (state.includes("NmlAtk"))
		{
			//Priortize Numpad
			if (mode == "Numpad" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "NmlAtk5CFar": output = "fS"; break;
					case "NmlAtk5CNear": output = "cS"; break;
					case "NmlAtk5CFar_Guard": output = "S>P"; break;
					case "NmlAtk5D_Guard": output = "H>P"; break;
				}
			}

			if (mode == "Real Name" || mode == "Numpad" && state == output && foundException == 0)
			{
				switch(state) 
				{
					case "NmlAtk5CFar": output = "Far S"; break;
					case "NmlAtk5A": output = "5P";	break;
					case "NmlAtk5B": output = "5K"; break;
					case "NmlAtk5C": output = "5S"; break;
					case "NmlAtk5CNear": output = "Close S"; break;
					case "NmlAtk5D": output = "5H"; break;
					case "NmlAtk5E": output = "5D"; break;				
					case "NmlAtk2A": output = "2P";	break;
					case "NmlAtk2B": output = "2K"; break;
					case "NmlAtk2C": output = "2S"; break;
					case "NmlAtk2D": output = "2H"; break;
					case "NmlAtk2E": output = "2D"; break;				
					case "NmlAtk6A": output = "6P";	break;
					case "NmlAtk6B": output = "6K"; break;
					case "NmlAtk6C": output = "6S"; break;
					case "NmlAtk6D": output = "6H"; break;
					case "NmlAtk6E": output = "6D"; break;
					case "NmlAtk4A": output = "4P";	break;
					case "NmlAtk4B": output = "4K"; break;
					case "NmlAtk4C": output = "4S"; break;
					case "NmlAtk4D": output = "4H"; break;
					case "NmlAtk4E": output = "4D"; break;				
					case "NmlAtk3A": output = "3P";	break;
					case "NmlAtk3B": output = "3K"; break;
					case "NmlAtk3C": output = "3S"; break;
					case "NmlAtk3D": output = "3H"; break;
					case "NmlAtk3E": output = "3D"; break;			
					case "NmlAtk1A": output = "1P";	break;
					case "NmlAtk1B": output = "1K"; break;
					case "NmlAtk1C": output = "1S"; break;
					case "NmlAtk1D": output = "1H"; break;
					case "NmlAtk1E": output = "1D"; break;
					//Leo Exception
					case "NmlAtk5CFar_Guard": output = "S Guardpoint P"; break;
					case "NmlAtk5D_Guard": output = "H Guardpoint P"; break;
					//Raven Exception
					case "NmlAtk4AHasei": output = "4P"; break;
				}
			}
			
			 
			
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state) 
				{
					case "NmlAtk5CFar": output = "Far S"; break;
					case "NmlAtk5A": output = "Five P";	break;
					case "NmlAtk5B": output = "Five K"; break;
					case "NmlAtk5C": output = "Five S"; break;
					case "NmlAtk5CNear": output = "Close S"; break;
					case "NmlAtk5D": output = "Five H"; break;
					case "NmlAtk5E": output = "Five D"; break;				
					case "NmlAtk2A": output = "Two P";	break;
					case "NmlAtk2B": output = "Two K"; break;
					case "NmlAtk2C": output = "Two S"; break;
					case "NmlAtk2D": output = "Two H"; break;
					case "NmlAtk2E": output = "Two D"; break;				
					case "NmlAtk6A": output = "Six P";	break;
					case "NmlAtk6B": output = "Six K"; break;
					case "NmlAtk6C": output = "Six S"; break;
					case "NmlAtk6D": output = "Six H"; break;
					case "NmlAtk6E": output = "Six D"; break;
					case "NmlAtk4A": output = "Four P";	break;
					case "NmlAtk4B": output = "Four K"; break;
					case "NmlAtk4C": output = "Four S"; break;
					case "NmlAtk4D": output = "Four H"; break;
					case "NmlAtk4E": output = "Four D"; break;				
					case "NmlAtk3A": output = "Three P"; break;
					case "NmlAtk3B": output = "Three K"; break;
					case "NmlAtk3C": output = "Three S"; break;
					case "NmlAtk3D": output = "Three H"; break;
					case "NmlAtk3E": output = "Three D"; break;			
					case "NmlAtk1A": output = "One P";	break;
					case "NmlAtk1B": output = "One K"; break;
					case "NmlAtk1C": output = "One S"; break;
					case "NmlAtk1D": output = "One H"; break;
					case "NmlAtk1E": output = "One D"; break;
					//Leo Exception
					case "NmlAtk5CFar_Guard": output = "S Guardpoint P"; break;
					case "NmlAtk5D_Guard": output = "H Guardpoint P"; break;
					//Raven Exception
					case "NmlAtk4AHasei": output = "Four P"; break;
				}
			}
		}

		//Answer
		if (character == "Answer" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Real Name" && mode == "TTS Friendly")
			{
				switch(state)
				{
					case "Ami_set_Land": output = "Seal of Approval"; break;
					case "Ami_set_Air": output = "Air Seal of Approval"; break;
					case "Ami_Move": output = "Safety Net"; break;
					case "Ami_Atemi": output = "Data Logging"; break;
					case "Ami_Stamp": output = "Down the Ladder"; break;
					case "Ami_Gedan": output = "Stepping Down"; break;
					case "Ami_Chudan": output = "Into My Office"; break;
					case "Meishi_Throw": output = "Caltrops"; break;
					case "Meishi_Warp": output = "Under the Rug"; break;
					case "Meishi_Nin_Jitsu": output = "Under the Bus"; break;
					case "Mozu_Land": output = "Tax Write-off"; break;
					case "Mozu_Air": output = "Air Tax Write-off"; break;
					case "Zaneiken": output = "Resshou"; break;
					case "Royal_Straight_Flush": output = "Dead Stock Ninpo: Firesale"; break;
					case "Human_Suriken": output = "Business Ultimate Ninpo: All Hands"; break;
				}
			}

			if (mode == "Numpad")
			{
				switch(state)
				{
					case "Ami_set_Land": output = "214X"; break;
					case "Ami_set_Air": output = "j214X"; break;
					case "Ami_Move": output = "Ninpo D"; break;
					case "Ami_Atemi": output = "22P/Ninpo P"; break;
					case "Ami_Stamp": output = "Ninpo K"; break;
					case "Ami_Gedan": output = "Ninpo S"; break;
					case "Ami_Chudan": output = "Ninpo H"; break;
					case "Meishi_Throw": output = "236S/H"; break;
					case "Meishi_Warp": output = "22S/H"; break;
					case "Meishi_Nin_Jitsu": output = "421S/H"; break;
					case "Mozu_Land": output = "623K"; break;
					case "Mozu_Air": output = "j623K"; break;
					case "Zaneiken": output = "46P"; break;
					case "Royal_Straight_Flush": output = "632146S/D"; break;
					case "Human_Suriken": output = "236236K"; break;
				}
			}
		} 
		//Axl
		if (character == "Axl" || character == "all" && state == output && foundException == 0)
		{
			if (mode == "TTS Friendly")
			{
				switch(state)
				{
					case "BentenGari": output = "Benten"; break;
					case "Raieisageki": output = "The Crossup"; break;
					case "Rashosen": output = "The Unblockable"; break;
					case "Rensengeki": output = "Rensen"; break;
					case "Kyokusageki": output = "Rensen 8"; break;
					case "Sensageki": output = "Rensen 2"; break;
					case "TenhousekiJou": output = "High Counter"; break;
					case "TenhousekiGe": output = "Low Counter"; break;
					case "AxelBomber": output = "Axl Bomber"; break;
					case "DaiRensen": output = "Sparrowhawk"; break;
					case "DaiRensenA": output = "Sparrowhawk P"; break;
					case "DaiRensenB": output = "Sparrowhawk K"; break;
					case "DaiRensenC": output = "Sparrowhawk S"; break;
					case "DaiRensenD": output = "Sparrowhawk Cancel"; break;
					case "ByakueRenshou": output = "Sickle Storm"; break;
					case "KairagiYakou": output = "Shark Strike"; break;		
				}
			}

			if (mode == "Real Name" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "BentenGari": output = "Benten"; break;
					case "Raieisageki": output = "Thunder Shadow Chain"; break;
					case "Rashosen": output = "Spindle Spinner"; break;
					case "Rensengeki": output = "Rensen"; break;
					case "Kyokusageki": output = "Melody Chain"; break;
					case "Sensageki": output = "Spinning Chain Strike"; break;
					case "TenhousekiJou": output = "Heavy Can Wait (High)"; break;
					case "TenhousekiGe": output = "Heaven Can Wait (Low)"; break;
					case "AxelBomber": output = "Axl Bomber"; break;
					case "DaiRensen": output = "Sparrowhawk Stance"; break;
					case "DaiRensenA": output = "Sparrowhawk High"; break;
					case "DaiRensenB": output = "Sparrowhawk Mid"; break;
					case "DaiRensenC": output = "Sparrowhawk Low"; break;
					case "DaiRensenD": output = "Sparrowhawk Cancel"; break;
					case "ByakueRenshou": output = "Sickle Storm"; break;
					case "KairagiYakou": output = "Shark Strike"; break;		
				}
			}

			if (mode == "Numpad" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "BentenGari": output = "623S"; break;
					case "Raieisageki": output = "623K"; break;
					case "Rashosen": output = "41236H"; break;
					case "Rensengeki": output = "[4]6"; break;
					case "Kyokusageki": output = "Rensen 8"; break;
					case "Sensageki": output = "Rensen 2"; break;
					case "TenhousekiJou": output = "214P"; break;
					case "TenhousekiGe": output = "214K"; break;
					case "AxelBomber": output = "j623H"; break;
					case "DaiRensen": output = "214H"; break;
					case "DaiRensenA": output = "Sparrowhawk P"; break;
					case "DaiRensenB": output = "Sparrowhawk K"; break;
					case "DaiRensenC": output = "Sparrowhawk S"; break;
					case "DaiRensenD": output = "Sparrowhawk H"; break;
					case "ByakueRenshou": output = "2363214H"; break;
					case "KairagiYakou": output = "214214S"; break;		
				}
			}
		}
		//Baiken
		if (character == "Baiken" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "TatamiLand": output = "Tatami"; break;
					case "TatamiAir": output = "Air Tatami"; break;
					case "YouZanSen": output = "Yojohnson"; break;
					case "Kabari": output = "H Kabari"; break;
					case "Tossin": output = "H Followup"; break;
					case "KabariAntiAir": output = "S Kabari"; break;
					case "Tetsuzansen": output = "S Followup"; break;
					//May require exception
					case "CommandThrow": output = "Chaos Dunk"; foundException = 1; break;
					case "BlockingStand": output = "High Azami"; break;
					case "BlockingCrouch": output = "Low Azami"; break;
					case "BlockingAir": output = "Air Azami"; break;
					case "Suzuran": output = "Suzuran"; break;
					case "Youshijin": output = "Kuchinashi"; break;
					case "Mawarikomi": output = "Mawari"; break;
					case "Sakura": output = "Sakura"; break;
					case "Issen": output = "Rokkon"; break;
					case "Teppou": output = "Yasha"; break;
					case "AirGCAntiAir": output = "Tsubaki"; break;
					case "AirGCAntiGround": output = "Kikyo"; break;
					case "TsuraneSanzuWatashi": output = "Tsurane"; break;
					case "BlockingKakusei": output = "Metsudo"; break;
				}
			}
			 
			if (mode == "Real Name" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "TatamiLand": output = "Tatami Gaeshi"; break;
					case "TatamiAir": output = "Air Tatami Gaeshi"; break;
					case "YouZanSen": output = "Yozansen"; break;
					case "Kabari": output = "H Kabari"; break;
					case "Tossin": output = "Rokkon Sogi"; break;
					case "KabariAntiAir": output = "S Kabari"; break;
					case "Tetsuzansen": output = "Tetsuzan Sen"; break;
					//May require exception
					case "CommandThrow": output = "Chaos Dunk"; break;
					case "BlockingStand": output = "High Azami"; break;
					case "BlockingCrouch": output = "Low Azami"; break;
					case "BlockingAir": output = "Air Azami"; break;
					case "Suzuran": output = "Suzuran"; break;
					case "Youshijin": output = "Kuchinashi"; break;
					case "Mawarikomi": output = "Mawari-komi"; break;
					case "Sakura": output = "Sakura"; break;
					case "Issen": output = "Rokkon Sogi"; break;
					case "Teppou": output = "Yasha Gatana"; break;
					case "AirGCAntiAir": output = "Tsubaki"; break;
					case "AirGCAntiGround": output = "Kikyo"; break;
					case "TsuraneSanzuWatashi": output = "Tsurane Sanzu-watashi"; break;
					case "BlockingKakusei": output = "Metsudo Kushodo"; break;
				}
			}
			 
			if (mode == "Numpad" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "TatamiLand": output = "236K"; break;
					case "TatamiAir": output = "j236K"; break;
					case "YouZanSen": output = "j623S"; break;
					case "Kabari": output = "41236H"; break;
					case "Tossin": output = "~H"; break;
					case "KabariAntiAir": output = "41236S"; break;
					case "Tetsuzansen": output = "~S"; break;
					//May require exception
					case "CommandThrow": output = "~P"; break;
					case "BlockingStand": output = "S+H"; break;
					case "BlockingCrouch": output = "2S+H"; break;
					case "BlockingAir": output = "jS+H"; break;
					case "Suzuran": output = "63214K"; break;
					case "Youshijin": output = "~P"; break;
					case "Mawarikomi": output = "~K"; break;
					case "Sakura": output = "~S"; break;
					case "Issen": output = "~H"; break;
					case "Teppou": output = "~D"; break;
					case "AirGCAntiAir": output = "~P/K"; break;
					case "AirGCAntiGround": output = "~S/H"; break;
					case "TsuraneSanzuWatashi": output = "236236S"; break;
					case "BlockingKakusei": output = "~236236H"; break;
				}
			}
		}
		//Bedman
		if (character == "Bedman" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "Boomerang_B": output = "K Task A"; break;
					case "Boomerang_B_Air": output = "Air K Task A"; break;
					case "Okkake": output = "What the hell I cannot believe Hemi Jack hit."; break;
				}
			}
			 
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "AirStop": output = "Hover"; break;
					case "6Move": output = "Airdash 6"; break;
					case "3Move": output = "Airdash 3"; break;
					case "2Move": output = "Airdash 2"; break;
					case "1Move": output = "Airdash 1"; break;
					case "4Move": output = "Airdash 4"; break;
					case "7Move": output = "Airdash 7"; break;
					case "8Move": output = "Airdash 8"; break;
					case "9Move": output = "Airdash 9"; break;
					case "WarpEffHead": output = "Jump Scare"; break;
					case "SpiralBed": output = "Task B"; break;
					case "SpiralBed_Air": output = "Air Task B"; break;
					case "Boomerang_A": output = "Task A"; break;
					case "Boomerang_B": output = "Task A'"; break;
					case "Boomerang_A_Air": output = "Air Task A"; break;
					case "Boomerang_B_Air": output = "Air Task A'"; break;
					case "Boomerang_A_Head": output = "Task A"; break;
					case "Boomerang_B_Head": output = "Task A'"; break;
					case "FlyingBed": output = "Task C"; break;
					case "FlyingBed_Air": output = "Air Task C"; break;
					case "DejavIconFlyingBed": output = "Task C Icon"; break;
					case "DejavIconBoomerangA": output = "Task A Icon"; break;
					case "DejavIconBoomerangB": output = "Task A' Icon"; break;
					case "Dejavu_A": output = "Dejavu P"; break;
					case "Dejavu_B": output = "Dejavu K"; break;
					case "Dejavu_C": output = "Dejavu S"; break;
					case "Djavu_C_Ghost": output = "Dejavu S Ghost"; break;
					case "Djavu_D_Ghost": output = "Dejavu H Ghost"; break;
					case "DreamCatcherSuka": output = "LOUD INCORRECT BUZZER"; break;
					case "Alarm": output = "Alarm"; break;
					case "Merry": output = "Hemi Jack"; break; 	
					case "MerryWarp": output = "Hemi Jack"; break;
					case "Okkake": output = "Hemi Jack"; break;
				}
			}
			 

			if(mode == "Numpad" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "AirStop" : output = "j8"; break;
					case "6Move": output = "~6"; break;
					case "3Move": output = "~3"; break;
					case "2Move": output = "~2"; break;
					case "1Move": output = "~1"; break;
					case "4Move": output = "~4"; break;
					case "7Move": output = "~7"; break;
					case "8Move": output = "~8"; break;
					case "9Move": output = "~9"; break;
					case "SpiralBed": output = "236S"; break;
					case "SpiralBed_Air": output = "j236S"; break;
					case "Boomerang_A": output = "236P"; break;
					case "Boomerang_B": output = "236K"; break;
					case "Boomerang_A_Air": output = "j236P"; break;
					case "Boomerang_B_Air": output = "j236K'"; break;
					case "Boomerang_A_Head": output = "Task A (Hit)"; break;
					case "Boomerang_B_Head": output = "Task A' (Hit)"; break;
					case "FlyingBed": output = "236H"; break;
					case "FlyingBed_Air": output = "j236H"; break;
					case "Dejavu_A": output = "214P"; break;
					case "Dejavu_B": output = "214K"; break;
					case "Dejavu_C": output = "214S"; break;
					case "Dejavu_D" : output = "214H"; break;
					case "Djavu_C_Ghost": output = "Dejavu B (Hit)"; break;
					case "Djavu_D_Ghost": output = "Dejavu C (Hit)"; break;
					case "Alarm": output = "632146H"; break;
					case "Merry": output = "632146S"; break; 	
					case "Okkake": output = "632146S (Hit)"; break;
				}
			}
		}
		
		//Chipp
		if (character == "Chipp" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "WarpA": output = "P Teleport"; break;
					case "WarpB": output = "K Teleport"; break;
					case "WarpC": output = "S Teleport"; break;
					case "WarpD": output = "H Teleport"; break;
					case "AlphaBlade": output = "Alpha Blade"; break;
					case "AirAlphaBlade": output = "Air Alpha Blade"; break;
					case "AlphaPlus": output = "Alpha Blade Plus"; break;
					case "Tobiagari": output = "Shinkirou"; break;
					case "HiritsukiKeep": output = "Wall Cling"; break;
					case "BetaBlade": output = "Beta Blade"; break;
					case "AirBetaBlade": output = "Air Beta Blade"; break;
					case "GammaBlade": output = "Gamma Blade"; break;
					case "SankakuTobiDown": output = "Wall Dive"; break;
					case "Genrouzan": output = "Leaf Grab"; break;
					case "GenrouzanExe": output = "Leaf Grab"; break;
					case "Sushi": output = "Resshou"; break;
					case "Sukiyaki": output = "Rokusai"; break;
					case "Banzai": output = "Senshuu"; break;
					case "ZanseiRouga": output = "Zansei Rouga"; break;
					case "BankiMessai": output = "Banki Messai"; break;
					case "6WayKunai": output = "Ryuu Yanagi"; break;
					case "Kunai": output = "Ryuu Yanagi"; break;
					case "HaritsukiA": output = "Wall Alpha Blade"; break;
					case "HaritsukiB": output = "Wall Kunai"; break;
					case "Kunai_Wall_Mitame": output = "Wall Kunai"; break;				
					case "HaritsukiC": output = "Wall Leaf Grab"; break;
					case "HaritsukiD": output = "Wall Air Leaf Grab"; break;
					case "Genyouzan": output = "Wall Air Leaf Grab"; break;
					case "GenyouzanExe": output = "Wall Air Leaf Grab"; break;
					case "Shuriken": output = "Shuriken"; foundException = 1; break;
					case "ShurikenObj": output = "Slow Shuriken"; break;
					case "ShurikenObj1": output = "Fast Shuriken"; break;
					case "Meisai": output = "Meisai"; foundException = 1; break;
				}
			}
			 
			if (mode == "Numpad" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "WarpA": output = "22P"; break;
					case "WarpB": output = "22K"; break;
					case "WarpC": output = "22S"; break;
					case "WarpD": output = "22H"; break;
					case "AlphaBlade": output = "236P"; break;
					case "AirAlphaBlade": output = "j236P"; break;
					case "AlphaPlus": output = "~H"; break;
					case "Tobiagari": output = "623H"; break;
					case "HiritsukiKeep": output = "Wall Cling"; break;
					case "BetaBlade": output = "623S"; break;
					case "AirBetaBlade": output = "j623S"; break;
					case "GammaBlade": output = "41236H"; break;
					case "SankakuTobiDown": output = "~2"; break;
					//Exception. Used for Wall Situation
					case "Genrouzan": output = "Leaf Grab"; break;
					case "GenrouzanExe": output = "Leaf Grab"; break;
					case "Sushi": output = "236S"; break;
					case "Sukiyaki": output = "~236S"; break;
					case "Banzai": output = "~236K"; break;
					case "ZanseiRouga": output = "632146H"; break;
					case "BankiMessai": output = "236236K"; break;
					case "6WayKunai": output = "j214214K"; break;
					case "Kunai": output = "j214214K (Hit)"; break;
					case "HaritsukiA": output = "Wall P"; break;
					case "HaritsukiB": output = "Wall K"; break;
					case "Kunai_Wall_Mitame": output = "Wall K"; break;				
					case "HaritsukiC": output = "Wall S"; break;
					case "HaritsukiD": output = "Wall H"; break;
					case "Genyouzan": output = "Leaf Grab (Air)"; break;
					case "GenyouzanExe": output = "Leaf Grab (Air)"; break;
					case "Shuriken": output = "j214P"; break;
					case "ShurikenObj": output = "j214P (Slow)"; break;
					case "ShurikenObj1": output = "j214P (Fast)"; break;
					case "Meisai": output = "214K"; foundException = 1; break;
				}
			}
		}
		
		//Dizzy
		if (character == "Dizzy" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				if (state.includes("Hanashi"))
				{
					switch(state)
					{
						case "HanashiD": output = "214H"; break;
						case "HanashiObjD": output = "214H (Hit)"; break;
						case "HanashiE": output = "214D"; break;
						case "HanashiObjE": output = "214D (Hit)"; break;
						case "HanashiC": output = "214S"; break;
						case "HanashiObjC": output = "214S (Hit)"; break;
						case "HanashiA": output = "214P (Hit)"; break;
						case "HanashiObjA": output = "214P (Hit)"; break;
						case "HanashiB": output = "214K"; break;
						case "HanashiObjB": output = "214K (Hit)"; break;
						case "HanashiD_Air": output = "j214H"; break;
						case "HanashiC_Air": output = "j214S"; break;
						case "HanashiE_Air": output = "j214D"; break;
						case "HanashiA_Air": output = "j214P"; break;
						case "HanashiB_Air": output = "j214K"; break;
					}
				} 
				else
				{
					switch(state)
					{
						case "AwaP": output = "j236P"; break;
						case "AwaPObj": output = "j236P (Hit)"; break;
						case "AwaK": output = "j236K"; break;
						case "AwaKObj": output = "j236K"; break;
						case "Akari": output = "236K"; break;
						case "AkariUndine": output = "236P"; break;
						//Exception AkariObj used for Fire and Ice.
						case "AkariObj": output = "236P/K (Hit)"; break;
						case "Kinomi": output = "421S"; break;
						case "KinomiNecro": output = "421H"; break;
						case "KinomiObjNecrobomb": output = "421H (Hit)"; break;
						case "KinomiNecroObj": output = "421H (Hit)"; break;
						case "KinomiNecroObj1": output = "421H (Hit)"; break;
						case "KinomiNecroObj2": output = "421H (Hit)"; break;
						case "Sakana": output = "236S"; break;
						case "SakanaNecro": output = "236H"; break;
						//Exception. SakanaObj have the same object name.
						case "SakanaObj": output = "Pillar (Hit)"; break;
						case "Laser": output = "Laser (Hit)"; break;
						case "ImperialRay": output = "632146S"; break;
						case "GammaRay": output = "64641236H"; break;
						case "GammaRayLaser": output = "64641236H (Hit)"; break;
						case "GammaRayLaserMax": output = "64641236H (Hit)"; break;
						case "ImperialRayBakuhatsu": output = "632146S (Hit)"; break;
						case "ImpBombEff": output = "632146S (Hit)"; break;
						case "KirikaeshiKakusei": output = "632146P"; break;
					}
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				if (state.includes("Hanashi"))
				{
					switch(state)
					{
						case "HanashiD": output = "H Fish"; break;
						case "HanashiObjD": output = "H Fish"; break;
						case "HanashiE": output = "D Fish"; break;
						case "HanashiObjE": output = "D Fish"; break;
						case "HanashiC": output = "S Fish"; break;
						case "HanashiObjC": output = "S Fish"; break;
						case "HanashiA": output = "P Fish"; break;
						case "HanashiObjA": output = "P Fish"; break;
						case "HanashiB": output = "K Fish"; break;
						case "HanashiObjB": output = "K Fish"; break;
						case "HanashiD_Air": output = "Air H Fish"; break;
						case "HanashiC_Air": output = "Air S Fish"; break;
						case "HanashiE_Air": output = "D Fish"; break;
						case "HanashiA_Air": output = "Air P Fish"; break;
						case "HanashiB_Air": output = "Air K Fish"; break;
					}
				} 
				else
				{
					switch(state)
					{
						case "AwaP": output = "Water Bubble"; break;
						case "AwaPObj": output = "Water Bubble"; break;
						case "AwaK": output = "Fire Bubble"; break;
						case "AwaKObj": output = "Fire Bubble"; break;
						case "Akari": output = "Fire Scythe"; break;
						case "AkariNecro": output = "Fire Scythe"; break;
						case "AkariUndine": output = "Ice Scythe"; break;
						//Exception AkariObj used for Fire and Ice.
						case "AkariObj": output = "Scythe"; break;
						case "Kinomi": output = "Ice Spear"; break;
						case "KinomiNecro": output = "Fire Spear"; break;
						case "KinomiObjNecrobomb": output = "Fire Spear"; break;
						case "KinomiNecroObj": output = "Fire Spear"; break;
						case "KinomiNecroObj1": output = "Fire Spear"; break;
						case "KinomiNecroObj2": output = "Fire Spear"; break;
						case "Sakana": output = "Ice Pillar"; break;
						case "SakanaNecro": output = "Fire Pillar"; break;
						//Exception. SakanaObj have the same object name.
						case "SakanaObj": output = "Pillar"; break;
						case "Laser": output = "Laser"; break;
						case "ImperialRay": output = "Imperial Ray"; break;
						case "GammaRay": output = "Gamma Ray"; break;
						case "GammaRayLaser": output = "Gamma Ray"; break;
						case "GammaRayLaserMax": output = "Gamma Ray"; break;
						case "ImperialRayBakuhatsu": output = "Imperial Ray"; break;
						case "ImpBombEff": output = "Imperial Ray"; break;
						case "KirikaeshiKakusei": output = "Mirror"; break;
					}
				}
			}
		}
		
		//Elphelt
		if (character == "Elphelt" || character == "all" && output == state && foundException == 0)
		{
			variable = 0;
			
			if (mode == "TTS Friendly")
			{
				switch(state)
				{
					case "Grenade_Air_Throw": output = "Air Pineberry"; break;
					case "Shotgun_Rolling2": output = "Roll"; break;
					case "BridalExpress_Land": output = "Bridal Express"; break;
					case "BridalExpress_Air": output = "Air Bridal Express"; break;
					case "Shotgun_Fire_MAX": output = "Charged Shotgun"; break;
				}
			}
			 
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "Grenade_Land_Standby": output = "Pineberry Pull"; break;
					case "Grenade_Land_Throw_Down": output = "Low Pineberry Toss"; break;
					case "Grenade_Air_Throw": output = "Air Pineberry Toss"; break;
					case "Grenade_Land_Throw_Upper": output = "High Pineberry Toss"; break;
					case "GrenadeBomb_Explode": output = "Pineberry Explosion"; break;
					case "GrenadeBomb": output = "Pineberry"; break;
					case "Rifle_Start": output = "Sniper Stance"; break;
					case "Rifle_End": output = "Sniper Stance"; break;
					case "Rifle_Fire": output = "Sniper Shot"; break;
					case "Rifle_Fire_MAX": output = "Charged Sniper Shot"; break;
					case "Rifle_Fire_MIN": output = "Sniper Shot"; break;
					case "Rifle_Reload": output = "Sniper Reload"; break;
					case "Shotgun_Rolling2": output = "Roll and Aim"; break;
					case "Shotgun_Rolling": output = "Shotgun K"; break;
					case "Shotgun_Koduki": output = "Shotgun P"; break;
					case "Shotgun_Upper": output = "Shotgun S"; break;
					case "Shotgun_Fire_MAX": output = "Charged Shotgun H"; break;
					case "Shotgun_Fire_MIN": output = "Shotgun H"; break;
					case "Shotgun_CQC": output = "Shotgun D"; break;
					case "Shotgun_CQCExe": output = "Shotgun D"; break;
					case "Shotgun_End": output = "Shotgun Cancel"; break;
					case "Shotgun_Reload": output = "Shotgun Reload"; break;
					case "BridalExpress_Land": output = "Bridal Express"; break;
					case "BridalExpress_Air": output = "Air Bridal Express"; break;
					case "Judge_BetterHalf": output = "Judge Better Half"; break;
					case "Bazooka": output = "Bazooka"; break;
				}
			}
			 
			if(mode == "Numpad" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "Grenade_Land_Standby": output = "236P"; break;
					case "Grenade_Land_Throw_Down": output = "Pineberry 2P"; break;
					case "Grenade_Air_Throw": output = "Pineberry jP"; break;
					case "Grenade_Land_Throw_Upper": output = "Pineberry 4P"; break;
					case "GrenadeBomb_Explode": output = "Pineberry (Hit)"; break;
					case "GrenadeBomb": output = "Pineberry (Hit)"; break;
					case "Rifle_Start": output = "236S"; break;
					case "Rifle_Fire": output = "Sniper H"; break;
					case "Rifle_Fire_MAX": output = "Max Sniper H"; break;
					case "Rifle_Fire_MIN": output = "Sniper H"; break;
					case "Rifle_Reload": output = "46S"; break;
					case "Shotgun_Rolling2": output = "236K"; break;
					case "Shotgun_Rolling": output = "Shotgun K"; break;
					case "Shotgun_Koduki": output = "Shotgun P"; break;
					case "Shotgun_Upper": output = "Shotgun S"; break;
					case "Shotgun_Fire_MAX": output = "Max Shotgun H"; break;
					case "Shotgun_Fire_MIN": output = "Shotgun H"; break;
					case "Shotgun_CQC": output = "Shotgun D"; break;
					case "Shotgun_CQCExe": output = "Shotgun D"; break;
					case "Shotgun_End": output = "Shotgun 236H"; break;
					case "Shotgun_Reload": output = "Shotgun 46H"; break;
					case "BridalExpress_Land": output = "214K"; break;
					case "BridalExpress_Air": output = "j214K"; break;
					case "Judge_BetterHalf": output = "236236K"; break;
					case "Bazooka": output = "632146H"; break;
					case "Bazooka_Explosive": output = "632146H (Hit)"; break;
				}
				
			}
		}
		
		//Faust
		if (character == "Faust" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				if (state.includes("Item"))
				{
					switch (state)
					{
						case "Item_Hammer": output = "Hammer"; break;
						case "Item_Oilcan": output = "Oil"; break;
						case "Item_BlackHole": output = "Black Hole"; break;
						case "Item_Bomb": output = "Bomb"; break;
						case "Item_Helium": output = "Helium Gas"; break;
						case "Item_Meteo": output = "Meteors"; break;
						case "Item_ChibiFaust": output = "Mini-Faust"; break;
						case "Item_Frasco": output = "Poison"; break;
						case "SubItem_Poison": output = "Poison"; break;
						case "Item_Chocolate": output = "Chocolate"; break;
						case "Item_Donut": output = "Doughnut"; break;
						case "Jumpdai_Loop": output = "Jump Pad"; break;
						case "Jumpdai_Hatudo": output = "Jump Pad"; break;
						case "Item_100t": output = "100 Ton Weight"; break;
						case "Item_FireWorks": output = "Fireworks"; break;
						case "Item_Armageddon": output = "Big Meteor"; break;
						case "Item_GoldenHammer": output = "Golden Hammer"; break;
						case "Item_BigFaust": output = "Big Mini-Faust"; break;
						case "Item_BestChocolate": output = "Valentine's Chocolate"; break;
						case "Item_ManyDonuts": output = "Box of Donuts"; break;
						case "Item_Golden100t": output = "10,000 Ton Weight"; break;
					}
				}
				else if (state.includes("Souten"))
				{
					switch(state)
					{
						case "Souten": output = "236S"; break;
						case "SoutenD": output = "Pogo H"; break;
						case "Souten66": output = "Pogo 66"; break;
						case "Souten44": output = "Pogo 44"; break;
						case "Souten9": output = "Pogo 9"; break;
						case "SoutenA": output = "Pogo P"; break;
						case "SoutenB": output = "Pogo K"; break;
						case "SoutenC": output = "Pogo S"; break;
						case "SoutenE": output = "Pogo D"; break;
						case "Souten8": output = "Pogo 8"; break;	
					}
				} 
				else
				{
					switch(state)
					{
						case "AirGoingMyWay": output = "j236H"; break;
						case "Mettagiri": output = "214H"; break;
						case "CrouchFWalk": output = "Crawl"; break;	
						case "Ai": output = "j236P"; break;
						case "UshirokaraIkimasuyo": output = "214K"; break;
						case "MaekaraIkimasuyo": output = "214P"; break;
						case "UekaraIkimasuyo": output = "214S"; break;
						case "NanigaDerukana": output = "236P"; break;
						case "NaNaNaNanigaDerukana": output = "236236P"; break;
						case "SugoiNaNaNaNanigaDerukana": output = "236236236P"; break;
						case "MeteoInseki": output = "Meteors"; break;
						case "Shigeki": output = "236236S"; break;
					}
				}
			}

			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "Item_100t": output = "One Hundred Ton Weight"; break;
					case "Item_Golden100t": output = "Ten Thousand Ton Weight"; break;
					case "Souten66": output = "Pogo 6 6"; break;
					case "Souten44": output = "Pogo 4 4"; break;
					case "SugoiNaNaNaNanigaDerukana": output = "Hundred Meter Item Super"; break;
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				if (state.includes("Item"))
				{
					switch (state)
					{
						case "Item_Hammer": output = "Hammer"; break;
						case "Item_Oilcan": output = "Oil"; break;
						case "Item_BlackHole": output = "Black Hole"; break;
						case "Item_Bomb": output = "Bomb"; break;
						case "Item_Helium": output = "Helium Gas"; break;
						case "Item_Meteo": output = "Meteors"; break;
						case "Item_ChibiFaust": output = "Mini-Faust"; break;
						case "Item_Frasco": output = "Poison"; break;
						case "SubItem_Poison": output = "Poison"; break;
						case "Item_Chocolate": output = "Chocolate"; break;
						case "Item_Donut": output = "Doughnut"; break;
						case "Jumpdai_Loop": output = "Jump Pad"; break;
						case "Jumpdai_Hatudo": output = "Jump Pad"; break;
						case "Item_100t": output = "100 Ton Weight"; break;
						case "Item_FireWorks": output = "Fireworks"; break;
						case "Item_Armageddon": output = "Big Meteor"; break;
						case "Item_GoldenHammer": output = "Golden Hammer"; break;
						case "Item_BigFaust": output = "Big Mini-Faust"; break;
						case "Item_BestChocolate": output = "Valentine's Chocolate"; break;
						case "Item_ManyDonuts": output = "Box of Donuts"; break;
						case "Item_Golden100t": output = "10,000 Ton Weight"; break;
					}
				}
				else if (state.includes("Souten"))
				{
					switch(state)
					{
						case "Souten": output = "Pogo"; break;
						case "SoutenD": output = "Going My Way"; break;
						case "Souten66": output = "Pogo 66"; break;
						case "Souten44": output = "Pogo 44"; break;
						case "Souten9": output = "Pogo Hop"; break;
						case "SoutenA": output = "Pogo P"; break;
						case "SoutenB": output = "K Flower"; break;
						case "SoutenC": output = "S Flower"; break;
						case "SoutenE": output = "Pogo Item"; break;
						case "Souten8": output = "Doctor Copter"; break;	
					}
				} 
				else
				{
					switch(state)
					{
						case "AirGoingMyWay": output = "Air Going My Way"; break;
						case "Mettagiri": output = "Hack n' Slash"; break;
						case "CrouchBWalk": output = "Low Block"; break;
						case "CrouchFWalk": output = "Crawl"; break;	
						case "Ai": output = "Love"; break;
						case "UshirokaraIkimasuyo": output = "K Door"; break;
						case "MaekaraIkimasuyo": output = "P Door"; break;
						case "UekaraIkimasuyo": output = "S Door"; break;
						case "NanigaDerukana": output = "Item Toss"; break;
						case "NaNaNaNanigaDerukana": output = "Super Item Toss"; break;
						case "SugoiNaNaNaNanigaDerukana": output = "100 Meter Item Super"; break;
						case "MeteoInseki": output = "Meteors"; break;
						case "Shigeki": output = "Stimulating Fists of Annihilation"; break;
					}
				}
			}				
		}
		
		//Ino
		if (character == "Ino" || character == "all" && output == state && foundException == 0)
		{
			if(mode == "Numpad")
			{
				switch(state)
				{
					case "TaibokuC": output = "41236S"; break;
					case "TaibokuD": output = "41236H"; break;
					case "KouutsuOnkai": output = "214P"; break;
					case "Onpu": output = "214P (Hit)"; break;
					case "ChemicalB": output = "214K"; break;
					case "ChemicalAirB": output = "j214K"; break;
					case "BChemiLaser": output = "214K (Hit)"; break;
					case "ChemicalC": output = "214S"; break;
					case "ChemicalAdd": output = "~214S"; break;
					case "AddChemiLaser": output = "~214S"; break;
					case "ChemicalAirC": output = "j214S"; break;
					case "KyougenA": output = "j236P"; break;
					case "KyougenB": output = "j236K"; break;
					case "KyougenC": output = "j236S"; break;
					case "KyougenD": output = "j236H"; break;
					//Exception For Command Throw required
					case "CommandThrow": output = "214H"; break;
					case "CommandThrowExe": output = "214H"; break;
					case "Madogiwa": output = "632146H"; break;
					case "MadogiwaObj": output = "632146H (Hit)"; break;
					case "Genkai": output = "j2363214S"; break;
					case "GenkaiObj": output = "j2363214S (Hit)"; break;
				}
			}
			 
			if(mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "ChemicalB": output = "H C L"; break;
					case "ChemicalAirB": output = "Air H C L"; break;
					case "BChemiLaser": output = "H C L"; break;
					case "ChemicalC": output = "V C L"; break;
				}
			}
			 
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "TaibokuC": output = "S Stroke"; break;
					case "TaibokuD": output = "H Stroke"; break;
					case "KouutsuOnkai": output = "Note"; break;
					case "Onpu": output = "Note"; break;
					case "ChemicalB": output = "HCL"; break;
					case "ChemicalAirB": output = "Air HCL"; break;
					case "BChemiLaser": output = "HCL"; break;
					case "ChemicalC": output = "VCL"; break;
					case "ChemicalAdd": output = "Chemical Love Followup"; break;
					case "AddChemiLaser": output = "Chemical Love Followup"; break;
					case "ChemicalAirC": output = "Air VCL"; break;
					case "KyougenA": output = "P Dive"; break;
					case "KyougenB": output = "K Dive"; break;
					case "KyougenC": output = "S Dive"; break;
					case "KyougenD": output = "H Dive"; break;
					//Exception For Command Throw required
					case "CommandThrow": output = "Sterilization Method"; break;
					case "CommandThrowExe": output = "Sterilization Method"; break;
					case "Madogiwa": output = "Longing Desperation"; break;
					case "MadogiwaObj": output = "Longing Desperation"; break;
					case "Genkai": output = "Ultimate Fortissimo"; break;
					case "GenkaiObj": output = "Ultimate Fortissimo"; break;
				}
			}
		}
		//JackO
		if (character == "JackO" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				switch(state)
				{
					case "Zest": output = "2D"; break;
					case "AirZest": output = "j2D"; break;
					case "UntieKiron'sChain": output = "jD"; break;
					case "CommandThorw": output = "6D"; break;
					case "CommandThorwEx": output = "6D"; break;
					case "IronballGenocide": output = "4D"; break;
					case "IronballGenocideEx": output = "4D"; break;
					//Exception Needed
					case "Calvados": output = "214S"; foundException = 1; break;
					case "Calvados_exprode": output = "214S (Hit)"; break;
					case "CalvadosObj": output = "214S (Hit)"; break;
					case "ScrewPileDriver": output = "6248P"; break;
					case "ScrewPileDriverEx": output = "6248P"; break;
					case "SummonGhostA": output = "22P"; break;
					case "SummonGhostB": output = "22K"; break;
					case "SummonGhostC": output = "22S"; break;
					case "OrganOpen": output = "22H"; break;
					case "GhostA": output = "House Toss"; break;
					case "GhostB": output = "House Toss"; break;
					case "GhostC": output = "House Toss"; break;
					case "ServantA": output = "P Servant"; break;
					case "ServentB": output = "K Servant"; break;
					case "ServantC": output = "S Servant"; break;
					case "Aigisfield": output = "Organ H"; break;
					case "Suicidal_explosion": output  = "Suicide Explosion"; break;
					case "Suicidal_explosion1": output  = "Suicide Explosion"; break;
					case "Suicidal_explosion2": output = "Suicide Explosion"; break;
					case "Suicidal_explosion3": output = "Suicide Explosion"; break;
				}
			}					
			 
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "UntieKiron'sChain": output = "jump D"; break;
					case "OrganOpen": output = "Organ"; break;
					case "IronballGenocide": output = "Four D"; break;
					case "IronballGenocideEx": output = "Four D"; break;
					//Might be weird
					case "SummonGhostA": output = "P House"; break;
					case "SummonGhostB": output = "K House"; break;
					case "SummonGhostC": output = "S House"; break;
					case "GhostA": output = "House Toss"; break;
					case "GhostB": output = "House Toss"; break;
					case "GhostC": output = "House Toss"; break;
				}
			}
			 
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "Zest": output = "Zest"; break;
					case "AirZest": output = "Air Zest"; break;
					case "UntieKiron'sChain": output = "Remove the Chain"; break;
					case "CommandThorw": output = "Elysion Driver"; break;
					case "CommandThorwEx": output = "Elysion Driver"; break;
					case "IronballGenocide": output = "Hunger of Dopros"; break;
					case "IronballGenocideEx": output = "Hunger of Dopros"; break;
					//Exception Needed
					case "Calvados": output = "Calvados"; foundException = 1; break;
					case "Calvados_exprode": output = "Calvados"; break;
					case "CalvadosObj": output = "Calvados"; break;
					case "ScrewPileDriver": output = "Forever Elysion Driver"; break;
					case "ScrewPileDriverEx": output = "Forever Elysion Driver"; break;
					case "SummonGhostA": output = "Set P House"; break;
					case "SummonGhostB": output = "Set K House"; break;
					case "SummonGhostC": output = "Set S House"; break;
					case "OrganOpen": output = "Organ Deployment"; break;
					case "GhostA": output = "P House"; break;
					case "GhostB": output = "K House"; break;
					case "GhostC": output = "S House"; break;
					case "ServantA": output = "P Servant"; break;
					case "ServentB": output = "K Servant"; break;
					case "ServantC": output = "S Servant"; break;
					case "Aigisfield": output = "Aegis Field"; break;
					case "Suicidal_explosion": output  = "Suicide Explosion"; break;
					case "Suicidal_explosion1": output  = "Suicide Explosion"; break;
					case "Suicidal_explosion2": output = "Suicide Explosion"; break;
					case "Suicidal_explosion3": output = "Suicide Explosion"; break;
				}
			}
		}
		
		//Jam		
		if (character == "Jam" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				if(state.includes("Kenroukaku"))
				{
					switch(state)
					{
						case "KenroukakuLand": output = "623K"; break;
						case "KenroukakuKyoukaLand": output = "Carded 623K"; break;
						case "KenroukakuAir": output = "j623K"; break;
						case "KenroukakuKyoukaAir": output = "Card j623K"; break;
						case "Kenroukaku_zanzou1_sp": output = "Max 623K"; break;
						case "Kenroukaku_zanzou2_sp": output = "Max 623K"; break;
						case "Kenroukaku_zanzou3_sp": output = "Max 623K"; break;
						case "Kenroukaku_zanzou4_sp": output = "Max 623K"; break;
						case "Kenroukaku_zanzou1_normal": output = "623K"; break;
						case "Kenroukaku_zanzou2_normal": output = "623K"; break;
						case "Kenroukaku_zanzou3_normal": output = "623K"; break;
						case "Kenroukaku_zanzou4_normal": output = "623K"; break;
						case "Kenroukaku_zanzou1": output = "Card 623K"; break;
						case "Kenroukaku_zanzou2": output = "Card 623K"; break;
						case "Kenroukaku_zanzou3": output = "Card 623K"; break;
						case "Kenroukaku_zanzou4": output = "Card 623K"; break;
						case "Kenroukaku_sp1": output = "Card 623K"; break;
						case "Kenroukaku_sp2": output = "Max 623"; break;
					}
				} 
				else
				{
					switch(state)
					{
						
						//Exception required if you want to call it Bakushuu
						case "Youeikyaku": output = "j2K"; break;
						case "Bakushuu": output = "236S"; foundException = 1;  break;
						case "Mawarikomi": output = "~P"; break;
						case "RyujinLand": output = "236K"; break;
						case "RyujinAir": output = "j236K"; break;
						case "RyujinKyoukaLand": output = "Card 236K"; break;
						case "RyujinKyoukaAir": output = "Card j236K"; break;
						case "Ryujin_sp1": output = "Card 236K"; break;
						case "Ryujin_sp2": output = "Max 236K"; break;
						case "GekirinLand": output = "214K"; break;
						case "GekirinAir": output = "j214K"; break;
						case "GekirinKyoukaAir": output = "Card j214K"; break;
						case "Gekirin_sp1": output = "Card 214K"; break;
						case "Gekirin_sp2": output = "Max 214K"; break;	
						case "HyappoShinshou": output = "~S"; break;
						case "SenriShinshou": output = "~H"; break;
						case "Ashibarai": output = "~K"; break;
						case "NeoHochihu": output = "46"; break;
						case "TuikaA": output = "~P"; break;
						case "TuikaAA": output = "~P"; break;
						case "TuikaAB": output = "~K"; break;
						case "AsanagiB": output = "22K"; break;
						case "AsanagiC": output = "22S"; break;
						case "AsanagiD": output = "22H"; break;
						case "Asanagi_long": output = "22[X]"; break;
						case "Hououshou": output = "62146KS"; break;
						//Exception required
						case "Renhoukyaku": output = "632146H";  foundException = 1; break;
						case "RenhoukyakuObj": output = "632146H (Hit)"; break;
						case "Saishingeki": output = "236236H";  foundException = 1; break;
						case "Saisinsyou_tossin": output = "236236H (lol)"; break;
						
					}
				}
			}
			 
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					
					case "RyujinLand": output = "Dragon Kick"; break;
					case "RyujinAir": output = "Air Dragon Kick"; break;
					case "RyujinKyoukaLand": output = "Carded Dragon Kick"; break;
					case "RyujinKyoukaAir": output = "Air Carded Dragon Kick"; break;
					case "Ryujin_sp1": output = "Carded Dragon Kick"; break;
					case "Ryujin_sp2": output = "Max Dragon Kick"; break;
					case "Hououshou": output = "Hoh oh shou"; break;
					//Exception required
					case "Renhoukyaku": output = "Big Puffball";  foundException = 1; break;
					case "RenhoukyakuObj": output = "Big Puffball"; break;
					case "Saishingeki": output = "Saishingeki";  foundException = 1; break;
					case "Saisinsyou_tossin": output = "Sashingeki Whiff"; break;	
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				if(state.includes("Kenroukaku"))
				{
					switch(state)
					{
						
						case "KenroukakuLand": output = "Kenroukaku"; break;
						case "KenroukakuKyoukaLand": output = "Carded Kenroukaku"; break;
						case "KenroukakuAir": output = "Air Kenroukaku"; break;
						case "KenroukakuKyoukaAir": output = "Carded Air Kenroukaku"; break;
						case "Kenroukaku_zanzou1_sp": output = "Max Kenroukaku"; break;
						case "Kenroukaku_zanzou2_sp": output = "Max Kenroukaku"; break;
						case "Kenroukaku_zanzou3_sp": output = "Max Kenroukaku"; break;
						case "Kenroukaku_zanzou4_sp": output = "Max Kenroukaku"; break;
						case "Kenroukaku_zanzou1_normal": output = "Kenroukaku"; break;
						case "Kenroukaku_zanzou2_normal": output = "Kenroukaku"; break;
						case "Kenroukaku_zanzou3_normal": output = "Kenroukaku"; break;
						case "Kenroukaku_zanzou4_normal": output = "Kenroukaku"; break;
						case "Kenroukaku_zanzou1": output = "Carded Kenroukaku"; break;
						case "Kenroukaku_zanzou2": output = "Carded Kenroukaku"; break;
						case "Kenroukaku_zanzou3": output = "Carded Kenroukaku"; break;
						case "Kenroukaku_zanzou4": output = "Carded Kenroukaku"; break;
						case "Kenroukaku_sp1": output = "Carded Kenroukaku"; break;
						case "Kenroukaku_sp2": output = "Max Kenroukaku"; break;
						
					}
				} 
				else
				{
					switch(state)
					{
						
						//Exception required if you want to call it Bakushuu
						case "Youeikyaku": output = "Divekick"; break;
						case "Bakushuu": output = "Bakushuu"; foundException = 1;  break;
						case "Mawarikomi": output = "Mawari"; break;
						case "RyujinLand": output = "Ryuujin"; break;
						case "RyujinAir": output = "Air Ryuujin"; break;
						case "RyujinKyoukaLand": output = "Carded Ryuujin"; break;
						case "RyujinKyoukaAir": output = "Air Carded Ryuujin"; break;
						case "Ryujin_sp1": output = "Carded Ryuujin"; break;
						case "Ryujin_sp2": output = "Max Ryuujin"; break;
						case "GekirinLand": output = "Gekirin"; break;
						case "GekirinAir": output = "Air Gekirin"; break;
						case "GekirinKyoukaAir": output = "Carded Air Gekirin"; break;
						case "Gekirin_sp1": output = "Carded Gekirin"; break;
						case "Gekirin_sp2": output = "Max Gekirin"; break;	
						case "HyappoShinshou": output = "S Puffball"; break;
						case "SenriShinshou": output = "H Puffball"; break;
						case "Ashibarai": output = "Hamon"; break;
						case "NeoHochihu": output = "Parry"; break;
						case "TuikaA": output = "Zekkei"; break;
						case "TuikaAA": output = "Goushao"; break;
						case "TuikaAB": output = "Dowanga"; break;
						case "AsanagiB": output = "K Card"; break;
						case "AsanagiC": output = "S Card"; break;
						case "AsanagiD": output = "H Card"; break;
						case "Asanagi_long": output = "Full Charge Card"; break;
						case "Hououshou": output = "Hou'oushou"; break;
						//Exception required
						case "Renhoukyaku": output = "Big Puffball";  foundException = 1; break;
						case "RenhoukyakuObj": output = "Big Puffball"; break;
						case "Saishingeki": output = "Saishingeki";  foundException = 1; break;
						case "Saisinsyou_tossin": output = "Sashingeki Whiff"; break;
						
					}
				}
			}
		}
		
		//Johnny
		if (character == "Johnny" || character == "all" && output == state && foundException == 0)
		{
			if(mode == "Numpad")
			{
				if (state.includes("MistFiner"))
				{
					switch(state)
					{
						case "MistFinerFDash": output = "~66"; break;
						case "MistFinerBDash": output = "~44"; break;	
						case "MistFinerLoop": output = "214P/K/S"; break;
						case "AirMistFinerLoop": output = "j214P/K/S"; break;
						case "MistFinerALv0": output = "!P"; break;
						case "MistFinerALv1": output = "!P"; break;
						case "MistFinerALv2": output = "!P"; break;
						case "MistFinerBLv0": output = "!K"; break;
						case "MistFinerBLv1": output = "!K"; break;
						case "MistFinerBLv2": output = "!K"; break;
						case "MistFinerCLv0": output = "!S"; break;
						case "MistFinerCLv1": output = "!S"; break;
						case "MistFinerCLv2": output = "!S"; break;
						case "AirMistFinerALv0": output = "!P"; break;
						case "AirMistFinerALv1": output = "!P"; break;
						case "AirMistFinerALv2": output = "!P"; break;
						case "AirMistFinerBLv0": output = "!K"; break;
						case "AirMistFinerBLv1": output = "!K"; break;
						case "AirMistFinerBLv2": output = "!K"; break;
						case "AirMistFinerCLv0": output = "!S"; break;
						case "AirMistFinerCLv1": output = "!S"; break;
						case "AirMistFinerCLv2": output = "!S"; break;
						case "MistFinerCancel": output = "~H"; break;
						case "AirMistFinerCancel": output = "~H"; break;
						case "MistFinerDehajime": output = "214P/K/S"; break;
						case "AirMistFinerDehajime": output = "j214P/K/S"; break;
					}
				}
				else
				{
					switch(state)
					{
						case "Sinwaza": output = "623K"; break;
						case "Sinwaza_Shot": output = "~K"; break;
						case "Sinwaza_Air": output = "j623K"; break;
						case "GlitterIsGold": output = "236P"; break;
						case "Coin": output = "236P (Hit)"; break;
						case "BucchusSigh": output = "41236P"; break;
						case "MisEffParts": output = "41236P"; break;
						case "MistKuttsuku": output = "41236P"; break;
						case "Orenona": output = "2363214H"; break;
						case "OrenonaExe": output = "2363214H"; break;
						case "TreasureHunt": output = "632146S"; break;
						case "StepTreasureHunt": output = "Step 632146S"; break;
					}
				}
			}
		}
		 
		
		if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
		{
			if (state.includes("MistFiner"))
			{
				switch(state)
				{
					case "MistFinerFDash": output = "Mist Finer Step"; break;
					case "MistFinerBDash": output = "Mist Finer Backstep"; break;	
					case "MistFinerLoop": output = "Mist Finer"; break;
					case "AirMistFinerLoop": output = "Mist Finer"; break;
					case "MistFinerALv0": output = "P Mist Finer"; break;
					case "MistFinerALv1": output = "Level 2 P Finer"; break;
					case "MistFinerALv2": output = "Level 3 P Finer"; break;
					case "MistFinerBLv0": output = "K Mist Finer"; break;
					case "MistFinerBLv1": output = "Level 2 K Finer"; break;
					case "MistFinerBLv2": output = "Level 3 K Finer"; break;
					case "MistFinerCLv0": output = "S Mist Finer"; break;
					case "MistFinerCLv1": output = "Level 2 S Finer"; break;
					case "MistFinerCLv2": output = "Level 3 S Finer"; break;
					case "AirMistFinerALv0": output = "Air P Mist Finer"; break;
					case "AirMistFinerALv1": output = "Air Level 2 P Finer"; break;
					case "AirMistFinerALv2": output = "Air Level 3 P Finer"; break;
					case "AirMistFinerBLv0": output = "Air K Mist Finer"; break;
					case "AirMistFinerBLv1": output = "Air Level 2 K Finer"; break;
					case "AirMistFinerBLv2": output = "Air Level 3 K Finer"; break;
					case "AirMistFinerCLv0": output = "Air S Mist Finer"; break;
					case "AirMistFinerCLv1": output = "Air Level 2 S Finer"; break;
					case "AirMistFinerCLv2": output = "Air Level 3 S Finer"; break;
					case "MistFinerCancel": output = "Mist Finer Cancel"; break;
					case "AirMistFinerCancel": output = "Air Mist Finer Cancel"; break;
					case "MistFinerDehajime": output = "Mist Finer"; break;
					case "AirMistFinerDehajime": output = "Mist Finer"; break;
				}
			}
			else
			{
				switch(state)
				{
					case "Sinwaza": output = "Transport"; break;
					case "Sinwaza_Shot": output = "Zweihander"; break;
					case "Sinwaza_Air": output = "Zweihander"; break;
					case "GlitterIsGold": output = "Coin"; break;
					case "Coin": output = "Coin";  foundException = 1; break;
					case "BucchusSigh": output = "Bacchus Sigh"; break;
					case "MisEffParts": output = "Bacchus Sigh Mist"; break;
					case "MistKuttsuku": output = "Bacchus Sigh Connected"; break;
					case "Orenona": output = "That's My Name"; break;
					case "OrenonaExe": output = "That's My Name"; break;
					case "TreasureHunt": output = "Treasure Hunt"; break;
					case "StepTreasureHunt": output = "Step Treasure Hunt"; break;
				}
			}
		}
		
		
		//Kum
		if (character == "Kum" || character == "all" && output == state && foundException == 0)
		{
			if(mode == "Numpad")
			{
				switch (state)
				{
					case "AntiAir6Hasei": output = "623K"; break;
					case "AntiAirAttack": output = "623K"; break;
					case "AntiAir4Hasei": output = "6234K"; break;
					case "kum406_dagekiEffEX": output = "Charged 6234K"; break;
					case "kum406_dagekiEff": output = "6234K"; break;
					case "LandBlow6Hasei": output = "214K"; break;
					case "kum407_dagekiStartEffEX": output = "Charged 2145K"; break;
					case "kum407_dagekiStartEff": output = "2145K"; break;
					case "LandBlow4Hasei": output = "21[4]K"; break;				
					case "kum409_dagekiEff": output = "21[4]K"; break;
					case "kum409_dagekiEffred": output = "Charged 21[4]K"; break;
					case "AirBlowAttack": output = "j214K"; break;
					case "EnergyBall": output = "236S/H"; break;
					case "HomingEnergyC": output = "236S"; break;
					case "HomingEnergyD": output = "236H"; break;
					case "EnergyBallC_Ready": output = "236S"; break;
					case "EnergyBallD_Ready": output = "236H"; break;
					case "BlackHoleAttack": output = "236236H"; break;
					case "VacuumAttack": output = "236236H"; break;
					case "SuperHomingEnergy": output = "236236S"; break;
					case "SuperEnergyBall": output = "236236S"; break;
				}
			}
			
			 
			
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "AntiAir6Hasei": output = "Shinken"; break;
					case "AntiAirAttack": output = "Uncharged 623K"; break;
					case "AntiAir4Hasei": output = "Reverse Shinken"; break;
					case "kum406_dagekiEffEX": output = "Red Reverse Shinken"; break;
					case "kum406_dagekiEff": output = "Blue Reverse Shinken"; break;
					case "LandBlow6Hasei": output = "Hayabusa"; break;
					case "kum407_dagekiStartEffEX": output = "Red Hayabusa"; break;
					case "kum407_dagekiStartEff": output = "Blue Hayabusa"; break;
					case "LandBlow4Hasei": output = "Reverse Hayabusa"; break;				
					case "kum409_dagekiEff": output = "Blue Reverse Hayabusa"; break;
					case "kum409_dagekiEffred": output = "Red Reverse Hayabusa"; break;
					case "AirBlowAttack": output = "Air Hayabusa"; break;
					case "EnergyBall": output = "Tuning Ball"; break;
					case "HomingEnergyC": output = "Blue Tuning Ball"; break;
					case "HomingEnergyD": output = "Red Tuning Ball"; break;
					case "EnergyBallC_Ready": output = "Blue Tuning Ball"; break;
					case "EnergyBallD_Ready": output = "Red Tuning Ball"; break;
					case "BlackHoleAttack": output = "Enlightened 3000 Palm Strike"; break;
					case "VacuumAttack": output = "Enlightened 3000 Palm Strike"; break;
					case "SuperHomingEnergy": output = "Celestial Tuning Ball"; break;
					case "SuperEnergyBall": output = "Celestial Tuning Ball"; break;
				}
			}
		}
		
		//Ky
		if (character == "Ky" || character == "all" && output == state && foundException == 0)
		{
			if(mode == "Numpad")
			{
				switch(state)
				{
					case "VaporThrustC": output = "623S"; break;
					case "VaporThrustD": output = "623H"; break;
					case "StunDipper": output = "236K"; break;
					case "StunEdge1": output = "236S"; break;
					case "StunEdgeObj": output = "236S"; break;
					case "ChargedStunEdgeObj": output = "236H (Hit)"; break;
					case "StunEdge2": output = "236H"; break;
					case "AirStunEdge1": output = "j236S"; break;
					case "AirStunEdge2": output = "j236H"; break;
					case "Thunder_stand": output = "Sigil"; break;
					case "HolyBrand": output = "236D"; break;
					case "SPStunEdgeObj": output = "Sigil 236S"; break;
					case "SPChargedStunEdgeObj": output = "Sigil 236H"; break;
					case "AirDustAttackObj": output = "jD"; break;
					case "GreedSaber": output = "214K"; break;
					case "RideTheLightning": output = "632146H"; break;
					case "SacredEdge": output = "236236P"; break;
					case "SPSacredEdgeObj": output = "Sigil 236236P"; break;
				}
			}
			 
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "VaporThrustC": output = "S Vapor Thrust"; break;
					case "VaporThrustD": output = "H Vapor Thrust"; break;
					case "StunDipper": output = "Stun Dipper"; break;
					case "StunEdge1": output = "Stun Edge"; break;
					case "StunEdgeObj": output = "Stun Edge"; break;
					case "ChargedStunEdgeObj": output = "Charged Stun Edge"; break;
					case "StunEdge2": output = "Charged Stun Edge"; break;
					case "AirStunEdge1": output = "Air S Stun Edge"; break;
					case "AirStunEdge2": output = "Air H Stun Edge"; break;
					case "Thunder_stand": output = "Sigil"; break;
					case "HolyBrand": output = "Split Ciel"; break;
					case "SPStunEdgeObj": output = "Empowered Stun Edge"; break;
					case "SPChargedStunEdgeObj": output = "Grinder"; break;
					case "AirDustAttackObj": output = "Air Sigil"; break;
					case "GreedSaber": output = "Greed Sever"; break;
					case "RideTheLightning": output = "Ride The Lightning"; break;
					case "SacredEdge": output = "SacredEdge"; break;
					case "SPSacredEdgeObj": output = "Empowered Sacred Edge"; break;
				}
			}
		}
		//Leo
		if (character == "Leo" || character == "all" && output == state && foundException == 0)
		{
			if(mode == "Numpad")
			{
				switch (state)
				{
					case "Tobidogu1": output = "[4]6S"; break;
					case "Edgeyowai": output = "[4]6S (Hit)"; break;
					case "Tobidogu2": output = "[4]6H"; break;
					case "Edgetuyoi": output = "[4]6H (Hit)"; break;
					case "AntiAirAttack1": output = "[2]8S"; break;
					case "AntiAirAttack2": output = "[2]8H"; break;
					case "Tossin2": output = "236H"; break;
					case "AirSpecial": output = "j236H"; break;
					case "AirSpecialExe": output = "j236H (Hit)"; break;
					case "Tossin1": output = "236S"; break;
					case "Tossin2_Hasei": output = "~236H"; break;
					case "SemukeDageki_Hasei": output = "~214S"; break;
					case "Semuke": output = "Backturn"; break;
					case "Semuke5A": output = "BT P"; break;
					case "Semuke5B": output = "BT K"; break;
					case "Semuke5C": output = "BT S"; break;
					case "Semuke5D": output = "BT H"; break;
					case "Semuke5E": output = "BT D"; break;
					case "SemukeBDashStep": output = "BT 44"; break;
					case "SemukeFDashStep": output = "BT 66"; break;
					case "SemukeKakusei": output = "BT 632146S"; break;
					case "Gorengeki": output = "632146H"; break;
				}
			}
			 
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "Tobidogu1": output = "S Boom"; break;
					case "Edgeyowai": output = "S Boom"; break;
					case "Tobidogu2": output = "H Boom"; break;
					case "Edgetuyoi": output = "H Boom"; break;
					case "AntiAirAttack1": output = "S Flash Kick"; break;
					case "AntiAirAttack2": output = "H Flash Kick"; break;
					case "Tossin2": output = "Berserker Slash"; break;
					case "AirSpecial": output = "Siegesparade"; break;
					case "AirSpecialExe": output = "Siegesparade"; break;
					case "Tossin1": output = "Rekka 1"; break;
					case "Tossin2_Hasei": output = "Rekka 2"; break;
					case "SemukeDageki_Hasei": output = "Rekka 3"; break;
					case "Semuke": output = "Backturn"; break;
					case "Semuke5A": output = "Backturn P"; break;
					case "Semuke5B": output = "Backturn K"; break;
					case "Semuke5C": output = "Backturn S"; break;
					case "Semuke5D": output = "Backturn H"; break;
					case "Semuke5E": output = "Counter"; break;
					case "SemukeBDashStep": output = "Back Step"; break;
					case "SemukeFDashStep": output = "Forward Step"; break;
					case "SemukeKakusei": output = "Backturn Super"; break;
					case "Gorengeki": output = "Leidenschaft Dirigent"; break;
				}
			}
		}
		//May
		if (character == "May" || character == "all" && output == state && foundException == 0)
		{
			if(mode == "Numpad")
			{
				switch(state)
				{
					case "IrukasanYokoC": output = "[4]6S"; break;
					case "IrukasanYokoD": output = "[4]6H"; break;
					case "IrukasanTateC": output = "[2]8S"; break;
					case "IrukasanTateD": output = "[2]8H"; break;
					case "RakkoBallA": output = "214P"; break;
					case "MayBallA": output = "214P (Hit)"; break;
					case "RakkoBallB": output = "214K"; break;
					case "MayBallB": output = "214K (Hit)"; break;
					case "DivingAttack": output = "j41236H"; break;
					case "OverHeadKiss": output = "623K"; break;
					case "OverHeadKissEx": output = "623K"; break;
					case "IrukasanYokoAShoukan": output = "41236P"; break;
					case "IrukasanTateAShoukan": output = "41236K"; break;
					case "IrukasanYokoBShoukan": output = "41236S"; break;
					case "IrukasanTateBShoukan": output = "41236H"; break;
					case "IrukasanRidingAttackYokoA": output = "P Ride the Dolphin"; break;
					case "IrukasanRidingAttackTateA": output = "K Ride the Dolphin"; break;
					case "IrukasanRidingAttackYokoB": output = "S Ride the Dolphin"; break;
					case "IrukasanRidingAttackTateB": output = "H Ride the Dolphin"; break;
					case "Yamada": output = "236236S"; break;
					case "Dadakko": output = "632146H"; break;
					case "Daisenpu": output = "632146S"; break;
					case "Goshogawara": output = "~P"; break;
					case "SK_Goshogawara": output = "Goshogawara (Hit)"; break;
				}
			}
			 
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "IrukasanYokoC": output = "S Totsugeki"; break;
					case "IrukasanYokoD": output = "H Totsugeki"; break;
					case "IrukasanTateC": output = "S Up Dolphin"; break;
					case "IrukasanTateD": output = "H Up Dolphin"; break;
					case "RakkoBallA": output = "P Beach Ball"; break;
					case "MayBallA": output = "P Beach Ball"; break;
					case "RakkoBallB": output = "K Beach Ball"; break;
					case "MayBallB": output = "K Beach Ball"; break;
					case "DivingAttack": output = "Ensenga?"; break;
					case "OverHeadKiss": output = "Overhead Kiss"; break;
					case "OverHeadKissEx": output = "Overhead Kiss"; break;
					case "IrukasanYokoAShoukan": output = "P Applause for the Victim"; break;
					case "IrukasanTateAShoukan": output = "K Applause for the Victim"; break;
					case "IrukasanYokoBShoukan": output = "S Applause for the Victim"; break;
					case "IrukasanTateBShoukan": output = "H Applause for the Victim"; break;
					case "IrukasanRidingAttackYokoA": output = "P Ride the Dolphin"; break;
					case "IrukasanRidingAttackTateA": output = "K Ride the Dolphin"; break;
					case "IrukasanRidingAttackYokoB": output = "S Ride the Dolphin"; break;
					case "IrukasanRidingAttackTateB": output = "H Ride the Dolphin"; break;
					case "Yamada": output = "Great Yamada Attack"; break;
					case "Dadakko": output = "Ultimate Whiner"; break;
					case "Daisenpu": output = "Ultimate Spinning Whirlwind"; break;
					case "Goshogawara": output = "Deluxe Goshogawara Bomber"; break;
					case "SK_Goshogawara": output = "Deluxe Goshogawara Bomber"; break;
				}
			}
		}
		
		//Millia
		if (character == "Millia" || character == "all" && output == state && foundException == 0)
		{
			if(mode == "Numpad")
			{
				switch(state)
				{
					case "BadMoon": output = "j236P"; break;
					case "TandemTopC": output = "236S"; break;
					case "TandemTopD": output = "236H"; break;
					case "KousokuRakka": output = "236K"; break;
					//Nothing to detect which pin
					case "SilentForceKnife": output = "Pin"; break;
					case "SilentForce": output = "j214S\H"; break;
					case "Zenten": output = "214K"; break;
					case "ZentenShaker": output = "~S"; break;
					case "SaiZenten": output = "~K"; break;
					//Exception Required
					case "Digitalis": output = "~H";  foundException = 1; break;
					case "SecretGarden": output = "214H"; break;
					case "SecretGardenBall": output = "214H (Hit)"; break;
					case "LustShaker": output = "214S"; break;
					case "LustShakerRenda": output = "~S"; break;
					case "IronSavior": output = "214P"; break;
					case "Winger": output = "2141236H"; break;
					case "ChromingRose": output = "214214S"; break;
					case "RoseObj": output = "Rose (Hit)"; break;
					case "EmeraldRain": output = "236236S"; break;
					case "EmeraldRainRing1": output = "236236S (Hit)"; break;
					case "EmeraldRainRing2": output = "236236S (Hit)"; break;
					case "EmeraldRainRing3": output = "236236S (Hit)"; break;
				}
			}
			 
			if(mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "BadMoon": output = "Bad Moon"; break;
					case "TandemTopC": output = "S Tandem Top"; break;
					case "TandemTopD": output = "H Tandem Top"; break;
					case "KousokuRakka": output = "Turbo Fall"; break;
					//Nothing to detect which pin
					case "SilentForceKnife": output = "Pin"; break;
					case "SilentForce": output = "S Pin"; break;
					case "Zenten": output = "Roll"; break;
					case "ZentenShaker": output = "Lust Shaker"; break;
					case "SaiZenten": output = "Double Roll"; break;
					//Exception Required
					case "Digitalis": output = "Digitalis";  foundException = 1; break;
					case "SecretGarden": output = "Secret Garden"; break;
					case "SecretGardenBall": output = "Secret Garden"; break;
					case "LustShaker": output = "Lust Shaker"; break;
					case "LustShakerRenda": output = "Lust Shaker"; break;
					case "IronSavior": output = "Hair Car"; break;
					case "Winger": output = "Winger"; break;
					case "ChromingRose": output = "Chroming Rose"; break;
					case "RoseObj": output = "Chroming Rose"; break;
					case "EmeraldRain": output = "Emerald Rain"; break;
					case "EmeraldRainRing1": output = "Emerald Rain"; break;
					case "EmeraldRainRing2": output = "Emerald Rain"; break;
					case "EmeraldRainRing3": output = "Emerald Rain"; break;
				}
			}
		}
		//Potemkin
		if (character == "Potemkin" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				switch (state)
				{
					case "HammerFall": output = "[4]6H"; break;
					case "HammerFallBrake ": output = "~P"; break;
					case "FDB": output = "214S"; break;
					case "MegaFistFront": output = "236P"; break;
					case "MegaFistBack": output = "214P"; break;
					case "SlideHead": output = "236S"; break;
					case "HeatKnucle": output = "623H"; break;
					case "HeatExtend": output = "63214H"; break;
					case "SlideHead_Obj": output = "236S"; break;
					case "RocketDive": output = "j41236H"; break;
					case "RocketDiveExe": output = "j41236H"; break;
					case "PotemkinBuster": output = "632146P"; break;
					case "PotemkinBusterExe": output = "632146P"; break;
					case "Anti_AirExplode": output = "214K"; break;
					//Exception
					case "Bomb": output = "214K"; break;
					case "HeavenlyPBuster": output = "236236S"; break;
					case "HeavenlyPBusterExe": output = "236236S"; break;
					case "Giganter": output = "632146H"; break;
					case "GiganterObj": output = "632146H"; break;
					case "GiganticBullet": output = "4213641236P"; break;
				}
			}	
			 
			if (mode == "TTS Friendly")
			{
				switch (state)
				{
					case "FDB": output = "F D B"; break;
					case "RocketDive": output = "I C P M"; break;
					case "RocketDiveExe": output = "I C P M"; break;
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "HammerFall": output = "Hammer Fall"; break;
					case "HammerFallBrake ": output = "Hammer Fall Brake"; break;
					case "FDB": output = "F.D.B."; break;
					case "MegaFistFront": output = "Megafist"; break;
					case "MegaFistBack": output = "Back Megafist"; break;
					case "SlideHead": output = "Slide Head"; break;
					case "HeatKnucle": output = "Heat Knuckle"; break;
					case "HeatExtend": output = "Heat Extend"; break;
					case "SlideHead_Obj": output = "Slide Head"; break;
					case "RocketDive": output = "I.C.P.M."; break;
					case "RocketDiveExe": output = "I.C.P.M."; break;
					case "PotemkinBuster": output = "Potbuster"; break;
					case "PotemkinBusterExe": output = "Potbuster"; break;
					case "Anti_AirExplode": output = "Trishula"; break;
					//Exception
					case "Bomb": output = "Trishula"; break;
					case "HeavenlyPBuster": output = "Heavenly Potemkin Buster"; break;
					case "HeavenlyPBusterExe": output = "Heavenly Potemkin Buster"; break;
					case "Giganter": output = "Giganter Kai"; break;
					case "GiganterObj": output = "Giganter Kai"; break;
					case "GiganticBullet": output = "Gigantic Bullet Kai"; break;
				}
			}
		}
		
		//Ramlethal
		if (character == "Ramlethal" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				if(state.includes("Combination"))
				{
					switch (state)
					{
						case "CombinationAA": output = "~P"; break;
						case "CombinationAAA": output = "~P"; break;
						case "CombinationAAB": output = "~K"; break;
						case "CombinationAB": output = "~K"; break;
						case "Combination4B": output = "~4K"; break;
						case "Combination2AA": output = "~P"; break;
						case "CombinationBA": output = "~P"; break;
						case "CombinationBAA": output = "~A"; break;
						case "CombinationBB": output = "~K"; break;
						case "CombinationBBB": output = "~K"; break;
						case "Combination2AAB": output = "~K"; break;
						case "Combination2AB": output = "~K"; break;
						case "Combination2BB": output = "~K"; break;
						case "Combination2BA": output = "~P"; break;
						case "Combination2BAB": output = "~K"; break;
						
					}
				}
				else
				{
					switch (state)
					{
						case "6D_Soubi_Land": output = "6H"; break;
						case "6D_Bunri_Land": output = "6H"; break;
						case "6D_Soubi_Air": output = "j6H"; break;
						case "2D_Bunri_Land": output = "2H"; break;
						case "6C_Soubi_Land": output = "6S"; break;
						case "6C_Bunri_Land": output = "6S"; break;
						case "6C_Soubi_Air": output = "j6S"; break;
						case "2C_Bunri_Land": output = "2S"; break;
						case "BitF6D": output = "Summon 6H"; break;
						case "BitN6C": output = "Summon 6H"; break;
						case "FastFujinken": output = "Perfect 623P"; break;
						case "Fujinken": output = "623P"; break;
						case "CommandThrow": output = "236K"; break;
						case "CommandThrowExe": output = "236K"; break;
						//Cross Character Exception Required
						case "BanditRevolverLand": output = "214K"; break;
						case "BanditRevolverAir": output = "j214K"; break;
						case "MiddleShot": output = "214P"; break;
						case "middleShot": output = "214P"; break;
						case "BitBlowC": output = "214S"; break;
						case "BitBlowD": output = "214H"; break;
						case "BitBlowCAir": output = "j214S"; break;
						case "BitBlowDAir": output = "j214H"; break;
						case "BitLaser": output = "632146H"; break;
						case "BitSpiral_NSpiral": output = "632146H"; break;
						case "BitSpiral": output = "632146H"; break;
						case "TosshinRanbu": output = "2363214K"; break;
						case "TosshinRanbuExe": output = "2363214K"; break;
					}
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				if(state.includes("Combination"))
				{
					switch (state)
					{
						case "CombinationAA": output = "PP Target Combo"; break;
						case "CombinationAAA": output = "PPP Target Combo"; break;
						case "CombinationAAB": output = "PPK Target Combo"; break;
						case "CombinationAB": output = "PK Target Combo"; break;
						case "Combination4B": output = "4K Target Combo Launch Ender"; break;
						case "Combination2AA": output = "P2P Target Combo Variation"; break;
						case "CombinationBA": output = "KP Target Combo"; break;
						case "CombinationBAA": output = "KPP Overhead Ender"; break;
						case "CombinationBB": output = "KK Target Combo"; break;
						case "CombinationBBB": output = "Triple K Target Combo"; break;
						case "Combination2AAB": output = "Target Combo Low Mixup"; break;
						case "Combination2AB": output = "2PK Low Target Combo"; break;
						case "Combination2BB": output = "2KK Low Target Combo"; break;
						case "Combination2BA": output = "2KP Low Target Combo"; break;
						case "Combination2BAB": output = "2KPK Overhead Ender"; break;
						
					}
				}
				else
				{
					switch (state)
					{
						case "6D_Soubi_Land": output = "6H Call"; break;
						case "6D_Bunri_Land": output = "6H Recall"; break;
						case "6D_Soubi_Air": output = "Air 6H Call"; break;
						case "2D_Bunri_Land": output = "2H Recall"; break;
						case "6C_Soubi_Land": output = "6S Call"; break;
						case "6C_Bunri_Land": output = "6S Recall"; break;
						case "6C_Soubi_Air": output = "Air 6S Call"; break;
						case "2C_Bunri_Land": output = "2S Recall"; break;
						case "BitF6D": output = "Summon 6H Attack"; break;
						case "BitN6C": output = "Summon 6H Attack"; break;
						case "Fujinken": output = "Dauro"; break;
						case "Fujinken": output = "Perfect Dauro"; break;
						case "CommandThrow": output = "Flama Cargo"; break;
						case "CommandThrowExe": output = "Flama Cargo"; break;
						//Cross Character Exception Required
						case "BanditRevolverLand": output = "Sildo Detruo"; break;
						case "BanditRevolverAir": output = "Air Sildo Detruo"; break;
						case "MiddleShot": output = "Cassius"; break;
						case "middleShot": output = "Cassius"; break;
						case "BitBlowC": output = "Marteli"; break;
						case "BitBlowD": output = "Forpeli"; break;
						case "BitBlowCAir": output = "Air Marteli"; break;
						case "BitBlowDAir": output = "Air Forpeli"; break;
						case "BitLaser": output = "Calvados"; break;
						case "BitSpiral_NSpiral": output = "Trance"; break;
						case "BitSpiral": output = "Trance"; break;
						case "TosshinRanbu": output = "Explode"; break;
						case "TosshinRanbuExe": output = "Explode"; break;
					}
				}
			}
		}
		
		//Raven
		if (character == "Raven" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				switch (state)
				{
					case "LandBlowAttack": output = "236S"; break;
					case "LandSettingTypeNeedle": output = "236H"; break;
					case "AirSettingTypeNeedle": output = "j236H"; break;
					case "AirBlowAttack": output = "j236S"; break;
					case "LandSlowNeedle": output = "236P"; break;
					case "ArmorDance": output = "214K"; break;
					case "AirSlowNeedleA": output = "j236P"; break;
					case "AirSlowNeedleB": output = "j236K"; break;
					case "Kakkuu": output = "Airdash"; break;
					case "AntiAirCommandThrow": output = "63214S"; break;
					case "AntiAirCommandThrowEx": output = "63214S"; break;
					case "CommandThrow": output = "63214H"; break;
					case "CommandThrowEx": output = "63214H"; break;
					case "RevengeAttack": output = "214214H"; break;
					case "RevengeAttackEx": output = "214214H"; break;
					case "LandDashAttack": output = "632146S"; break;
					case "AirDashAttack": output = "j632146S"; break;
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "LandBlowAttack": output = "Claw"; break;
					case "LandSettingTypeNeedle": output = "Orb"; break;
					case "AirSettingTypeNeedle": output = "Air Orb"; break;
					case "AirBlowAttack": output = "Air Claw"; break;
					case "LandSlowNeedle": output = "Needle"; break;
					case "ArmorDance": output = "Give it to me HERE"; break;
					case "AirSlowNeedleA": output = "Air P Needle"; break;
					case "AirSlowNeedleB": output = "Air K Needle"; break;
					case "Kakkuu": output = "Airdash"; break;
					case "AntiAirCommandThrow": output = "S Command Throw"; break;
					case "AntiAirCommandThrowEx": output = "S Command Throw"; break;
					case "CommandThrow": output = "H Command Throw"; break;
					case "CommandThrowEx": output = "H Command Throw"; break;
					case "RevengeAttack": output = "Getreuer"; break;
					case "RevengeAttackEx": output = "Getreuer"; break;
					case "LandDashAttack": output = "Verzweifelt"; break;
					case "AirDashAttack": output = "Air Verzweifelt"; break;
				}
			}
		}
		//Sin
		if (character == "Sin" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				switch (state)
				{
					case "BeakDriver": output = "236H"; break;
					case "BeakDriver_Air": output = "j236H"; break;
					case "BeakDriver_Renda": output = "Mash H"; break;
					case "Tatakitsuke": output = "214S"; break;
					case "Ashibarai": output = "236K"; break;
					case "EatMeat": output = "214H"; break;
					case "TobiagariA": output = "214P"; break;
					case "TobiagariB": output = "214K"; break;
					case "RideTheLightning": output = "632146H"; break;
					case "PhantomBarrel_Land": output = "236236P"; break;
					case "Shot_Land": output = "236236P (Hit)"; break;
					case "PhantomBarrel_Air": output = "j236236P"; break;
					case "Shot_Air": output = "j236236P (Hit)"; break;
					case "UkaseWaza": output = "623S"; break;
					case "Tatakiage": output = "j214S"; break;
				}
			}
			 
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "RideTheLightning": output = "R T L"; break;
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "BeakDriver": output = "Beak Driver"; break;
					case "BeakDriver_Air": output = "Air Beak Driver"; break;
					case "BeakDriver_Renda": output = "Beak Driver Followup"; break;
					case "Tatakitsuke": output = "Bull Bash"; break;
					case "Ashibarai": output = "Elk Hunt"; break;
					case "EatMeat": output = "Eat"; break;
					case "TobiagariA": output = "P Leap"; break;
					case "TobiagariB": output = "K Leap"; break;
					case "RideTheLightning": output = "R.T.L."; break;
					case "PhantomBarrel_Land": output = "Voltec Dein"; break;
					case "Shot_Land": output = "Voltec Dein"; break;
					case "PhantomBarrel_Air": output = "Air Voltec Dein"; break;
					case "Shot_Air": output = "Air Voltec Dein"; break;
					case "UkaseWaza": output = "Hawk Baker"; break;
					case "Tatakiage": output = "Vulture Seize"; break;
				}
			}
		}
		//Slayer
		if (character == "Slayer" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				switch (state)
				{
					case "DandyStepA": output = "214P"; break;
					case "DandyStepB": output = "214K"; break;
					case "PileBunker": output = "~P"; break;
					case "CrossWise": output = "~K"; break;
					case "UnderPressure": output = "~S"; break;
					case "ItsLate": output = "~S"; break;
					case "RetroFire": output = "~H"; break;
					case "Retro": output = "~H"; break;
					case "ChiwosuuUchuu": output = "63214H"; break;
					case "ChiwosuuUchuuExe": output = "63214H"; break;
					case "MappaHunchA": output = "236P"; break;
					case "MappaHunchB": output = "236K"; break;
					case "DeadOnTime": output = "632146S"; break;
					case "FootLoose": output = "j214K"; break;
					case "UnderTow": output = "632146P"; break;
					case "EinNoTsubasa": output = "236236H"; break;
					case "Chokkagata Dandy": output = "j236236S"; break;
					case "6BFeint": output = "6[K]"; break;
				}
			}
			 
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "6BFeint": output = "6 K Feint"; break;	
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "DandyStepA": output = "P Dandy Step"; break;
					case "DandyStepB": output = "K Dandy Step"; break;
					case "PileBunker": output = "Pilebunker"; break;
					case "CrossWise": output = "Crosswise Heel"; break;
					case "UnderPressure": output = "Under Pressure"; break;
					case "ItsLate": output = "It's Late"; break;
					case "RetroFire": output = "Helter Skelter"; break;
					case "Retro": output = "Helter Skelter"; break;
					case "ChiwosuuUchuu": output = "Bloodsucking Universe"; break;
					case "ChiwosuuUchuuExe": output = "Bloodsucking Universe"; break;
					case "MappaHunchA": output = "P Mappa"; break;
					case "MappaHunchB": output = "K Mappa"; break;
					case "DeadOnTime": output = "Dead On Time"; break;
					case "FootLoose": output = "Footloose Journey"; break;
					case "UnderTow": output = "Undertow"; break;
					case "EinNoTsubasa": output = "Eternal Wings"; break;
					case "Chokkagata Dandy": output = "Straight-Down Dandy"; break;
					case "6BFeint": output = "6K Feint"; break;
					case "Kyuketsu_charge": output = "Bite Buff"; break;
				}
			}
		}
		//Sol
		if (character == "Sol" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				if(state.includes("_DI"))
				{
					switch (state)
					{
						case "TyrantRave_DI": output = "632146H"; break;
						case "GunFlameHibashiraDI": output = "236P"; break;
						case "Fefnir_DI": output = "41236H"; break;
						case "BanditBringer_DI": output = "236[K]"; break;
						case "BanditRevolverLand_DI": output = "236K"; break;
						case "RiotStamp_DI": output = "214K"; break;
						case "Kudakero_DI": output = "j214K"; break;
					}
				} 
				else
				{
					switch(state)
					{
						case "VolcanicViperLandS": output = "623S"; break;
						case "VolcanicViperLandHS": output = "623H"; break;
						case "VolcanicViperAirS": output = "j623S"; break;
						case "VolcanicViperAirHS": output = "j623H"; break;
						case "VolcanicViperKick": output = "~K"; break;
						case "GunFlame": output = "236P"; break;
						case "GunFlameFeint": output = "214P"; break;
						case "BukkirabouNiNageru": output = "623K"; break;
						case "BukkiraExe": output = "623K"; break;
						case "BanditRevolverLand": output = "236K"; break;
						case "BanditRevolverAir": output = "j236K"; break;
						case "BanditBringer": output = "236[K]"; break;
						case "Fefnir": output = "41236H"; break;
						case "RiotStamp": output = "214K"; break;
						case "GroundViper": output = "214S"; break;
						case "Kudakero": output = "j214K"; break;
						case "TyrantRave": output = "632146H"; break;
						case "DragonInstall": output = "214214H"; break;
						case "GunFlameHibashira": output = "236P"; break;
						case "AirCommandThrow": output = "j623K"; break;
					}
				}
			}
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch (state)
				{
					case "AirCommandThrow": output = "P B B"; break;
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				if(state.includes("_DI"))
				{
					switch (state)
					{
						case "TyrantRave_DI": output = "Dragon Install Tyrant Rave"; break;
						case "GunFlameHibashiraDI": output = "Dragon Install Gunflame"; break;
						case "Fefnir_DI": output = "Dragon Install Fafnir"; break;
						case "BanditBringer_DI": output = "Dragon Install Bandit Bringer"; break;
						case "BanditRevolverLand_DI": output = "Dragon Install Bandit Revolver"; break;
						case "RiotStamp_DI": output = "Dragon Install Riot Stamp"; break;
						case "Kudakero_DI": output = "Dragon Install Kudakero"; break;
					}
				} 
				else
				{
					switch(state)
					{
						case "VolcanicViperLandS": output = "S Volcanic Viper"; break;
						case "VolcanicViperLandHS": output = "H Volcanic Viper"; break;
						case "VolcanicViperAirS": output = "Air S Volcanic Viper"; break;
						case "VolcanicViperAirHS": output = "Air H Volcanic Viper"; break;
						case "VolcanicViperKick": output = "Volcanic Viper (Leggy)"; break;
						case "GunFlame": output = "Gunflame"; break;
						case "GunFlameFeint": output = "Gunflame Feint"; break;
						case "BukkirabouNiNageru": output = "Wild Throw"; break;
						case "BukkiraExe": output = "Wild Throw"; break;
						case "BanditRevolverLand": output = "Bandit Revolver"; break;
						case "BanditRevolverAir": output = "Air Bandit Revolver"; break;
						case "BanditBringer": output = "Bandit Bringer"; break;
						case "Fefnir": output = "Fafnir"; break;
						case "RiotStamp": output = "Riot Stamp"; break;
						case "GroundViper": output = "Grand Viper"; break;
						case "Kudakero": output = "Kudakero"; break;
						case "TyrantRave": output = "Tyrant Rave ver. Beta"; break;
						case "DragonInstall": output = "Dragon Install"; break;
						case "ExKizetsu": output = "Dragon Install Recovery"; break;
						case "GunFlameHibashira": output = "Gunflame"; break;
						case "AirCommandThrow": output = "P.B.B."; break;
					}
				}
			}
		}
		//Venom
		if (character == "Venom" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				switch(state)
				{
					case "BallSeiseiA": output = "214P"; break;
					case "BallSeiseiB": output = "214K"; break;
					case "BallSeiseiC": output = "214S"; break;
					case "BallSeiseiD": output = "214H"; break;
					case "AirBallSeiseiA": output = "j214P"; break;
					case "AirBallSeiseiB": output = "j214K"; break;
					case "AirBallSeiseiC": output = "j214S"; break;
					case "AirBallSeiseiD": output = "j214H"; break;
					case "StingerAimC": output = "[4]6S"; break;
					case "StingerAimD": output = "[4]6H"; break;
					case "CarcassRaidC": output = "[2]8S"; break;
					case "CarcassRaidD": output = "[2]8H"; break;
					case "DoubleHeadMorbidC": output = "623S"; break;
					case "DoubleHeadMorbidD": output = "623H"; break;
					case "MadStrugguleC": output = "j236S"; break;
					case "MadStrugguleD": output = "j236S"; break;
					case "Warp": output = "623K"; break;
					case "WarpB": output = "~[X]"; break;
					case "DubiousCurveA": output = "41236P"; break;
					case "DubiousCurveB": output = "41236K"; break;
					case "DubiousCurveC": output = "41236S"; break;
					case "DubiousCurveD": output = "41236H"; break;
					case "DarkAngel": output = "2363214S"; break;
					case "DarkAngelBall": output = "2363214S (Hit)"; break;
					case "SummonGoldBall": output = "2363214H"; break;
					case "ThrowBallEffect": output = "Throw"; break;
				}
			}
			 
			if (mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "DubiousCurveA": output = "P Q V"; break;
					case "DubiousCurveB": output = "K Q V"; break;
					case "DubiousCurveC": output = "S Q V"; break;
					case "DubiousCurveD": output = "H Q V"; break;
					case "BallAuraLv3": output = "X L Pool Ball"; break;
					case "BallAuraLv4": output = "X X L Pool Ball"; break;
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "BallSeiseiA": output = "P Set"; break;
					case "BallSeiseiB": output = "K Set"; break;
					case "BallSeiseiC": output = "S Set"; break;
					case "BallSeiseiD": output = "H Set"; break;
					case "AirBallSeiseiA": output = "Air P Set"; break;
					case "AirBallSeiseiB": output = "Air K Set"; break;
					case "AirBallSeiseiC": output = "Air S Set"; break;
					case "AirBallSeiseiD": output = "Air H Set"; break;
					case "StingerAimC": output = "S Stinger Aim"; break;
					case "StingerAimD": output = "H Stinger Aim"; break;
					case "CarcassRaidC": output = "S Carcass Raid"; break;
					case "CarcassRaidD": output = "H Carcass Raid"; break;
					case "DoubleHeadMorbidC": output = "S Double Head Morbid"; break;
					case "DoubleHeadMorbidD": output = "H Double Head Morbid"; break;
					case "MadStrugguleC": output = "S Mad Struggle"; break;
					case "MadStrugguleD": output = "H Mad Struggle"; break;
					case "Warp": output = "Teleport"; break;
					case "WarpB": output = "Teleport"; break;
					case "DubiousCurveA": output = "P QV"; break;
					case "DubiousCurveB": output = "K QV"; break;
					case "DubiousCurveC": output = "S QV"; break;
					case "DubiousCurveD": output = "H QV"; break;
					case "Ball": output = "Pool Ball"; break;
					case "BallZanzoh": output = "Pool Ball"; break;
					case "BallAuraLv2": output = "Large Pool Ball"; break;
					case "BallAuraLv3": output = "XL Pool Ball"; break;
					case "BallAuraLv4": output = "XXL Pool Ball"; break;
					case "DarkAngel": output = "Dark Angel"; break;
					case "DarkAngelBall": output = "Dark Angel"; break;
					case "SummonGoldBall": output = "Bishop Runout"; break;
					case "ThrowBallEffect": output = "Throw Ball"; break;
				}
			}
		}
		//Zato-1
		if (character == "Zato-1" || character == "all" && output == state && foundException == 0)
		{
			if (mode == "Numpad")
			{
				switch(state)
				{
					case "Fly": output = "Flight"; break;
					case "EddieSummonA": output = "236P"; break;
					case "EddieSummonB": output = "236K"; break;
					case "EddieSummonC": output = "236S"; break;
					case "EddieSummonD2": output = "236H"; break;
					case "EddieA": output = "]P["; break;
					case "EddieB": output = "]K["; break;
					case "EddieC": output = "]S["; break;
					case "EddieD": output = "]H["; break;
					case "EddieReturn": output = "236H"; break;
					case "ChouDoriru": output = "]D["; break;
					case "Dhand_atk": output = "236]D["; break;
					case "EddieThrow": output = "236]D["; break;
					case "DrunkerdShade": output = "214S"; break;
					case "ShadowGallery": output = "j41236S"; break;
					case "BreakTheLaw": output = "214K"; break;
					case "InviteHellC": output = "22S"; break;
					case "InviteHellD": output = "22H"; break;
					case "DamnedFang": output = "623S"; break;
					case "DamnedFangExe": output = "623S"; break;
					case "Amorphous": output = "632146H"; break;
					case "AmorphousObj": output = "632146H (Hit)"; break;
					case "MegalithHead": output = "632146S"; break;
					case "EddieMegalithHead": output = "632146S (Hit)"; break;
					case "Executer": output = "236236S"; break;
				}
			}
			 
			if (mode == "Real Name" || mode == "TTS Friendly" && state == output && foundException == 0)
			{
				switch(state)
				{
					case "Fly": output = "Flight"; break;
					case "EddieSummonA": output = "Summon Eddie"; break;
					case "EddieSummonB": output = "Summon Eddie"; break;
					case "EddieSummonC": output = "Summon Eddie"; break;
					case "EddieSummonD2": output = "Summon Eddie"; break;
					case "EddieA": output = "Small Attack"; break;
					case "EddieB": output = "Mawaru"; break;
					case "EddieC": output = "Nobiru"; break;
					case "EddieD": output = "Shadow Dive"; break;
					case "EddieReturn": output = "Recall Eddie"; break;
					case "ChouDoriru": output = "Big Drill"; break;
					case "Dhand_atk": output = "Dead Man's Hand"; break;
					case "EddieThrow": output = "Dead Man's Hand"; break;
					case "DrunkerdShade": output = "Drunkard Shade"; break;
					case "ShadowGallery": output = "Shadow Gallery"; break;
					case "BreakTheLaw": output = "Break The Law"; break;
					case "InviteHellC": output = "S Invite Hell"; break;
					case "InviteHellD": output = "H Invite Hell"; break;
					case "DamnedFang": output = "Damned Fang"; break;
					case "DamnedFangExe": output = "Damned Fang"; break;
					case "Amorphous": output = "Amorphous"; foundException = 1; break;
					case "AmorphousObj": output = "Amorphous"; break;
					case "MegalithHead": output = "Great White"; break;
					case "EddieMegalithHead": output = "Great White"; break;
					case "Executer": output = "Executor"; break;
					case "KageDamari": output = "Puddle"; break;
				}
			}
		}

		SAMMI.setVariable(returnVariable, output, FromButton);
	});
}
[insert_over]
{ "deck_data": "{ \"background_color\": 4210752.0, \"on\": true, \"grid_y\": 1.0, \"snap_grid\": 1.0, \"lb_version\": \"2024.4.0\", \"background_image\": \"\", \"sammi_version\": \"2024.4.0\", \"encrypted\": false, \"adaptive_resizing\": 1.0, \"unique_id\": \"20241119022034255051982\", \"button_list\": [ { \"color\": 0.0, \"persistent\": 1.0, \"text\": \"CONNECT TO XRD\\n\\n\\n\\n\\n\\n\\nDO CRIMES\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 0.0, \"obsid\": \"Main\", \"msg\": \"message\", \"url\": \"ws:\\\/\\\/localhost:6651\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 1000.0, \"sel\": false, \"dis\": 0.0, \"xpan\": 0.0, \"error\": \"error\", \"extcmd\": \"Create Xrd Websocket\", \"buttonID\": \"Xrd_Data\", \"status\": \"status\", \"name\": \"xturd_websocket\", \"ext\": \"SAMMI Bridge\" } ], \"press_type\": 0.0, \"x\": 0.0, \"is_transparent\": 0.0, \"border\": 1.0, \"image\": \"RoboFaustBanner.png\", \"triggers\": [ { \"group_id\": \"\", \"type\": \"SAMMI Bridge Connected\", \"button_id\": \"Xrd_Connect\", \"trg\": 10.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"connected\\\":0\\n}\", \"deck\": 1.0, \"width\": 1.0, \"button_id\": \"Xrd_Connect\", \"button_duration\": 1000.0, \"y\": 0.0, \"switch_deck\": \"\", \"height\": 1.0, \"release_list\": [ ], \"functions\": 2129.0, \"stretch\": 0.0 } ], \"deck_name\": \"Xrd x SAMMI\", \"grid_x\": 1.0, \"stretch\": 0.0 }", "unique_id": "20241119022034255051982", "include_image": { "RoboFaustBanner.png": "iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAgAElEQVR4nOy9ebwdRZk3\/q3qPufcfb\/ZVwwhCVnIApgQkUVQEHdEBdTRAZ0ZdeZlnPEVGR1RhlFeGUcdlxFBQVlEZFhVQBAwkISQm52QQBay78nN3c\/prvr9Ub1Ud1dvZ7n3MD+\/H8I953R3dXV1PU899axk8bVXc4wwCCEAISDgIJQCIAA4APEbt34BAC2bcT4DAAexvnPnbKppIJSCWFdy5yzxqAQUHAyarkPTdU\/78r3dbxx6JivdAwAYAApKAVjt2dcTcFBd97Qk30PPZqRvct\/kJwO0TMY5TjTq6aH7\/BwUFIQSa+y4c5boR0b6TeoLkUckHBwAMwzpF3tEiNM30ygAsO\/tPofJGLjJAk\/Gfa3lh4act+S+dzhv3rmecxTyBescMebEdyUAMJPDfj\/yO+OcwSwYTv+J7y83DU\/fRN\/lOYRAH41CAeBuX8G47xoCDgZmMMizQR4\/Dg7OAc7kc4YHNP6UyoNzl3jK0h5jyt8DrfPSeR8PaSOsD6HtKH4zCwUAANVUr8l7BWNm4Ayqacp7ETI8E6zcd2FmujEVfXB7YRrBMYq8lkaTB3cWrNIRNo8qjapgAC7KNAgxzRBCHOIwPatb8SC+6a5mAEVMmFKGpEyEXizDSPKsnHNoul5U+6nBYxiI7zmTPDdnTFxHKAixJQHpOOfgLMF7\/wsDEIgbhyQrK9Wo5zziOaaBUOkXziNuyp323F+46hQl5BWHUupMApZCOmBmulUrDkmJWWZo8YRcHINgjDnviSZgAmnGLYAkBKYYm6QMmzh\/3TY4YyNG2ElRdQwgbsBYjBgni71cmmD+YzLipIBSxTzqvz7FRE4jGjq6FOtfqXC0CbFtpb8XM83Au1ZJAmIFFe9R09Xvz3M+Y87zE\/t6zsESjKPqOcOenXPumYvOwkDgvINAWyHzqNxMPg2qjwEkgP1S\/e9UvVcWkyKM+G3Y+20\/SiV+tcRS\/j24agUNMI8K7f3Dxl3cM\/hT1IS3idxh3gEmEf4eOQt\/3lIYomdR4RzcNC3R33sPzrzyIdVoxca8XHjTMYAAQVoiPIkh8CRwGYvLYOIYRxSotdXwSxg0wUrm7ZdFzBGrmGqCp1VEFo2IOU6tvbGNJKtdlNTjl3LstgPEr4CwqhQHzrjou29MHWmL2RYmX3+psNDAmlOw+m9jJFd\/4E3IACJXmxJAtPIqovyMyjQMcM5Tr\/2Bld1iTDKNkIqMSfq++mFPbkIIKKUVmuzR252AziYCxWriVco\/7\/GQrUUV6AeqjwEUKTLFvby442G3LZeVAAC4aSZSdtmIE1vFglKpV5juPXgUpYwXZbJzGyiCMMohakdJTDEWBL8VKA62dFYuM2KxqB4GUCI35DGrSxQxRa4gKcVoAu9L9becZpVJsv3glv1f1c9Sti\/p1k53DJlpWs8YvNpjfSm2VyGifljbaQmzWNjbOlXv4pnhyOkJqoYBuBrnyrUdhpIVfRJR05hJzsooUQTaLvOeP+2r8Grag6NeGkOy7qFweHLbt96jpMcBkfbpERg2fYniXuVgjMWiahgAePm8qvwImOHKDWviJ9E0JxWN5a1CmslpK8mCnHQYJlkCRVxlQWC7Dru\/JLQEVGA\/zhl3JdMymWbLjephAAlRjKIm1kJQDpu5ZX+OA9W1WI21X08QZwFwrvMpA2U\/iOGYe0kYeJzCsmSX2Jjrlb4GZVj9mWlK1gm7K4ptUJUxgTcdA4hyBJJNeM5EqKoBFxOEcxaqEQ+bICx070slhhJ2bbIJPhz75ThprCTlYQKtBaF+MyIBSpQQlX2uqnkXjipkADEDR4hrBpP33opVnnMOrQz7znJBy3hXH5U3XJS0Yk80MWepR98Qt4olWVjTqf3ULZRTn1IJhK7KRXo7FmParCYpoAoZQDQCYi7nkUoU+YWHTq0RtMem9YcnhBY1gZIQllcCSHcPEWZrXUlJ5PW2m64SEf2MNfUm0EGERQSGKSg5Fw5ARKOBc5LcT4WRNv3JqJ6eOEg\/qFFiozxpqofvesE5T07UFXyI0iUAF6F+74ZXKZaGmcWttsUSpA0\/A2a2y68EIaERwbhHWudZBlQhAygvivG+C7SRYGKNpCknEeJCYUtpOoQB+5lAqP7GVpxFMIREWwOVO3RKpiYSuZBIZkM0WlKY9nCaHONQhQygfIRkT0B78tjvzP+3HAqbipsaLbiEMNzLT\/gYRSkZbcaYeK9MiFJ6CGMy9jhwxq2w\/Ih+JolDMM1kU7CEOTNSyT9UqC4GwJ3\/pb9Ujv+XYu8B10vQjdlO37FKvTTHczBh+3Hh0JVCKU48wvKRbvzEO9QC71KFpI41cSuvzCDi9DFJlMuqflQT8QPVxgCKgOx6G5V5pdhAFKc9zkv2tAuEL1PqmKCS2vqlnnnbqnRWnRCumWRMip\/08deF7mxSrtCp50eUIhPWosMRcMqqJvEfqDIGkGSvzU05DA7JbbjFRnr597FFvkBhrzfBTNMy4QX7XUrgUSWSdoTBYVaW8jIqICkN8Uc9f7h5NMQ\/IgUDCIsjiWKqzCw4bsbBY8E5kszUOPyoKgaQBHYCUUrTu1am3T2H7esZY97ghZh+pDH7JFkhnAkmeZ7FMc9yKCkppUqCplqE4s46PVHevwhmoQoDj4\/wJLHOTXHjHbr18fgb285FIx\/fnxZvOgYARAfcRE2KtGaiKML1m+7CTJFpbb5xEygsy0xUkAxQBucT27Ey5Hn8SU44C25potyAk7wbqmlOyndxkfeaQAtEMGvb18L2obCZgjDlxdxXYZngplm0Lb8ciWvKiTcdA4gbwKiw4Ervv\/zEq5okSSaOiglQSmOToZR39fERRoKAJ3u1DA3ZDclaxK0Q4sQJOAlRjoXTuu0lyl3Jwc25D0d0T2q5sZ+LycE9KM6hp5q8AIFqYwBxXsB2Vl2ThU+yMnHYYl+UrSMImxxJmJD\/HKppwbFRdS8kHLcsk85qIy5dV9y9ZEmB+1bgSKWa73076bWcH9xYEF+vylMfgaOivhQjhapiALEvRNamhkzEcnHYos1evEyunrZ7cMp0XypX1+SprSPGLsGwJlX42emw0igIuY\/4ZD1IWAKSsiLk+Qm1ch4yK\/9\/1fqbqlFVDCAyuaRiEqeNHAv3MkvVjHSd4sIyvH+qadaCE6ZXiFwrK7bVsZ9X6ahjr+aEJI7NUCGJWO6J70j6rCUsDLFp4wlxPQ5pdWr7w1BdDCAKYWMqTwASPSFCV8IiCMaZ5JY5zJ6UidJ4RWq7S9vC2ATEGbfSoZfnFav0G8K0yQKmUdcD0xXL3TTu8VuJuHvHpX9ToRzVh8LrSpiJE4\/8xQ8gCkWsxByWSZC6UXJJB1naUHh+I4RE2vvDVqk0QT2q\/WpS4k+WF0+cU1p8fQmI0hVY\/ZSzF8mf5XGIUmyWSkxmAkbiT+EWpmPyxxwoFxv7vVWRhFBVDKAYLXZYjn3l5Ago0iw3U0LcjD5uOhcwMyj6Re\/xooNIxC2D4cx+ZkAkggj3gfcilCmVQCR2jyKZYcjKWuqOnIT4HIiDaQhIdhyzGA8k6a2YvhUhpXHGAkyiGlBVDACIeifBlx6bXsqy\/3Jh9wEzTTC7dBSlyRRbpulZcaP2t0pnFX+fI\/a4pmEEbc5cvaeXV\/ayVagNy6aXklDK4e\/uHQe3PbnWQDF9EowViZhIFPOkmgaapA3V+6uieIDqYwD+wbJWQ85YIOlkEoWR88KdG3BpJUjYJ8flNZmWPMy0Fe+vnz6IpZzJJbzSTbFBWUInEqV7YCZLWDk4+ngafYlKMksbZBTsQFDhF3iDVUTsKlQVA7BXIE++Nt9xO248qRhYbscLta3ZIh7unuOcb\/0Nix5LzISK3MvbirpE9yiS6O1oP4+zDWyvRal9Xpojjeo5SmGA5UhTTiCekzikFB34U238oKoYAAEpv35E1WCZRFR\/Cm7OmTJ5p3DkiX+wyOq3ij4nCUwqhQEmGSWnDyEni8AnTVlXzz4e3gGF848PSR6vkpp34WbMAWJJlvZ08Euebmcq1pdiUF0MIEHASjm02pUO2PCv1kmJMHqLoWJkka2VuMIldGlJlKkn5nAoE0jIqGPGN3ILVaIUENV2OUyPlUZVMYDhglpJFa3dTwvhrsxiV5+kskiyJBeSLTpgbUh4oxQoJyP1P1+atqMZrEJ5LH+JGJdYHYFZZfJ8EagaBuAZ7LjsrxVYwdM4zKQOrU1S1COuZHjIJE9bXyA5ovtcCSmKWBWE07Yd96yRUZ0RUZRxDMBUmIn9qHiilhJRNQxARrlr3I0IJKI3EiT6KKXKbzJdQNHNl0VZlgRhjlH2ZqRYplaSpaRERuo4p0VkfBrJNGFVyQDikCaHXhLETfCwhBdJ26bWylZq2uowBHQOZfMLUKNSDFoZBq1psdaJ5ARkEWOK68LmRipdlM\/JK+r4cKNqGYBaDPRmjJWLUYQiKkFIEf1yVWMJmII\/bxxnyu1LpPY\/IQzD8CTQlD0My8EQqKY5q1gSB5iiEPKuNE2I0aWQiTp1V\/HbGGaaSdWk6r7Ynp4jbBesWgYA+Di0KsqMCMeTsLp5gHq1otSXvSbOfVcOQ46ZhvaZnPPwlGK2N5uVGzA+nVdCh6cQVMIMNpzVbTislVhBLJwnsRzZ3oPw+pCkCF92XbNNkRGIAE5OQPuL\/76MOUVDo9oeSVQ3A5CSa6gGykOYEemdiOXzT+0INh8Ri9Db4eXEgWSjUYUoSpwkxa0yPq18TJ6BOLfsskAiXNchyw5RVhOhP4+A21SyMU1ez8DmLZbnqp0VGNHM8i8MAECkOB1pGvcd5NJqJ3kT+k8jCBIF50wpY6q0uKUmoAjTDIdOtgSTpJjc+9HwV1RKkoAlpJ8JoiQju845mBUnEUlMikORjD2mT2U1c1ZRBKCM6mAAUWOTck6HSQtyU2HJNuISaxbbJw9CxEW3D4p0YEm6FBI0VGnIYx2WudeU6gEWo1VP5RNAaeJqRFFeiKUSvyrqsxpRHQwgAqFifYgtvlROK2vryxtoA2fyR3bRH2uQ8HE0TYvWA1Rw\/rmFWZgnjoMQot46xAVWWeA8GI+ftk\/FnFOOlT\/N3BnJasHVwQBiEk0qg0AUEyjMmccJBU3RJZG3rjwmr7RFIcICjsKgZdwtRfmkgHSMtBgdijMunLlzwJNhqfKrpt0Hez4VXUFK5XFIJR+AKkV1MIAEiHWrjVr90nqWyYyER1sZwkAJcXLS+xFlQ\/ZsYTiPjQJUbRHKwwSGZ9LKZbb9z1Jpuglk+4nZngFCf5O0X87KXsWObVXJAOxXEDa5CSVujjlrxSiXGKVsh6evCygzkcAKEKaZViU+DWEiUdco7zlCiNJhKL3jfJad4UasSzbU0meYebjacgD6UYUMgBS19qSJlxfm4BAdQhgjkSSBuFgA\/1aE2\/Zg5yaK7UuUv7ppKpfDtOHDI4GobZmKOGzPyfJBPQ6l1GFMwiScu1fJewhDFTKA4hRwYfZeD+QYfgR9BwiNebGcJfL+CmMuQsHIPKsiQbJntTXpds4EGpfoY5jNTu7t\/FF9LCBVx1osSKmhzAkQqXcqouJP8CFF5qNECQtS365sqEIGIFCMNj8syyuJ0pBLkzFRlF8Z6MqOeCOUirRSia9jgK8oaph+oxx258TzUs52a3nbMdOVekRZM83dukURv4cwi6eMUkTvJAw5oK+Q8xZK27ZkaeJHbptQtQygGNjVa7mkSY5yyZWRaMIkcciJ3R5IpbFSiode0ZM7\/w\/qCFQecUVo6ROexxJO4LCafuWGbZEII75YpXCSRZtxpXWHSR6ANtJsGYYbb0oGUCnFSmgsum0qStBGlDnMDmpx7pdyHxrqdcfh28qoelode9E4yUSu5ltMRp1E5dXLbCUhxLL6ROmh\/uIJWD6oiKzUPaO8\/3cCOFQOK0XSUSA7cQXg9R\/wWx4qe2\/PrWIUsqGemiqloK57cxUzpn4vCGG+FSC8YqSpUGlkhK0Eb0oGAKSLx07yuhLPkwTnqXQRoRVlUlcxKhbxo1CuwpZxBCI7LrkXRXh96jqIpgXGyo7zEHEQyo7AKQNeoqOPDJXklmSOeWJAbBPoX4KBigQXKcIJJY5yKQxxQ5xUeoisVuPpm6\/9CFE2KSOLumsp+fTKjcTbGknCEqXYovqcgHlJY+DkQoDL1GyPUpJwK5cWSdsUjkTVsR0DqpgBJBmkYBUd+3++tqLaqJC5yTbbVTwzbMIVpFL+5k49RBJdT1FGMXvwJH4eUc8oM8VIq1BcP0okXmVq8\/\/fxwIUgSjC5dxeBazV13YjDjidJZ8ExTinlDPHgKZrvslj+UtE+BzIqFQ4qtynsOInfhST2j2Zlcb6418YEPQ4jIoaLbkfEVAFR40k3rQMII05yX71jLsaZiA556XUL2kkI+xyKXgIpSKHgeVRKBhLdGw8IAVBFbXCJIjWK3OlnuL6QpRnycQdRnTF9DXs3bMqEuvToAoZgOulV0kkbn8YlDRxIrFf+hDONEl0EdFSQikIG7\/hyiCcBEmSpKj6y0wzPGQ5jAEklmqqi1FUIQNIsPev8CQLW0miflNBz2YiU5XZiHJMscVqfwtx3mPEcqclpPz+6HGrXeq6CXH3M4xEbSqHJElXbNdwztVbJ0lZKc6TTK72VjOpRFpl\/gBVyADiB6jS3mSenXaRkoiHSXAeGxIaSlJFzhd3ZSPlDwyKY2gckbb6NFmOZKtC\/JZHlTcifptkJ2tJ8q71bDb8YMS7sl2gyxvoVDqqqzfDhDia8h8vJh+A39YdYqBwYBYKwX5IjE7V57Ctg8ryMNxJTx3Y7rKEePogYgNc1+1gLoDgaiya809ZyyU6VATnoCq\/A9i5CMo3LkkLnfqzUo8k3nQMIK3iRjWJOFBZUSw08IilWo296chVzSkmfejkGh4GYEZouf0Sgf871TTnX+ieWjG0cX4PBCSwbaxUcRPV\/Aww3yraBVQ1A\/DYbn1FL5JiJFY+PWTFAaL7bhqGW3YkgV3dyZUv7Uf9FoviEV4BIVqMjXDIsh225H9FQL5\/UuWbfE0pCua4awMmyJDzK63HSoqqZgCA4NSBDKtFlgh3vMIQp8irLIsOY0r+\/HTg4RO88hFmMR5zivGLY1jlErdt56O01g0tk6mYdUk1WtXk8ReGKmQA5Q9icUsxuZ\/FSlR6234kU1CqY+LDvAaFJEQAeBOaKFt2Jl35ogdUDEup4IuZ8CpmNpJecGlha\/9VY6uUl+IYQBVYBKp+9CklIkzXdt4hlu8\/Y5HKuWX\/\/Ssc2bErxj00xG+dwCtaw5JE7FXHZwby9jeFg5LsRZfJRJ8cTfcOik2jDUQJ\/cOP4nwXkuRrKG7KM8adUuKaHmzDlgBGMg6jGFQ9A3DgiH2+nxVM4LXnlyM\/MID1Dz8RW3iTGYZjy4WljQ4QcVzSUSn5SCqubjOAIsTZqkCKPocxptDcjAnaDkoc8QxMFYlom+js8nGB46YZcDIQYcpeJa0s1SXaalTBFuHNwwAQPils11gAOLhlG3Z3bUBDexsAYN0jT8S2689Br9S4J+TshsKcFwZih6m+GYkfwfeRNBYg0I7it8jozhJCe2Um7aQnU0hxNsOPrNkoSwLcTm\/+5nqXVc8A0vrdb\/r9MwCA8z\/3VwCAg6++7pwT9mqc\/G1liNxLanWgckSaJ5FH0hupfx5p7bLK8SY2QYhq1Y1zNipyu+IkVyXxDlJJY\/yJx8ch4Xytkq3C\/xoGAACr7n4QADBt6VnQMhmc+5mrAQBP3vIj0VbEteUkHC5tCVT9V\/qfl7B3lxEuOg\/PyhRWHzAKSSs\/pTkehyTSQ1J9DqFkeKojVwDV32s5aUTkSsLRc\/gIAGD2O88HwNE2cZxDbBt\/93TkbWgFxXCZGUQxGtX2gUCskLbSU+xTvZKDvYNx\/AIUSOJLX65UGXF6Fz9UPU7bRvKbVWbfTQiBpifLM+A3l46kubDqGYCHCxOpIpAPz\/3gDgDAeZ\/9OOQp9d6vfxEAsG\/jq2AFo+KD7dQyVK38CVxAZSZARLbJhHceeYWSB7JzUsTqGLYSV8o8qOlaZcVvQgDE+Cn458ZfGEAy+ONr7IHrP9HtEHbrhLGWxdz9956v\/h8AwB+\/+1OY+bzS7z723klzB2iut2KA2SQlZkkxmGZuhObUSyjdVNIMGBZ2G4Uon4fiPTzTSTlJ3rtd8MU2S3teg+zcRUjVmQmHnQFwxnDsjT2prwtNqsk5Vt71GwDAB77xJbhk71wJPZvDtCVnAgCe+d7tGOrrT+0RlmQiBBx5uOvwk3SLoayHmJALhHriJU0bFkIc5QrvlSWBVITgzx9ommI7NQxORIkiF6XXE+sqXCUuwDZGRALY8uSzWP\/g44nPj3rRz\/3gdgDAaectsejea9Kzv8+55HxnO7HsZ\/cEasMVIxUkBWcs8YsPTR8dywOIs\/0oJuVWMSguPTZNRPxJa\/elLyFXWXE7rv1q8\/cYsS1A39HjWH7br3B8197oEz17KXdw92\/agmct4u88ZRLmvPPtluJIdoX1Dvb7bvxn0QpjeOY\/f+a8LEfPELJ3T6LhHY6KNwCUW307M7JzCmeO92Qpq3fslUUQUznSqfmZaVImYDMeLSqmX3nD4Fzyt5mquSpyf9YmLpz79eG8ITMM7F27CZPmnY7ug4dxZNtO7OnaAEIJmseOts5yYuIsonYdN1753TPY\/MSfcHTHLgDAossvwxmXvcNpn1INekaHpuvQdA2arosyTlYrMy9YitdeWAVmmtj24ssYd\/ppyNbWWCGj1DrLtekSCOImvm0FvEmnHQbgP0v+LIhRDkmyjxGn77JoS3ztaLrmbZNSQfyBM62xkHwNVGf4pzTx9Mn3tA5BSi15\/OK9Vzh5F52nFX\/DwoX9vXQVdf7RAtzcAtyb9tvhLe77sb8zX3tU0617BN+H2wqxzLPeOBIQ4UbOfTURZddw\/zuRv8t+A+J0f3zB8EkJZPG1Vw+rCrL30BFsePgP+Mgt\/wIQgge\/egsKg0PBjlECqulCFFSsGvVtLbjkn\/8W\/sFSZ3sVOfTMggEtk0G2rgavPvsiVj\/4OwBAXUszzv\/8p+wW4L4QMcFoRgMBhVe6YAAoiHWuplPpKvcst2PEckMlzjVWz8Q9LObjEKydCNQ+kxCLEXnbdBlA8O5Uo8LyQNwj\/qfw6KtAHEWgfcxu1RXJidNr4RvvJzZhpRHbEG79x522jXxwqyWu5ha7Fd\/MfB7cOeIdSw6AGQwczGmXwE7cYj8lc56Wc5uBee\/BjIIwrXp+d+\/BDVPqg32G+L+Yl+7IcXCAWffiTBpL+1rpOzMdBgbYNRFkKfd\/MQPY07Ueu1evxxXf\/hdoWVdptnvdJrxw5wORIiLVNLz7y19ATUNdqO04U1OD\/MCg9Ks4s6ahHt5BFhz7l5\/7inPmu770d9CyOVSCAXCIHIEqBqBpQlohlKLv2HE886M7ceLAIVz53W84jEAO\/yVOi0JqCWMABBxaJpuYAcgohQGYBnM+ywTAmAmzoK6qUw4GwGETupcBuDoR7z0IOAr5gpIBiNwMfiJOwADsnxgPZQDMKHjGbSQZQIWrVgShZdz9F4Et6nJMnjcbk\/9jtnMECJ+cnDEY+bzzXc9lkampcb7XNNQDnCM\/MAiqadBz\/j2fKzZ+4kffwkM3fgcnDx7BH275EQghuPQr\/zAs72DrspVY++hTgf3uB278Z9Q0NgBWWqxsLqtgKsM3ScoFSikqbQQTTlPudzeUOqRPmiYYmUTMiRSQflM+Y\/BsoSh1ogfdk6SAsSpx2xh2BuDkZ5PsuDzlZCaUQs\/loOey4VpVQpCtq\/X+JH2WCeoD\/\/pPGOztw6+\/9E1wzvH4v\/0nQAjO+9tPoqGtNVGfTMOMTNJxYt9BrH3kSRzfsy9Syvno\/\/tadNETyOxR7G39VYdHErEWiCixo0wQ4eLJFHRcCjMHrFGlJJWfgZ\/4Pf3gxDEH85DVXTCLkeEIwz5zhnr7AAhGUMoalqnJAQjOJa+Q7\/3Nf578e21DPa689esY7OnFg1\/\/DsA5nv3RLwCIWP05l16ISfNne\/P0Wdl+D+\/YjeP79uPI9jfQc+QYhnr7YrXdWkbHeddcjXGnTwcBwV2fv17s6avMTpwWYZPchp7JKPUAqe6RxJJAiuc0VNNgRlghnMzGnMNMWAnZ05OQpCIjgWFnAL0HDwMAMrksmGHGEqoKcs69oLovCNVvqumRrRXbiCtv\/To453jye7fh6O59MAsFrH34D1j78B8S9tCL+tZmzLrwbZh13jnQsm7iD0IpCoOD2L1+EwDgzA+9u6j2OeOIyX49bLA1HGFgJrOSfpZQDLSMqcVSX2MpE23FCtU1MEmvoZpXhLjK1ZEuB+7HsDOAvmPHxQdC0hO\/bYqJsKMWy1ft67K1Nc7EeM\/1X3CO7OzagPVP\/Am9R4451oRcQx3axo\/FhDkzMH7WaahraRamPqWXGvf8Fdp5gkwui1W\/FU5Rb1m8KNgxSw\/ATCthheaWupbPqZYVhVACbioIi3NP2fQoJhC\/jSjPPiLKKYdQ6tmmwtLue8fZttik2zJUE4adARiWyY8A0Cj1aUBteCc01SgyjiKvWH9qFbtRbyC880L0ZcqCOZiyYA4IIdBzYvthu6QG7hMxQQmR\/Q0AomkY6ut3jslgpon8wCAGDAOEUtQ0NoBqaicWp0rvCMMuwQ14F2rVOxMKOF9ufovhRT2JvKKGoSRvSO6+J8MoiD28UlMl5gbVNBisECr9MJNZir\/qYxIjqj0iGhHWmoAJS\/xGKEVW0u7b0DIZpeuualIoRTLnTPeVaprm2OmTQRXllvQFe+\/hVx5yxlAYymPoZA96j3dD0ygaOtoF4wgNjmE+j0Ueem54r7yElXa6BmIRiFCNmYVwgiaUAobhua+m66XlNmS8aHorVkSnIYo8T+RhmSSXciKaAXBg6zN\/RvfuvQAHGDhmXHw+msePKfnGmZqcRw3USgQAACAASURBVEwmEC+OMeYE1dhRVu5JxDrGQTWxChtDBdgloUInmeIbAUAIhZ7LRFwJRBgjI66J74X8+\/z3XIwV9z6EzX96AaecNR9Dff0Y6O7BQHc3GONoHTsKtU0N0GMyFgkpwP1ezkKdhFBnnMMSnYzk3ty5ljGheU96H4tJuc5CXhBKE6WhJ5oGzrxMi5k+06B1Xmgy2hFA6Iza8ODjWPXy89C+9pXAsQfufxA\/feB\/MHbOzKJu6k28KdtOCTSJKVCNAspV1p0gei6JEBNmB\/AjzcQrVdx2r59z0dux4t6HsPbRJ9E8phNDvf3IDw4CjKGxow317a3C6uFZ0RX3ZxzQpPEscUvgcSvSKLjhMoBy6hyoRRSCsYh9NtU0mBGE4nX9lZDwFXLOHVdgq8G03faAGYbDTAAeyTT8fa+6hCA9L61F15oXoGnCN\/3AgQPYu2cvDEssu\/yKD+LJ+3+JDQ+l04rbD9o+aTyChjiu+BcGkvKf6nrVfaOliHL\/k+870WKmz99+LwZ6emHmC6C6jrrWFtTU16cOINHj0owXiYqU1LIG3U8IJCSBin2enSXa8dH3rfxRDFCpRyqjDiUqgCzwLquJAWx57Ek8+Oj9znfTMLFv7z4cPHgQ69etR9fqLkeb27X6eScoJwl69h8CAExfehaSE3s4CZdOeIo9W0gfVOwp7F8ycE+fLrnuM07qr81P\/xm2haCmod6THit+ipZvEqvMWam3Fb5tSehpKR1vQkFsxkBCmWZoivJiawYoA5zK8x44UxdJLRc88rNZKGDFymcBALvf2I2JkydCz+jYvPFVzJw9wzlv3dp1mL9gPggh+M4\/X4d\/f+C3iW52aKvI0Hvq4kWenVGcRjeNpJdk2OPOKZUfF3v9tT+7FT\/99HXIDwxi3WNPYeknroCezQrGELgJx4t3\/xavr+zyZEcCIWgZMwofvun\/Fv8AoiHIT+Kv7Kus8mOlbLMh9sCiT06qtBTgSgtROvj7GqdclM2TpYrmdhGZtGCGgYZ9h\/Hj237g+f3nt92Jx9avQ8OojpL6JcPDAKYxwQH37tmLw0cOo7W9FQ0NDbjqk1fi7jvv8TKBdetwxhlnYMbM02AWCvGVbQCc2L0fAJC1vPgE\/OaVeIYQhWKvDNtdV86wpm75s3f8J2679otgpolldwlJTNN1dEyZiMLQEI7t2R8qMrZNGIv3f\/U6ACKYxZN6PDW89xARbi6oQpklK8zCyoCFMwGvXqGsZbs1DYwxZSCSsieMWb2xFMY+xpb8vhTMCD5vlIly61PPY\/nzopZFf38\/jh45imw2i85RnfjUtZ\/EpwCctfBczHz\/u1L3RwUPA\/j6TV8FABw8eFB0ZstWZ6W\/4soP45mn\/oTO0R2Bhzi6bSdGzTg19maFQRGlF+aZB+to5QkwxJSWYktQOsJbvua27yDfP4A7v3ADOBeRZwdf3+E5xzMpCcGnf\/JtBFZt0wS00qsOhU1+\/+pq5zIwCxHFNCKZgHTPInQNkZGklMKMcVMOA6EUKMKvQGX\/Z7InoQ8bH3kCq1c9h4GBAWx+ZbPn2N69ezFx0kR0dnbipdXP44x5izHv8vek7pMfLgMIGbw1XWuwYOECZDIZZEJWeduRJSmo4uHDVv3KEKC6VWMoj31bXsfy+x5Cz5FjIXs7Ya1oHTcWl\/7jZ1DX0lyRHmbranHt7f\/hfGeGaWX+EVLaT\/\/6H63z6nD1d29E2DNxZoLQ0tw9IrPzEFHG3MO04zzjLD5lJ9DgsMxotvTgay8pQi0DKRCasIRQ+MuDRcFv\/3echELaMAsFrF71HPL5fID4AeDY0eOYd8Y8bHt9GzpHjcLatcvx8Ru\/WbKpN9HM6FrdhQULF+CCi87HPXfdixmnn+Yc6+3tRcvE8aluWg1FKIf6B\/DMf\/8SezZtcSZ4Y72GGz4\/CTf9dCJOmXgqslm1UsgwOTa82ofPXH8LNm8TzK+xow0f\/fcbrBdS\/uezFYEcwFM\/\/IVg2ITgY9\/5Khjj4d7RFR7qsMInJosWt51ir9Z3Yvl4mJbnXVGgQFi8MedcBCLFbQNCCFS4OEdd6LIsv\/0\/FoTglQceA77xr9i4YWPgMGMMp06fhr7ePnR3d6OjswN333UP1t77EBZc\/aHk91FAiqohjjtpW3sbjh095jnRZgJXfuJjHibw8IOPojGBUsJrAiwPwgc5OIGMgoGnfvhz7Fr\/CgCgsy2DH990Ki7\/O4bja89BJpP8hekawfzTG7DqkQXOb5tf78dZ7\/8iOAeu+o8bUdfSlOpZ0mDH6nUAgL\/64b8LZqqwy9t177jlxkopFTEU5XYXDiFWTddghKymUXtgtYIxmegub4A4tzP9SFtKKc04AQn0nTMGSjXLPd3XgxCJhjNLzLfuE8u7CIWfkxBCcM9vfxV6ybEjx7Bg4QKsXbMWALB923YAwNjRo2JuFg+PBLBo\/lKsXvsCpkyZEmAAgMsEPnr1R8AYw6GDh\/DYw48je8as2Bu9sWI1AGDpVR8sel\/vH1seI0sc2bkHj93yXygMDiGXpbjzO6fhsguXes45vu4ctM57Ab2bloa0kgwzp9WhZ+NS5AscnQu+DqJnrH15NNKudXd8RiQ2vezLX\/C2w8UENJkJM1+AMTSEfP8gzEIBei6HmoZ65BrqldVxK4IQRhNbC6DU+3JXwgzMF7+fgZTs03HcIZYE4+9nGGX7mG9sSbMQSWL6aacG7wng1U1bcOUnPoau1V2B52i1CuCWAs9smP2hdyOfzyObzWL+gvlY07UmcMGG9RswZ+4c9PX24ak\/\/BHm1AmJbrR\/46sAgFGnnoJyu5LYPJ1zho1PPY\/lv34Y4BxzZ9Rj13ML0NgQvk\/K6AQ7\/3w2Gk5fVjITAIBshqB7wzl44vlj+NCnr8Mnvn+TlY4squ\/x4BD55uxsNe3jx4oU4JwBjME08mCGiaH+fgz29GKwdwCsUICezaC+vU30oXImDSX0jO5o3h3iK0q8H+aOwwpUkhWcPuW0U1m4TOCcB2oRbt74Kq765JUe4geAA\/sPAAB2bN+BGfNnlaTkDSwHV3\/5q7j3\/90MTdOwYOECFAoF7Nq1C6ZhYvyE8aivr8djDz+O7hPd+MHtd+G0i85NdcOorhYzNQqDQ7jvyzdh8GQvKAE+c+U4PLnhnFSSbkdbBjdeNwWdC17E4a4lRfQiiHee24aejUvROPtfcPYV78Xcd51fYosEj9z8PQDABZ\/9OLoPHQGI2B+yvIHC4ADyg3kUBgdh5AugGkVdcyOaOjtQ396KbG1N4mKX5YJpWO69cN87pTQ62UYJSoswpW0SqFJ4hbkjc1ZENecYrFr5Mt665Gzn++ZNauIHgL179qOuthbd3ScxcLwbdW0tRd9XmRTULBjgm1\/HDf\/6ZYwbPw69vb3oenkNek72AAAGBwdx\/3PPY8zM6YlusrtrPfasXo8lH\/sAZqdkGIDCIw3Ai\/c+hI1PPYdshmDzH8\/E6I6Uud4VaJy9DKsfWYjpp9TGn5wCrXOXoba9Ax\/5VjCuIhpeLnbbp4WN\/60ffb+TLp1xBm4yMMOwcgYQ5Opr0djZgZbOdtS2tjhFKznSZQV2UmmargFNTqoJWAk3uSxyW8cYh2llv\/Xv4JkUAkyk6xjjlhJOpOMOSwpqmiYIKERSUMsD03Tb5E7vqfVNtME5s7T8tpXflyVYInb7DNNK4GmfaZpMsfK7xwESklCUOFIcNw3pycXvL\/38Przy+joMDQ3hT08\/i3dcfCHWr1sPP5556lmMHTsGnHPc+fgfUNvahNaUSnhPz6OyAvccOoIdL6zC0IluNDc3wQBH\/fixmHz2grBLlFh+m1BwXHvHd4vuqI1ffO56FAYG8XdXj8Mt159Scnt+lGsr4MfcS17GrgMMn\/rJtxRHrX0o5wCHVMzDzwBEjcOF73OdQMTkEllwiaajtrEOrePGoHFUJ2ob6oQ\/PXGnWzkZAPNNZADSb+JXO+uTR3wGHAWlfbWqLZf44hmAvPoXywAEQzPdPoakBQ+GonsZAGMmwAAVAxDMzZsVmFuM9P0zT8cHP\/x+AMLb1q8TeOoPf8SECWLL\/Y1\/vRlTFi9E05jRJUkAkRqhxlEdmPuBS4puHHCVPsJ+nURsUsvuy60VP5elFSFQG1+8ZgLOvWItnr\/\/jLK2+9q3dVx88yDu+sK\/4OPfvwmMmVaILcAKeeU1mZoacCYmbazyjGqoaahH67jRaBrVidrGhopunUvd\/wqvQfFM4RWCtUT3sYm\/ODefsDaNdKa8EmBb3354768x0N+PTCaDmafPRG1DLV59ZQv27tmLhsZGh\/i\/aRE\/ANS1luaHUvFN4co77gUA\/NUPb1YcjQrZEf9OHDiM2z59HTpOrsXpp9Zh+YPzK9rfG6+bgq5NvWVts375MgzMPQO\/u3UCTm3pxwM3fEusECYDi6hJONjbh6H+fhj5fDQDIECmNofmUR1o6GhDpiZbXnOfoq2ke+Co0mSxyivO3MAeuUSclY\/AXyo+7omTKMuIpoU6A0kNxbaTCtZDTJg\/Bz\/77UN4ZdNmrF+7HqtWvIyekz1oamoCJQQnTnTjlu98H5Mt4i9HXypqE5IniZbLOeu\/aRgwlZlhxcNoVmmv26\/5R+SyBCc3LgUlQjyfPrW8+3MVnvrVXExZuhI7l50df3IC9C0WEkt2105suBEg1xzCw\/\/2XbznK\/8nUiZyhfFoUE1DXVMjGtpbRX0EyzuPUpdgSpkolFKPOBqXa99\/rdqu7qbjVingeJhUoHgOoiVL2hEHJwYgxvdf07XIuAJRii6a8dlJS\/z3GTd3BpZv24Zn163HsW07QTkwVCigZeI4NI0dhTGzXSe8MbNOQ6moKANYcfs9AICrv\/sNZ8eT7x+Au8Kr8fi3\/wuHtr+BHX8+G51tlYlrj8Li+U04crxQKt14UL98GXgmA2IY4D\/jINfsE8oihWZejouQMXXRPOx4eR0Ge3pF4RALei6LupYmZOvqnDRlzDRBS3QBlkGtjEBRInlYrgBN17x7dN95hFJQCqeikJsTMPngi6rDxTMBuU9U12AWKpO9V\/Y3EH+87st6LoeOt0zFkW07MPaM00PbKQfxAxXcAjDTdESbQqGAk0eOoeeI7VzElf8Obd+Juz5\/Pa46z0TvpqUe4u\/pM9HSPHwpDO\/+7gxccOW6oq8nkmhfv3wZ+hYvFb9ZYzKlA7j3izd6r4E75YUY6t0OnfPxDwMANj2zzL2GUmRzOeQa6kF1zZlMWkz6sNSg6hXLg4hjIj4gmoFQXS8t9j2JiE+Ca7OqTzRm\/MK2E\/FbI5Uzkhd6Losxs05DfXub55m0TBajTptWNuIHKigB2Hv\/y2\/2mr6G+gcCFXsA4P7\/exPMoYFQBd89Dx\/Cx95TuutjUrzv4g5cdd2rRV\/PrcApMjgIngmaKLfcBOT+xlsU1XFjdSLGfJDmSn\/3SdQ1N4ksxTU5kTeAEGFGI3aB1PLaqh1\/fdNI3XRxq3M6tV5oSnK7D06lXxGcQyL6ZZtNo9pxzuFuL6MYWFrFaePoTjSO7kx1TVpURAI4sWcfAPFCNEW5rHz\/AApDbnrwX37+K7j6smacWHdOaJu\/fuwQrvt0Mq\/DcuGUSbXYsi1dpKOM+uXLAHD0LzrL+uyisFQ4HBUGhwJmpaiJcvX3vgkA2Pzsi4ClPdZ03RMVZse\/O+2UYR8j90krJgJtGNJeccYt+iaelZ5zHp4FKGpspNgBx8ypaEd4FBOldOHtYNgYDL+no42KMIDNv38GAHDFt\/4l9BxuMuT7B3DX57+CR26bje997S2RbXZt7MWYztKdfdJg1UPz8dYPBt2hw1C7zj3XFvt5TW2A+AGgfsWLAARhMZOhMDgEZhgoDA4pGIC0VSLApV\/6OwDA6keewKhTp1pip5hc\/sQstmKr3LBFZOESy61U3GrdTqxWXUaRzEoZrGMRZdSqHJYGTC4QaucejCsDBiAyF2A1ouy9XXWnyGIz47x4l9pff+mb6HpsIS5YEu\/IYJgRIa8VQi5HUTCSk8\/APGGizOzZBbOxCeA8QPz9i85yPi9Z0CTpRYD+7h4M9fVhoKcX\/d0nMTQwCDvgSf7XOmEs3vbXHwUAPP6t\/8Iff3gHeo4eh5YJSaJZYk65UInESXnFPT8RYgvYMdcrEKy1UEL\/kkJRkEWFJLH3NCSRqeo+LiovHYWhrCTVd+y4U7Z77qUXWJM3OIE5BPE\/c8+8YTHrxYH2+8R8aULVZYGBIfFdJmb\/Z\/t7\/fJlyO7eBWPsONSveCFwr7qXXwLXdfQtXoq5TSdFAlBwaxvgnQhmPm\/VB+gJaNhHTzsFH\/iGiAzknOPRm7+P26\/9J9zxN1\/CzjUbUo9BMXAZi2JiS6J42e5nVw2i1Gk3EfHH9EGOkWCGESqqJ0puGtWN4V7BEqCsSsD1Vo27D3\/7Bt8R77A88OWbcdM\/TcVZ8xrLefuiwerqAAB0YACsthagFPrBAzBGj8F\/3XQavvQPK\/CDnyxB3+KlqFu1AsQwxOeXVoCYhmPnr1++DGZTMwZPn6MU+23kp5wCrbsbf9is4YjxBoyCKVXMlR11nV0sBnv6rF\/Fb1Sj0HQdl998PUyT4ekf3IGThw6DmwxP\/+hO516dUybhvTf8fTWVDwyFsBzZkXhm8JgEQggoUfsY+KHpurKSlK\/B+HPKAUqBBH0eLkTGAqTBitvvAWcMM85bgrmXXmA3Hzjv6R\/+HJMbT+D5X6dztW2cvQw9G8vrAkyGBgEQcKvWX80rGzA4aw5IoYC6l1eib\/FSFPYdwoR3b0Xvj8pzz77FS4Vn4BkL0HbOWtDaBrzzus86Zrak7qf2yqd6eQe3bkfXQ78PpGr78L9dj7axo1LHAsBJkunGAnAOmIU83OgCJywH9nu3P5mcg0mOX957ivtw07AWXvl6UWDD9NUKFGeIWABm+eu7dfnsiAc3FgCO\/77X99\/20ufMtHz88757+P34hdVAzlYsP7kTK2AUQLg6GAjW\/Rizxopx53d4WhwelEUC6N6z35mQcy+9MPS83iPHcGzXHrxRBCHTCJfSSDDmVBO2FXOqz6AUfWcvcVZum1ABoE\/tqp8adpuF0WPBauswlGeYOHOiM9mA5LvBqPNGTZviIf62CePw3uu\/gExtsM5iIigK7aXRK8RtA7hTZDV4njI5RxGgum4F4Xgh5x9MkrBU5bUYQMxLFElGDQC86IzD5UJZGMArv38aAPCBb35JpKO26vfZL9QWrX53yw+LDuQplv5lzWHf4qWoX\/kiwJj4vOIFgHP0nbUYtevXOARvNrc4n4V0MKRqORVs4h86ZRqM0aK2IufA9HPfap1RXKCUfBUzTTz6DTeR6CXXfQbjZ04HJ8nWlLBYfNUkLVeFIDk0uJJQMSHxDO7vIpdhDAOoggrM5UTJDMAO9V3y8csBwKllb5fzton\/97f8ELfeMK3o+7AElWP0A\/thjBkLILjCD86ajeyO7Y6Cz6PEe2m5px2t+4TzmQwlJ\/7+sxejbqVoyyNBLF6Kmo3r0b\/obMdByJ7z9e2tQtRl3FISqSdY1LRjhoFHv+mGWs+6YCnGzTwVuYZ69J\/sQbauFpqulyRYps2KK4Obpqj46\/MEZIx5FK6Vhh1dSACYRWYe\/t+GkhjAq0\/8CYBQSI2eLsfmcxSGhhytJzcZBrp78Nkr5xV9ryj6148egdHeAWPMWNS8shFa9wmhpHv5JZBC3kOMIAScUpBUImzwt8K48cjs2wsAGJwxC7nXt6Ju5XIUxoxDfuopYrWfPgNGe4dgQDNPd4gfEDoNq3XPQ6qj53zitzQYT976EwxYiVpqmxpx+jveBkDkchjs6UFtUyPqW1tQ19KMbG0NMtmMW0svDYjtNSd2umEitR+yp51Iay6i7Wy34OEkQm5FF1rflOckrVsQcZPirx0BFM0ABk\/24vguQQDv\/fo\/SwoYF\/ZQP3zjd7Bn+VtRCqLG1WxpBQDQ3l7Q3h4PwRudo7waec5TET8AtDcAPYNAo7SFtokfAHKvvwZiGDDGjIXZ1uaRPrI7dzif7eewib\/el8iBw4oki7AWccacwBp51T\/9wrehttm1qpimCdbbj8LAEPq7e1DXeAI1zQ2oa6hHpq4WejYryo1rFFTJEHwqQpWfjaZFu96aplKpqekajMLwEorp9+BT6DWA0hlA2tLfI7n\/B4r1A+Aca379EADgfTf+k2Sw8nqCMcNwUlW1NJXH4qiyv3NNQ91Ly1G7YS0GzljoOUc\/fCiyvfykKc5nmVDlz5\/79GRs2uv+bh+zPxOjgP5FZ2No6lugHTvquTY\/ZSoAMddOu+AlaeUH3vH3n4F\/zFSUZicFMQsGTMNEfmDQQ\/wL3vtO1DapTarM8rjsOXIUR3ftxcFtO3Hw9Z04umsPeo4cRWFgECxBnW2Vc0zUfrjaF8Ji8yMyxsR2KATV\/tx+FEWVy392NwDgzI+8zxpI13QkP78o\/MKLV+ApEKrFh3ffHQeezYLk88ju2gmzpQV0YAD1y5ehf+FZ4Nks6pcvQ37yVBTGjcdlO5fh8\/cSPP3IOZ57aceOombLZmWfAOG9+N3b9+DG770RuL+eywLEP1ssOcrKo6eKcc\/3D+DJW3\/ifF\/w3ost9zvFM1r\/J4SK5KFDeZGEhAN6NhMTQx94m8qzNF0Lrq5I5qBDKC2DDiA+6EnVF87s7YArCXDGhF7C8ukXobpu29zOg0DgMAG5bdtc+WbiAakZgK30a5swDuNnnxYi9Ls+6Cf2H8QVl5Ue0VRXQzGU58hliWO2o4MDqF2z2jknKfEDwMDpc1C3ZjVAKQZPm4X6lS9iaOpbwLNZx0pgY\/L7F2PTf7wEwCsZmG3tnu+9b12KZau6cemnNsSuBJd+5R8U2yZr\/Dg8Di6OiZBzL\/G\/52IAydxnqa4jW1uDuqZG1LU2o665EbnaGlBdD\/VQSzqZhdjsnpkk8o9SAjNi+2BDFOtQi+WMiSSo4CQh1REri5BX+29HB6osGzaTECnCFC1SqdBdwuKj1YRUDMAmfkIpll5zpRV5GnRgsbOfAgQvP\/AYVt5dvPYfEIT9dx+fgB\/\/ch9umLUDADw2exX6F52NupdXinN9Gnm7TdVnrfsEzGbv3jyjUwwOBUXgE90Gvn\/nXtz6s91Io1a47GvXSd9kMrMcRXw2cfvoY990TXzzL7sokW2UUopsbQ3q21pR39aChuYmZOpqoGlupuBSIdcCdBWFMf3SNBgFNVHJ4CFZWTzEagXrRFbvgbsoVQolKxBHAIkZgEP8hOC9X\/ui+FGaqLIN2TRM5531HzuByRPkcuDpULNpA\/oWL8VXFnGMWfgCbvhvoH\/BmbGrvU38+UlTPMRf9\/JKkEJBSfy57a9j6JQgsxocYjBMYMxZy9Hb51K6rlNMn9wJSjW8bVwTwAme3ROsqCTjXf\/3c7H1A1WKod9\/6\/vO5ykL5jqBKaI0GAI0RwDomQxqmhrR2NmGps4OZOtrkdE08ArYsqlGra1A+TzZZIKWiUv8VWRSkhiRXBqMahqMMvfN6qGnPS2jwxiK9xorlw9FOZCIAdjEX9PUiIv\/8W+8O0OTwczn4daoA0Ao9EzGGZs0Xnz+lZnVNyCzexfq9+xC3qK9uq5VnmvM5hbHdq9a7bWT3RicKdIr9S\/y5vmTRfihU6bh0NECPvuVrXhm+QlHRNU1iumT29DZWo8X1u52zj977lQABIXCQYCrah57cdnXrnMIl1njZoNoGrSMrlSs7d242cmhqGV0tE8c5zluZ5W1QSlFpjaHhrZWNHV2CHG\/rjYl4XuZENX0SA03ITEVgYsBd82OtrQS5w9CKAUzg5srqmlgRuUJL8kI8BQ5FSuNWAbg7PknjcfST38M\/kcsqBxlOEOhkEcmmy5+P\/vGDu\/KfPZigGoOQY9rAV7ZB8zyzv9Q4q959RVox485bWYO7ENhjHsxY8CPf7UPX\/\/eTgwMislRk9UwfVIrls4bDw5q+Y4TcBC8vGmP9zGhgVsrEeF+bb4LPZfFJdf\/PUAAI19QatS55UBl29jtfTkBsObB3znnzbv0HcEbSK9E0zXUNDSgaVQHGjvbkLPzBJa66odcbuci4LBX4NJuE4VS2MtwefCJ4qahJYqHpQ9pEMkAbOJvnzoJSz55ReAFROZv4zx1frf8ZGEys5V89S+t8Azazm8Duc8C7GfBa4emz0D9ihdRGDveMb0NzvAWLS2MGYf1r\/bh4o+vR2+\/0NiO76zHmTNGO154guApmPXZZgAAwYLTp+DFrtfc54cGtxwEVc7QhR9+D1rGj0H\/iW4AQKYmajvERcZkO+UUgGd+cLtzdO4l56svI4IQM1mRHLRl7Cg0tLVBz2UsbXWyiScHvcTCSULiJSwhqidrIi3KLmGUDIVrtp0YxemqkIzlnosy6NUREahkACcPHMKmR58EALRNnoAln7zCOuKzDYekWQLEQOT7B0AIQb7AkM3QyGAcv0lPZR7KaEBGB3YdA9rf7V3t9YMHYDY3O8QvY+eeQcy75GWYDGio0zF\/Wgc0Zy8sVnnmrPTeVV\/+u3Gr15zHiOZqsrl3MuQa6rH0misDfTELhlWhN2j7d42p4pvJmLOn1DI69GwWsraFgDjmKD2jo761Ba0TxqChtRmanim7lCnSg9v5CsMbtxXDoUo5LirhkBBnHKkhN1CnHA\/jIUwvyrEvZ87YwJW4QsYgqSdlpeFhANxkWHHHPc730991HsbPnYV8fz+ytbUwTeHCaeTzAOPClh0C03q4+R+6FJ+95nH8\/OdLHBG9f+FZ3mCcxUsBzp0EGkPTZyC3VZ2Qc+DHgHYtwNuWYWjadMfTzxg9xtnng3MYJnDW+9dg645+ZDMUS+eOFSKqRPBRxG7\/NRnw0lp1XzioqM4LwOTAc\/sPglCK8\/\/+r60zgpPWNE1hwlSY7uTUXgDw9Hdvcz7PU0VZWpNMz2bQ0NaC1vGjUdfcZKUFc60LpJgcfgpEGXnekAAAIABJREFU1QNQKS6Fnd+\/aJjOE4p9eZTpzMto9GxGypuQDDLjoBFFP2KjABMYRdNKvFTXwUbYdOgwAFvct3GxlXcOEIET\/Za\/uQxmMmUONFe5RdA+eSJ+8wBw\/8oXneN1q1\/yuGL6Nfp+4u87e4mI4gMwsGQpJrUtw00vj8Z1i0WWYFt6yBcYZl60CgcPi0myaEYHzlvQ6ojyNsHHET0HQf9gHutf2ebphz8qjkPDyV4xLs\/tP4h3fPFvfM416gljFgpgBgkwUKeMGuApuhmegppBy2RQ39KMlnFjUNfSAi2jWUVBXKIfjv1vmFNR0ETohabrlobe156HIN3+x4XPcstTT3UKN01pLCySdiywMc5EzmYv5Lji2ezah9UMkqnJ8cKgq8g77\/OfQrau1hlkOb+\/Cpkab4y5nRJM5rxP3foTcGvfzhobQXt6nM+FUWOQ2\/Ya4lAYNx75yVOdZBp1i7rQs3EpCDhmXvwydu8bcnj02xeMhyzOFwyOIyf6MaajWckAADjnvrZjD44dF\/v1qZMnoL291RKzhRZ6dde6wAS88LrPWsUk0ot0tk7A9aYjMPMF\/PkndzljecZ7LlK6rlKqoa61Ce0Tx6OxoxVaJguX6RBQKrYIRKPO2KQpDirv8jkAVijAX0zT\/ssMBu65wnsWOHeq6fhdn0zTlJxzuGvKg5tIw034Yc8xuzgocUyhrgQlJQSx3pVtolQlBLG\/G\/mhkPEglqTiLybqfgpKJqJIqNyGPCJ2O6xgYEQTgtjEP\/vSCzD6NJGZ1zuRw7Tb4rfCYN6dxPm8JCq5QznlrDPw179Yi9v\/Cg7xA+JzricoWahgE7+92m\/905lomrMMnAOzR9Vi6qQmPL\/rJABgxYaDmDCmCdt2H8OZc6Ygm8lgVEfOUewFVn1CsOnV7ZgyeTymnTJZ4vVWVVnr+8GDhz3Ev\/QzV6G2ucnXU4VnXwRENmATNCM0\/\/bYG5KJUEX8hAgHn6ZRHWhoa1EWAuGcQ9NpSdrzciFq1SaaBm7INn7\/uPm+UyqlK7JW\/bCxTiH9hEojpml1QXgMBnIjlKEs2UhBubGhmoa3nHMmJi2Yk2AArRUjJrjij7f+N07+lzeiLgp+k17utS0YOlVURDnebWDikhVobarBwJABo2DinPHN4ACe3y1MgucsmBYu4hP5OxSfxV\/7+\/oNG5G3CZIQvP1vP4lsfZ30\/ARGvuAbqvBxk3XCzDCdCUUAEI2i7+hxrLr7QQDAtMWL0DSqPdCGns2iZcwotE4ah9qGBuve0r6fUMv\/glSFBMBNZv014WeRDHBKZnvTbbkrv9xXo1CAnRIMnIAxQ5IQfBKAhaiUYPZ30yh4iJuAwDAK8FpHpBXcjh2wjzPuXM+tVF9VLwEsvvZqcMawd81G7F23yUroYeK151fgtedXABAMYcGHL0Pz2NGKJtxkiu6eVn4YgXP\/9pNo+vydWPuvwLyJ4R0qjB0Po73d8gNYIsyB1spfMDjazngBnAvnotnTxoCDYFnXDsGbJU08gwaA4NDRbnS0t1qMTCbucKLv7e3Dtu07UCi4zjdTlyzCW85xU3o7W0eTIT8w6PxOKRWrecS664yOiJYKvO5V9\/yP87mhvRXMZB6lIaUaahob0NDRimxtTaAKECHUU47d7yhUDJhpRmrR4661V2iiSPjp9fCLhrpmgo14RV1046XJSoQSECRLVArI0s7IyWihSUGPvbEH2557UenauPAj70PzuNFWxRX5YW3LgMLEZZnLnvnPn4IAGPwJkFUYIQfmzUftujWuF9\/xY9g+UI\/TL1oVOHfO9PFoaqjF3kPdOHn4BOZ1NuHIQAEbjoqtwNkLT0dwr09gmiZ27dkPXdMwduwYHDp8BPv27Xe4d\/O4MZhz2UXQa12bPTOE34BdiguEwBjKK\/f9lFLL1BcNVYVZoml49vtCYaLncph90bnid0odCSNTU4O2CWPRNn4stFwGmialYCPEXfmt3zi4MHuiOAkAnDu580QuS3nixksApmmCeFiiVUzEYn62my5n\/uuDEoBZKFjfbQkA0l7bvmuREkAhHxiPNBIAkY6bBTlZqVcC4Jw5CVAJiCi1NkISQKKswMww8eqTz6J7737P75m6Giz51Mc82wQCsWLKWwJREVgQj5bN4Jn\/FOatliYdR78HUNPA0KmnwejodCvqcODff7QLN\/9oV2TfFi+YAQ6CFV2bcf54EXX4p72HAQBnLZwLDmBoKI\/NW7Y5K7ooWS1Wkkwuh1OWnoXx82aF5rkXpqPgMEWtWCSECdg2cFhhp577FAyY+TxW\/OLXAIB5736H18VXo6BUQ31bCzqnTERda7MYa3lSO27X5WMAttgufhMT2OIMEAoyMW5pGADgWjpE0k+rrxFbAGaV+JIZQLD9EAZgGABnw8YAmMHAuKSktK+zmJx935FmAKHLFOcc3DRh5gvI9w9gzKzpaJsyEaxQwP5NW5Dv60ehfxDP\/fDnAIBzP\/cpx1\/bKBigugaqaQ7x222yoTze\/rlP4fmf3IUTJw1onxLHNG0rONtimY2Th\/X29OdRX1+HpsZ6zxYAAF5avR7+zC+tk8bjjA9e6pS2yvcPgBUKGOrpFf3IZqHpuo\/cvd\/MgrtXDKvCyxnDUF+\/VzfCOaimOz4SfhAQvPasay71i+2cA1o2g7qWJuTq66BnMtLEjAYLTTeWHnZKMTs7rk2oKsRlvEmzNVHG9SeUnuMEbV6E+2LUvYWNP1k6aWG2HJltgHL2MtOEMTiEfH8\/8n0DKAwOwswbzguwyxMXBgexf8NmAMDzFiOYfdlFaJ8yEcwwQyOjOIC3\/c0nAM6x7Ke\/AjOMRLHhKmx8dbvz+RmreIaNTG0Npr19MVrGj\/VMfn++fADOBDbzeU+QjtxnFWzznadWnrTH9U9aL\/H7CBzA0Z0i2MhPGISKkNdsbQ1qGhoCNQBjwRmA8jgEuX2isRrwJASeKNU21MwkafitbGkIOSNRO74OpTiVS1snxa1HSA2gZABmvoCBE90Y6u2DWTDcvZmvo5maGkw6cz64aWJ313oAwMbHnhIN57I48+OXC1FY8kRjJgM3DGh6BoQSLP3sJwAAhYEBvPbsizi6Y5f3RVux3nouh8ZRHWibMhG1zY2oa2sF1Wis9SEcQeIr5i044qnPfCQLjMHf4ifb5PlznM+UUiHG6zpqGhuQq68rqq+VQLH++d5koS4D8CQX4UK6sO+gaersQ0kQVrgUEEyEc\/ne5RlbOyZAEH9Zmiw7lAyAEAKayVgOQdYAMS4qmpimSCtlMkuZwUE0DZPOFIUxj+3Yhd4jR2EM5bH8Z8Kt+K2f\/qivsCIJvEiayWD6hW9DmpHy7ji9v6t\/iyO8oPUiDmEtqn6394hhrcsK1ZZxwuIiSy56LoeaxnroWbH6m4YJqrsMsFwifhoQSgCWzjqglhrcvrsedF7lGWDb6k2rHXXS0XAoZga3TXfW27EyDHHORPslWD5Eg\/HXj2SQk5IBiH1ms6Ps4dYgcctEKJRVBZgF659hgFupntumTkLb1Elgpok9azYAnGPFHfehvr0V8z54qXUHHlgNXVFO9ULVA5Se+FTtqAgyblJFv7CeA4dxaMvrGOzpRcvEcRg\/7\/RE177xUpe3FxJBE0qRq6tFrr7OcQwSjBkgVLP6PLyypOO\/QImQhmMmMmeue7MfVBPbiah4AxsiD6FqyxD9\/HZdABnKICBiW32sftjbmIQiP2fcOde+X7QL8\/Aq\/mSoJQBKoWUVorXNCDi3pABTMIChPApDQzCH8iLe3TAAAkxadAY4Y9i9eh36jh7Hi7fdjSXXXiXuYf0\/2ZCqBOlywdZ6R78A712D53LTxIqf3xeYJCf3H8Kul9YCABZ89P3INdaH3uPgZuES7UhL0rzQMxnUNDYIr0vJ7m8aBpCh0MpQl96rUIxnJrLXHiEECNnLE0Jjgn7g+CoIQknU2aQ\/Svdw6wJEeumHNCOU3EKp7PUOdK\/hzDaZkqBXY5HSRCWRLimo9YIIAGgaNGSg1+TA6xlyhmAGxuAQCoODKAwMwrSSX0w6cz52r14HzhhevO1uLLaYQBLiS786R18dfmaSc9X3Xvfbx9F\/7LjzvWPqJIyaNhUaJeg70Y3tK9cAALruE6nUF19zVcAECLirxZQFYv8vO\/BkanLINdYrrQ4EQstfdP3EGKhy3amUby4TkAx+SfNCWGK4OmJP\/VyqaMO0EAk8JObE46P6lHe06MJkVrxDmFXBkSasPyOcHkybuHDu10tpgBACQimorkHPCIaQqa1FpibnprjiHE1jR6H\/+AmwgoE9XRswceHcNHcptndl\/hfEitvvRsEydc668G0YdepUNLS3WoE4BNnaGoyeNhWjpk3Fodd3AgD2dG1A9979GGXFXth93WMpUicvcBWAhBBomo66liY0drYjk8tJDFOs0naOQa9C1PG9c0eCetOWRY2qzJRt8VVuzyVy4vkrdG1UuP5yyzxIECo+O3KGpCHnTF6f5bu6cJR1PNhfv94A8AZbea4gRHJPlrY0nvgC70j6idZzFrF9Magn+3CgLUuKC46j6mkrh9LlRhlEcHA9l0WusQF17W1oHNWJ+s521DQ1YOKCudCtUtzLb7sbpRCeAC\/Tv+JwYNMW5wXOese5UpZeolzh57zrfMx51\/nI1deh5+BhMQbMO1FVZjOqa8hZ1XzeDPBvA5LZ+t1zwnwrnPY9zKQ0fU14d6K2CBEOYMRWJiYgrSpIEVZeBiCBEAItoyNbX4u61hY0dHagvqMNbzn3bGdwNz32ZKl3KdO\/4rDjReGePOsdwl0X1ooXp42f\/razMetCUcNv+e33YO0DjzrH2idP8J7Mxf4\/W1cLqpfXjl8pFKPVplry95Au8QaJ1T+o+6Me61iHnZQxF8WbscuDyt+dEFBdQ7a+DnWtzWjo7MCc970TgFCQvVlxeKtIFtI8ZpT0a\/KXr2V0zHnX+QCAgePdTkKW0dOmBs7Vs1lkcjlRwy8CifP5FQF\/OaywiRtK\/EkIIyExlFNAjkoFRlUh1imz\/oQhLOGJCmbBwPZlK7H2\/kew8eE\/4Oj2N8rSB6CE4qAHXtmKvh27MWnieBw8cQItM09FQ2cwbFUG1XVkNQ1aLotTL3wbXnv6z3j57t9i0VUfKrYbI4bXnxNlwMfPnuH8FsrNCQHVhEMU1TQQAjCDwSgUMO\/dF2LXmo04vu8ggGDSUEIp9FwWWjajJiL5tzJbkzyCtk87T4gVVu2j9zAzHqU0duV2Un+HRB4ya98vdBnECUwKt65ZbkQRuQfjKhTLjkmJJXZCYsqu+e+hTqnOOcfC+ib8wxe\/oLzu3He+D1OXnq08lhSpGcCa+x7CipeeRZ0TD++iUCjgXR\/+OCZEKfgIgabraJ8yCa8BjgLtzQ7hrSfALb97Qik0qyRXtr4O2doctIwoz20M5dF\/sgeFgQFMWXQGJjOGTEszClb2YBvEkqDCRFIPQqrolAWKZimllqOYNyJUdXJSsd3DQIirPFOtvNxyBLK9\/ISu0XbscftBKYWp8EFwHH0QZDY2hLuzkeoZuF0diRJP4hLnuDLpiRfMMPHLG7\/qfDdNE8eOHYOmaWhtbQUhBM8\/8TC+9I9fwcHWhkT9UiEVA9jzxHNYv0nUyOvp6cGB\/QeQyWQwecpkEEKQyWTw9EP3YcG8JZhz+WWRbRFKkGuox1BvHwoDA8jU1hb9EMMNeyLUNKoHnhCRpbemsQG1TY3Cfl9XA13XLacdERFY09SIod5eDJ7sxWBfPwxF3kVCqSU1qCeM5jvGGVNLIlE1x0sAIfZKLIhOmNUqsBWJyyAs9Ud1GrXSlXPOAcatSD33Gjm4SQYzDEeSoJTEFiaRb04IBSfc81tSKUIm\/tWrVnv0Sjt37AQALFi4ALf8x8145zveizFvf2uyhn1IPCs2\/eYRPL3sCQwODqJrdRde2\/oaenp6cOzYMTz1hz96zu1a9yK2L3spts35H3mfOP++h1N2e2SxzRL\/J55xuvI41TXUNDeidfxYtIwdjfrWFmRra6FldBHSq1Ho2QxqmxrRMm402idPRMu40ahrboSezXiJnYjkJ8q9tWWC9UNlWy7GR8BzRdTE9c3qJMVKU8N3j6TRcx5zJhUFQFmIFj\/RWMZIWH4pgfozQCeIOqTb3epTIl+i+ryu1cJz9Ik\/PoKClJQmDRK9qcNbt+Hl9SvAGMMrm17xHDMKBi6+5CIcPHDQ6RAA\/O43v4xt1x7wYrS0I4kj23YCELkEbDhx9EREITa2t6GuuQl6LhtqFSCUiKy+rc1oHT8G7ZMmoGlUh9D4S96Adrlwvw+9HpF0RAS42I5Www87UMsVyUuBYn9coTx8hFJpXqq8GosbzTSp2X\/+8x8DANZ0rcG6teuw6KyFeGOHOi\/G\/n0iR8frj\/9ReTwOibYAp9QK99V1a9cFjr2+dRvOeutZ2Lt3LwDgwIEDGDNmDBqbGnF0+xtoP2VyZNuOl1mR+9cdL7yEA69sDT2eqa3BuLmzMHbOzIqmx7b3\/VTXUNvYILYHCW7HGQPJUGRqaqBnssjW1gg\/gSPHMHCyF5xzmFacBSCYgKZpyQJ\/uCiFTRNkJ1JcnMimkHRfHFkyS4ZC+VfOYJmkrsaEUjAe0l9ClbJ8XLWfJGHPMtOxGWfX6i584PL34+4778FMSekMAPv378fYcWNxxUcvxwYjvRSQaGb84L+\/5+mQjHe\/71LP931792HMmDEAgCMbNscygJnvugCv\/O6POLxtJzoVJjAlOMfKX\/w6keRQGBjEGyu78MZKIZ3QjI6FH\/uA45CUFvbKk60L6izssOWapkZoRTjtUE1Drr4OWjaDTE0NTh46goGTPSICUxJFRyLqL4yZRREnM30a9ph9PDMMZz8u2jYtSSYi629KCIVgPCNihgGqWUVkfIRNwCULiO3Tm0w\/oYJMV2Gi\/JquNbjqk1fivl\/9GtNnnuo51t8\/gM5RncC+3cpro5CIAYR1\/LVXX8eChQuQD0n8MWnCBOXvMprHC2axfdnKRAxgxc\/u9gxYx9TJaBo7CrbWVyYOaml4+0904+CWbTDyebCCgVV3\/QYAMHHhXExYkMYlGVj3P48DAKYsmhc4RihFrr5OFOS0I\/ZiEnIGmCoh0LNZ1Le1QMtkkKnJKZKDiMRewobNLcVi+WE71JatPUpD7eimQqSXNfDl60M8Iwns43WRc1HkcJRtoULHQBC\/+juX2MxNHlgpHFnPqRO9cM6xY\/sOfOSqK\/DYI49h\/ITxzrFHH3oURpFlxor2AwCA1rZWAMDGjRuVx199dQvmL5ydqK24Ekk9Bw5j46NPON8nn3WGqH8X1SZnoERDbUsTpp69QPxIge0vvgyzYGD36vXYvXo9Rp02DW85N5kWdcAqGmLH5MvQdA3ZulpoObcuH2esqNJcVNNQ29QALaODG6aTX1BTtMUZs7yPVX4CqW+dGFFONKnFdokI4mAaafMApOlGlM4ivI9Eo7F6CX+iG6dJCVo2G7poHD9+HOMnjMcl774Eq15ahVwuh56eXhgFAy+v6gImjwtcE4dESsA3dr5h9dntVPeJblx8yUWBcydNmgQAOHjgIGhkJdzkePXJZx3iHzPzVJyyZFGsv7gNWeNLrACdaeechennLUbTGJFE9NCW17H8tl9h4MTJZB1SvBxb\/Pco8BIiLCKMUIpsXS1qpCjAMHdgzrla+68Vz+P9ZCAyExMnwCsqkq1sUW4VcJWNslKkre\/ntJmgnyrpR0Xoc2csBACcMf+MwLGNGzZC13VMmTwFu3ftwZ43RMn6Na+9nrbLABIygI9cfU2gQ\/v2CO1jwZcWu6OzAwBw\/32\/xbS3L0nUiZYJ4Zxr1S9\/g+PWQ56yZBHqWpsTtSmDcy58PXycfcyMaZh+3mLUNAgl59rfPILVVkEOFbY+\/WcAwJSFQfGfajqy9XXI1deC+mzuUZNKy2SckFnVikoJAdV1UdyDqpVPnnsx5iahkFKJJ0GSVZUQEQ3HIaQUlUgtskSVh3AJ0vvLxyt71cerxRo1\/8oP4dZvfxcAMHtOUILuWt2FPz3zHHpPikS2hw8fcbbSaZEoHLj9lMkY2rMfc+bNRkdnBw4dPIQlSxcjl8t5LAMLFgox+7f3\/w\/+\/RvfxikJ3RQ73jIJe9ZsRMe0KR5X2JV33Ovk3Z+6eJHzu\/t+\/S+SOC+fECJssJYjjaZrwp4Ox2fMuapl\/Fh0TJmEozt3wywUsG\/dRkyQcvLZsBnAuFnTA\/fP1mTR2NmO2qZGZ\/LLvSNWbkP3V+Ik9pQDdzl3w3oJpR5vOPtalyCI73q3HXARVeeMh2LEIl1g4Y6QfB5zcuZZXnaECldWM1gXwNuelRHHx8Ds+3i942TvP\/t9UudZmBOqywNjY53sbClUz2haHoBCRUQAoiZ+f9vBPnrvofLvl1O2q55RjIvXM5AQgjVd67F3y2vYu3svThzvxkDfAF7dvAWvbd2G3p5eD5N74NnnMPZ0r3UgKZIpASnFN2+6BQDw0as\/4hA6IET+tvY2RwT67f3\/g+v\/6QZMPefMxJ2wJ\/Thrduc3IKysk8mfiDMYmi73lJoegZaLiOcajTdtUmbDMw0wAommGG4+Q2t3IannX8OtvzpBTCT4f9r72pebUuu+qra59xz7te7773+oLttg026bdsoRrEh6YgoaI\/MQKIDbQloVIITIepMcOBfoEh0IAkEQiAKgiLBKAZFCDETJ0mnTRCJI+00bXe\/5L1379lVDmpX7araa1Wt2h\/n1JH8IOn77t2nqs6uqlWr1sdv\/dtf\/g289xc+yBu\/ENCcnMD6dEuq\/0qpgLUnxeqr2pYsLKKVZpH72th77lWJjQKfvhEM3vMF1wLKWDjVlbujbE3MSMN94akf+UH4p6+8Ct\/67F\/Bx37vt+Gdmxu4vLyEy8tL98xrr30dvviNb8Ajz7xrdD\/s1fHjr3wI\/uD3\/xDatoVn3v0MvPQT7weAXuV\/9atfg7\/73Ofh43\/0Z\/DMB16EJ154vngwb\/zHN+FdL\/4ofPHPP+0m49mfeglaxMvgCwEhjHvvZHsKJ+encHJ2BqvNGuRqBVI20KwECLkC0ApapUC3ypTovrmBdtfCzf0HcPPwGtTNDbzwMz8Jr\/7DP8P9N9+C+\/\/7FpzeDq8cWIaYEKbUt4nioy3npsRXMyoF1D+RjZGIflbKBixtmGrbUUZIFPals7nxlKeBiKRbwefGN2SfE0EmKuGQTQMqSRuOt1k0pKYZGApTQVJPvOd5WG1O4JN\/\/bfwP6\/+O7zw\/HNwenYKX\/vqa7B58nHYXl3CEy88h65J9pg4lYF8fP0L\/wLrbz+AX\/vNX4VVZ5B666234eN\/\/Kdw+fRTcOvJx+Hx73934aC0IccQfUKHEAJ+7Jd+Ht7579eTCUPNqunosi5ge+sSTk63INdrL\/RVgJQAcrXu1p8GKaQxDqqO13DXgrpp4eF3vg3X9+7Dw\/v34Suf+0cAAHj\/b\/wKAADsHl7Dlz\/1WXjyB56FO08\/Bb6q26xWcPXkY3Dn6afgZLtBVWfdjbVT+kA6D0ZYAtt9r\/UK7I4RbuSiuxOLzpAlBp+3hUB9FVWuGvevVGUgHwIEKEfZZkP9+8o6LjMPTGUbAcK5JY26GxbHtP9VO7w4qG7bzhayA\/C+MSDvZrdrTSFOiCvvgHtPANoQpna\/NVWFwuKmnMpAQVUfbUvhxSXGzE9hqTf\/e9sqRcPP91enfvzYFaq9voYHb78Du4fXINdruHj07ixcAsWi47mfNjX7Pv35v4d7r78BQgg4u3sbvufF98J6u80G\/lC4eOwRuPf6G+brNxJe+vVX4ObBtVGpkZUqhJGom8sLUynn1gWsTjauLp7\/Aa06wknv5QohAJoGVk0DzYnZxNtbF3Dz4CE8ePsePPp93wvf+s\/\/gi9\/6i\/gxQ\/\/InzzXw2v3+Xjjw3GbhN2Utb\/OJd\/SsFOKSW6TmTTMOP3psP66MMAJdkF79BjwPgFwWo0QgIwjPDNqoH2OmOw015dPs008GW0m9kKrEInYAs8Ds3JCZw\/mk63H4PRusOTPzTO6EDhPR98Gb70ic9As17B+z7yCggwi8I\/6SyEMHfozeUFXDx2F7bnZyBWfo28GPmJ00p3effmLv\/DP\/ez8IU\/+QTsHj4EtWtd\/D\/m\/7cx\/akFEqvhum1BjFDdgj68fPeU8JmjOjD2anueQO93Cj\/BXDNRiqzqPAr2E81qxSYFJeFUHLMiUvEKPprVCnZIsdc5gNk0zLVjHoKRsTgsH5EHu4Df95FX+l9qGFr7OoPb6Z0ruHzsEdheXmSvG5zsNFeZRghYnazh7OoWvPyxjwIAwJc++Rm0CnA\/JEOKSl3M+80XZbQlFuaweEZPYkm3TzXGLJ9VuNFwhqK8BtKsmq6mAcbJL8j36Hogvo9xMgyiF4rjMiiodljQ1R8TVX0oVT7t\/z8lWAE+8NEPQxhqKTr10Fr7zAl8ducKLh65C5uLM9YL5Pqk25sbpwIKKWF9toWXf\/e38u0LAY2U5EYk+eUSAUAAnZZgA2+6tYXRTS+1iKhtaLwnfSkvSwzCtqJnHsM8F1qb0Gd3mltBEQiM6dcfymBqin30fffzIqJx+X\/PBxZxAoiWRFUCwMD3h4KbXCEMN97pnSs4v3sH1tsNS7Lb0wbAs6KTz3YLzysXdbLdwMu\/YzQBa48YfH6yydprilgQfhfxiUKcSZPHgrWQXdCMOeGo5KJpAKSnKWSEC600aPa4APANqZUChSYQdWvzwJt4CmZ2Eo8H\/hJtpRhtKuNc3YKzO7dh5arjpNF0XgoNZuGWE1UYIbC9OIdHn30GLu7ehtVmA7sHD5GhTpcCJQtJtW2Xu86wb4z0b8fXfk7ZLoC+zBeFnADoy2nNIcbsmBpWYpHNSLSh1RqztvYjBbtGSVQWXxCjHgEghlYmy5yz3pzA5uIczu7chvXptrPopxcipsqRdFnE8\/2X+FN4AAAYMklEQVQfAV765Q\/B\/XvvwL3X34B7b7zplRCnI85yyPnn\/bh\/bAlppecP9JkLIxc+zpfHSxTCyTUF8fMQvqfAEJTGDktGym\/8VMWbH6AiAYBByAY2F+cgZAPr0w2cnG2d4Uln1gMmUDCrtUXuLiakgM35OWhl0kK\/8+ZbXgVYoDWA7o6ICZ54jCkBRYOfRbcUcA4+AdRtgWIIpjWVad\/PsiPJRkLrFe70kXMTGu9FfjPXvd2HqPryIqSA9ekWTu9c9Vl23maj1MwmUUADW3js+2EjYXtxDud378DJ+Wmg+sXZeKZASBi\/7p9OlOfCtoGl\/eJYbvNr8h\/Rc4Wpv6SwneG0jAWo6gKM\/L5jlZ3a\/PG6YBmcuQOtBNUIgJRFvFk1jpQhxkAIMO7isRBITmz0N9k0cHp1Cee3r2C1OQF7BxSeUBJSemXCfGgWP4DN7z8eFG5c5LtxffWs5mVnnU9oGUKE8za5T6uZ+n3NSGW2FOoRAKySS\/hk+YuHe5qzuexi4SAAmvUJnN2+gs3FhePst5l7rI3LOOl218yAlMUERTxGjVfKGXtq+9rTPivkYuPNGfH8f6aYgyPb1KEr\/3JQjQCYhLFrsGOANbn4\/AhCIQWsz7ZwfvsWnJxuYbXZuM3BMcrNedotCezbx99vzCm3syo35wQeeUJj7VKyKjVnxAro24yudmDDEmbSLJZGXUbAhD1Ltwplh\/Efb1ZNUhYk7bhagWpDBp2ULaFpVrC9dQntbgfNeg3NajVbxJlFu2uTY+BirJ\/azz70IaXMFshIKgZxXkeKLZfwJhiLf3IISL+Jijw8I7\/r+9AhvHOhMg1AAz0LmlxUOV94\/FdroMOgXIRb7mQCWG1O4PyRO3B2+wqazQn7ZI8LbVLgqJCcq8zcgSo+37+Q+L2HDNdFfp\/SAvYVKZfjl\/ThC8TUHM3FirQk6h9hB9kx4bqQUzsJDDUSkxuyaZKhrpyFJxuTirze9My98WmJXixmpPVWtgCITQzqe5mtjxjtwIgafqcpQUAxqLnNzrmbB96x7s9bcI9HTh32tad+G+DxCADU+KJ1UPKKWlxjtkJqEQdtCxFIel6Y7kybU5iriEMnHO3pbCnR5kbKY5N9b3vaFKXknjZVt8+7iPMMeoiCL1F7mHDdo2OgxO3CnTZr0GOdVshezlnG57IPGeYfxoOVR6PlMCraETP2U9e+RBCQX5jVT4KyXIJkotdIduF9ozIBMH1nYJNZuvzdKND00hBU8sjYvn1MDfO1Amx6bb4SLNBXHLjTWd5RS7\/SXSwG5cEJ56tlEIXIpklu6EGOyREJ3MoEwDIQ0X9TiH3do3y5My2AnK0gm9xkbSXH4JLKjFGuViiHgNHSvc8Gd3miq04IcDY\/F74mkC0hXhHqEgALr9NapoVzIs8VoaY8Ys6akTXq5QSxEMMEkYIAnzmwSFn0hXEkI7ac8hDs4rlfOJXTN+VAx1rkGKgoWvBDwpXNWmDzpAWA5vndB0mE9MQtKRQPUrx1JI5CAPRWdiMBnA+aOYnDoFZ8YVB+27nXSu40M4ExOakj2CrsFD4AALNZVEfKYb0LS2wgykjHvoYdeN+596zBeRBq176OQgBQQK30drH6v+I2WDpZI+dWSAlqt4t8z31oMkDeA8GMJZqEZFTlCCGQ946I4J2aQi4tu9TYoi5XBgxtWOlnDhsWXr0ASPlR\/SILfektMCeVp2ajc6I1QSK5vK3ADbNtod3tgo3P+rwXfceJV5i6yMj4io4OfWo7PkyYsermz84E\/yQdkqjMQI2mdTaD017rMM7G1FV1vx6aIeoXAIxkEeqZQdpv99\/evWZVts5ajhFbpCY+lSNPTGwR7Rdy740Lj2ILbizImgK5k1syhQA7gm54aQPgu0WFFLN64uw6MnwUYvA3I4TLk5oOffoDVCkA5lXZVE4TcN12NXNsWG2yTnwei6mjFV4p7XvSSgWBM+Maw35Z2B7B+hODJVDiYqZSOm0g1L5yQjK8Mk1dX3OhGgEwatFwjYDeRFFMPLiaNn6CfCNeTz4BA+GSYv7x773WRoD2deiFFGkhfeky7xGm9wC7Jvifkhltw4X0eqXhKHC0McpjMyal27fv6IMEaQ1RjQDoUfZCuGLDFuZEU0sTreQmiDJE9j+m22ZnjKVsIQdcRMlsOPvdu+GNpQwPvl1iwlVkE1oUg1fOCzej1uChUI0AiGvec8F9lYG0tyewTShM5NxnY7r7pMTQEMkEFYcu\/LY9v7JGfsrerRdccEnhg72MxAtqO0pupJegv8Ez2mp55Zt+GoeD3x8z61CpAr7H5VGNAFgazQpL\/+XdFXOgjGccNVG1ylWYCXjqPG56HPzFvreMtMHGtBKs\/xW14dKsvJ3Hw9ULEI73T2sginYw86SUQg3JxrjXet8pnSLs+XbSfZkvMKmk95yoUABE+fSpDcrcvHbRLXUOTlE3RdMkBcUch\/dS6vDAy+LzNkYuVp8vIQ4kigOakrx7g\/6Cp7LtpOAEb6RROc1OCKMRoqStmUxU4qp46EChCgVAiDTjSmPqq+fcVJl7dmnuOBu5TEJnTeb3jy6XAywimhNAgGoVbszrjKDmZ2EEAWOT8t1lBbkAQB8uHNeq4VoI2yfbU3hEwtwUcmNQvQCg4FuZtcJVZadS238TbR3CHxtP\/qQxHOAQmcvwaAp2NKiPHWDhuUHZfgr6s3wAXgDasaEaAZB88dF7xVx21qjn36EtKBWbO11zW9kxyZ\/SAjSTnYjbFwXKGxKrqWPfB06v5bloCyMLAQYXxuKxxIKnTOCYz6VyI8JiMfWhHgGQWFTBIkmo81QWVs6Sn7uHcenBMLRRNF8qpHR3M6wFYGrUAT+KbtgA+1EySSpQ01OGyUz7hTYbFmbQEKzgmcIPwLVb1IZqBEAKQoredUc9k8mOSU3uFIss19BkuAPzCzv4jl5yjBoR8junpdm+3ynCMJYvSdtHJ7hq59SjgG3+Gi8Idb1dl\/PvWY8HFE6Ey4fDjjMB6GIlOOuHj9E05DHaLktQyNBCLECQ+QqhBmMs8UKIruCJmsVIaIx7h+G5M1WX5rUPzHOtiT4jiN9Tn67AZlCNAOg3SGcx1Xp26W+Fh\/\/auX24mnLgMcfav2VOxdLvMVgYQrhagxq8LMbOkg5a98w\/ItorB1hk2JWqVHgMCnN6bsSw0GpOuFGW\/jC4aI7N6GwYFJV5PIYKiEOrEQAlMFb\/3p3EPuGQSS4ykkUb3welGo9lLbLCSoiEgYm5aPe90CSjmlE2xBqr4twJu+B3I9+vJTmxRCdcUPURVWTMPBYcz0g7+KdpwAVp1d1sA1HE3YzwF61o5Dg\/f3h8pw84dnbtYVVNTDhm1ffZxryA7V34Lmh1jN4\/h6MSAFlVWqcXu1g14++NBcJi4OMvXSHWRVXTSVLohaiG03CB\/S8bOSwKeqSoaIWlwb6rKz8y0IuxD2ib+0g1rlWbfVVg+IPTHxeuP47g2Nci1KCL6hSoXdvnOByQLfcQobZK6Sqi\/DioVwD4FvDSk1AMDXUYzKbkbSA2JdUEYku3+buNxtncczICkX34wSyM96B1VKWwlDuwSEvLhIHvWQCoRMxKjfpCNQIgnvR+I5VP4MDFA0DeKed0baViEbiTP7g+sDj\/NCA2Zm9c4zYB9ilWTj825ijTMTUmMnITiyTU+RgQtC2lXO1EW+2Y\/dlMzL8PX\/P8biQgE8EiI95aMfd6YoInCwG3oPUoppi4LR8cZ5doJAgRbxxPg5pZHZ2DDTg5JoQT0FZA9tt07WaGM9Ago42q2hZA89X2KaHZtaFCAcBbXPOpdl2uedsW595jLsgpi4MMZVYqoUFE\/Ss8E29OpDYKbvEnRh8kayGBPjre6CJLCYZ3E8b6+xcUu\/n7Zxn045hN40gNglUJAK2QaPSMajb1tQdZhVpH2oDoKLuFY38VYINtmEbJgrGotvzbUH5w1RF0zmGMKrHB9AFT3b+ZrlnzTkUXXGk3PRb2ONKmYIW1LwyQAKAxVX2MzeO7AmA6BEBMMFkaxspRd3MtWiEQL3zR4CGpMcb73elkHLLXAxNKWFjh6fZYR6BRCtXdzVMoKUoSa0P23g9AX\/1yQlO3rTsYBBKcdEyoSwB08BN35rTixqpoaqKF8BKQeg3Uby3RD3HqMdZJDeGhGGKNx9+kqlWkCkxqKNT31HyNw2oMVDQoeRUSYvSJHVKXCTeOY0WVAoADyn+fZuH13FmJRTb0d\/fq6BRVj2NsbIlninude1EizWmlWDaPJgoNJqm2Jwg\/v1qSyY3oczcwaDVfrkmy8k+lAt2iWgFAZf3NBUpQ0FeIOTYUbxvP4ZpcIorQ3pltIlLJVScWAjGKvjPRr2wEgAZQBeNCy7IRH09VKD5WHaBaASBE3oA0JgrOklKCHp7lLtMPgWRV7OX1H\/Y5hH\/9SC4s9I8CBAjQWnXhqmM9AlHjc1i5iRgAVJAMUpz9oWj0b5pqizM0L+WYYhlOCXAsSWgSd8KeUJ0AsBKZG3FW1LYQ4b1fe\/5lDa4+QNxqyD+oJrkeciphTC+ltQ7unf69VwB0hjc\/wQk6Y+r4MWLACElKtAx\/M8imN8SR1Ocj2KCxFYNd2UhC0wLehuGQwsQtriv20IlaVQkA7OWn+eKBb4EV4UmBNOTaymaYL+SaTHHiOcrqgvbmJO7EIBtebgAaISdFJ0z1xMxMLzhI8dx4ea2obCxKaVewxLEFz0wUsxSqEgCjYdXlblHZ\/8UEoVzaMH\/qqA1JXQc0wCh1eQwhZg6ORGOUTaE\/O8kNw6Zh4CdCjRYGmt9PTjCWZDKO5kesxDh4FAKALJ+VkZ7xHcyq8nMZbFAq8ty\/hQiEk\/sfc\/OPGftYPWAWs+dI20GzXhd0Es5FNo5gLg9J4rsd+mTnoppR5k8\/72ULbsSWF+LpTcjhbl1GG8G+K\/ckwca+VOhv7j1xiptOKrHOiLZUSqNGu6l73K0Xz\/Phz1scUhwjyVQUfeyQwqIaAZCDdQtKWaYiWveSlHKRjY+XfILgKmKt+aZsNnWlmLCJ0Tt2OLWjylln\/m7HvFwgjB5qSkK4OI0UndfUMZGVpJvGxRikwYtHOTSORgAAwKAUExe65Rn3xiKuWzBQQR3DD3LyB4+NF1FBHT7sRBnRduoTgSNu5LxMQZwdiEFOEALHwOk\/B45IAIjRqq4QuJoYY4oRTnfJNxQUWlAy\/BUVDMPZYFT+QgmoqDn82TyWdHGxhM4EAXAoCvR9o0IBQAXiDKu2slqzwR1eFBe1LFA35EwLgTqNBpnvbObivNp\/aEwJnMq5fxu20XT43lnXg0WFVz3zVM9ImGCHCGPupE5tdOGs3hwXWZ1LIQSAlPmYBhi6h4zXYD9my9I8h0ka054CYDBNgdO3GME7cIyoUADkJ4es0uN+5Kl+GnqBkHzO24ClSqUQoU0gJwRsTy7VVBw+WiwJYeLv4xeTLZZywAw6zvvk1DbI9DLx8\/tBNQKgZJEL2RgNzU\/VhS7Di1hY\/glfOjVBFZnkg9E4hUBPIPKuD0Y9xGwd1dJQde4wG9Vm1dvUe1JKGXIVQhWeUqQTw1wqt11zHOG1NCvTXKhHADBemGG4iYesg9MfrShjWXaT\/U+T2KJpQGnlwkKlbMiFh8W\/CykBEgv1mBhnUgQmum17oY1Rqi2k7eRIQFDYjEfncei8OQya82oFdoRqBEAOJcSWgywshsSm8vA5GNyFo8QQDMrzoZfWJzRA7raznjrTTjmJhNNi44tdpktb30veUerZOSsvHxJ1CQDiFB5joDOLM725QoIfhf8+A\/I04BT10JolnNzzCS2FW0hkTuQ2k+zsGE5lRsZnqxcX1XgcCeuqPWYGn7lRlQDQoIc57NnJIu78TdMb0GbYGOjJlPBF57wVVmuYOymkGv+1L6wILWefAiugmZuLCYjwFBxTEFFVAiCAJY\/gPJfBUpsifZLQ3oUgphzKDEZoj3EFmj24DbPVfSmSD5uZaRqZf2BMZIk\/OWMjds+xGAABahYAHpJUTDilDtLGzJZlhiFoqAUQWX9aB0ajHH3WYCyD5uZZgLZdPEAq0Udm83CqA80J6kSmhIBqW9Btm74uRHEk\/a\/x39eKKgXAoDwWEKwx5Od57qXSeZpaVjwlNDQYWu3kyXSgqyv+fem3x0uWIVTx2YWCSK6deAztbjfMq3CZgRDVEtAgmsbjoeh4KXIG64oERJUCAAOaez8iCQVTz2wBjdRVIV4o3Pury2Lkhq7Otv7nXWUleQIYKA1MdrYahz1fCxxpSkS9NnhGAwzfKf1OUnYGTl7KvnA0AgAg3HQ2M7A4qCeqdBtLa9W2eC07IsMv219BzTmA9HUHyyfYlxrtay+lNpW8t6Ar0Gkr+DCwu74pGgMF22fOGJuKw8Dm4Fg8DRUKgEQedatA6\/Fpwa4dy\/2XKuUtBLgyVFQizwLGNioeQQCg48BIMxZJNlF9bv6wbkIavPdkU6bz1GhWq+Jdx+i+gzTuUaG\/FenyI1GXANBAbjYhJcvwxkahhKZOMXpxm\/ZLDXpk\/9QfsBTjBU6f+ATkCgGu8TU2mIqmASAYgQZRlOwYAo8YdtBGXVthX6jqW5ugEc93r7UJqhN9MAnn9E96DTinI7KYUnd+1D4h+s1fGtve3gyfP4RC6UxdWd5+HFOLu1gGpdBEkDh1Me+PUmGOgp6hhDsTx3ANqEoA4Ku8j8E2z0x7qc7okwrzdCroyL4Q20JJwI+ytQc6l5JZ9ANnX+GQJkw1senQCM3uilZiJ8gZVEUX5eiubpSW6P3NbnTfeCmkTPZFhfeOCVii1ldtxULqEgAExkRWtQgBiI27txViLV8fF6lFbccoGzkI9AEoL1fVO5r6zw9yAYy6FH86+q9tc8HTyOXK9MJ6VUCtndLYTPvhd8xeBb3XUpJERQmWrIHQlWKXjvXZazSKeajLblCNAMipS+1ux8rCitsUQoBO3RG1Bgg4\/cbf2aVMx5lnF3oH6n6tW+WKWgqfHFX3hSmEFIM1tqQiug92G8wwulS\/pe36m93GP5DrtMIrQT0CgPPiRwpPjp3YcvWH2gazw07QoPTUg56mgScEQ6KTkkzKUqRU2lJvAQbMfjIlhyA3pkEQGtGXSen2eCKw9O4jwHGMEqDbYAUx84TKSxfcDDkFdJdNmBtTINW5GYAJrHKZj6Xei9GbhfG5zCOLXTsybtzEB9nt+zYHVCjk3qsQA2FdI0fAUQmAkmKUpCpPTRwS6TcUOMKx+5L3xdzCyAmx3AZPVaNZSsUk2m13jGCchdXeMiEz3oMkO7ekrWfI7rFyTaCe0TEk6uim\/Z\/JyrD4mGxogugCg3Lg3vNxTCEumX+j+cZT\/O\/Lbm4shqC4InToRMw+rxNhumM0mtpdgdUIgLR6v\/ApknCR7XMCZcPoi1A\/Sw2kpbDvSGuv+Gojk3JZKdWF+c73DmvMtecKpZoqAllUIwBYGOuWzz0w8101uSAmqoTOV9253fZGqiG8+AR\/PGRKba8qC0GXRKNQNRNyjCMaaoy6BAD6IgXIlXGvTQ2iwLZ5Ov0WFwy5cdCn1AyCxjXhWaCTwXGCvZnGqvRBHL2m309OS9Ge8c2jDQH7Xeky5TQTcRwHsG\/GpJoy\/zBUJQD8stl9AEX4zJyRVDn1nlt9BkWcdWi\/S+wuGt9D2F10X7YBT6ILFpp6ouZsGzZjNrfgbbCMhQvGIq41fggv9R1S0xgLtex7mLsgSBC7VZ89oCoBwFUTOUIAr9prhIpqW1BtO8lCiy+kvg6A\/TMmZMZuxjACDo9714rg25+sUtP+cFeXkLnAhTTeFOVFT5LP2utDLqPQCwG24cgxrJBMjVKAJjWhPuKv6WIr\/EhMpL9onZZ4sfaFukYk3P9lkd1EPqsLkTa6u76mh5JZzHEWoKnkE4XfjnUVjhmT9zcqCWeKAQ0Vznpcm7HBl5WnkJkPIWAg5CzPAAgRaEjZty+FCxcHsEE\/SMJXI738gbBV8gCqDFUJgJI7KJmGK7yNyEgT5RB3UlBta2ICSo2IswgAzf4bF+F92VPTkYAY3SpC3Wf42kdc43L5+qkgm1hwUiMk6xZkk5WkM8o6oUhdV5B1dUiDZzUCYIw6Hi4kEcbHI4gTbAC8qK4g6ZC\/oae6CTlTTywl9MdsWxMXm6VOo5JsRocdZ7QA+j3zjZw5jNWQBAjvfejkd0G10UzBlyVRjQAYC61UV4ACuWsTWoL\/pJ+l5WrciYWtxTOogv4GxDYHNf6pm6XfJERwUOar0RrXBHvM3mID5tmchkg0X0NxH\/g\/xtEDoMAOHOkAAAAASUVORK5CYII=" } }
{ "deck_data": "{ \"background_color\": 4210752.0, \"on\": true, \"grid_y\": 5.0, \"snap_grid\": 1.0, \"lb_version\": \"2024.4.0\", \"background_image\": \"\", \"sammi_version\": \"2024.4.0\", \"encrypted\": false, \"adaptive_resizing\": 1.0, \"unique_id\": \"20241130215410469808904\", \"button_list\": [ { \"color\": 3487029.0, \"persistent\": 1.0, \"text\": \"On Level 3 Mist Finer!\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Clean Up the last hit event, then pull in the data from the new hit event.\", \"v0\": 2.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"hitEvent\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"hitEvent\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 53.0, \"b0\": \"Using \\\"String Count\\\" command, check the attacker_state property inside the hit event for mention of the MistFiner animation.\\nIf found, isFiner will equal 1, so check again to see if Lv3 is mentioned.\\nIf found, send a debug alert.\", \"v0\": 5.0 }, { \"b1\": \"\\\/$hitEvent.data.data.attacker_state$\\\/\", \"cmd\": 92.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"isFiner\", \"b2\": \"MistFiner\", \"v0\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \">\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 5.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"isFiner\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"\\\/$hitEvent.data.data.attacker_state$\\\/\", \"cmd\": 92.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"isLv3\", \"b2\": \"Lv2\", \"v0\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \">\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 7.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"isLv3\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"MEEST FINAH! (XrdDemo_Is_Mist_Finer_Level_3: Line 7)\" } ], \"press_type\": 0.0, \"x\": 0.0, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_hitEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Is_Mist_Finer_Level_3\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 5.0, \"width\": 0.25000000000000011102230246251565, \"button_id\": \"XrdDemo_Is_Mist_Finer_Level_3\", \"button_duration\": 0.0, \"y\": 0.0, \"switch_deck\": \"\", \"height\": 0.19999999999999998334665463062265, \"release_list\": [ ], \"functions\": 81.0, \"stretch\": 0.0 }, { \"color\": 12605459.0, \"persistent\": 1.0, \"text\": \"On Blitz Event!\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 111.0, \"b0\": \"This script checks every frame to see if either player is using Blitz, and then drives a little logic gate using that information.\\n\\nThe script does not check for a successful reject, but it would look very similar to this script.\\n\", \"v0\": 0.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 4.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 3.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"is_p1_blitzing\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 4.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"CounterGuardCrouch\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"frame.data.player_1.state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 4.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 50.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"frame.data.player_1.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CounterGuardStand\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CounterGuardAir\\\"\", \"b6\": \"frame.data.player_1.state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 3.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"This logic gate effectively functions like an On P1 Blitz Event!\", \"v0\": 2.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Activated Blitz! (XrdDemo_Someone_Is_Blitzing: Line 5)\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"is_p1_blitzing\", \"b2\": \"1\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 8.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"is_p1_blitzing\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"CounterGuardCrouch\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"!=\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"!=\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"frame.data.player_1.state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 9.0, \"v5\": 1.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 50.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"frame.data.player_1.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"!=\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CounterGuardStand\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CounterGuardAir\\\"\", \"b6\": \"frame.data.player_1.state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 3.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"This would be \\\"On Blitz End\\\"\", \"v0\": 1.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"is_p1_blitzing\", \"b2\": \"0\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 4.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 12.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"is_p2_blitzing\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 4.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"CounterGuardCrouch\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"frame.data.player_2.state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 13.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 50.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"frame.data.player_2.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CounterGuardStand\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CounterGuardAir\\\"\", \"b6\": \"frame.data.player_2.state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 3.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"This logic gate effectively functions like an On P2 Blitz Event!\", \"v0\": 2.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Activated Blitz! (XrdDemo_Someone_Is_Blitzing: Line 14)\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"is_p2_blitzing\", \"b2\": \"1\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 17.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"is_p2_blitzing\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"CounterGuardCrouch\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"!=\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"!=\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"frame.data.player_2.state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 18.0, \"v5\": 1.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 50.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"frame.data.player_2.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"!=\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CounterGuardStand\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CounterGuardAir\\\"\", \"b6\": \"frame.data.player_2.state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 3.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"This would be \\\"On Blitz End\\\"\", \"v0\": 1.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"is_p2_blitzing\", \"b2\": \"0\" } ], \"press_type\": 0.0, \"x\": 0.0, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_stateUpdate\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Someone_Is_Blitzing\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"is_p1_blitzing\\\":0,\\n\\\"is_p2_blitzing\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.24999999999999997224442438437109, \"button_id\": \"XrdDemo_Someone_Is_Blitzing\", \"button_duration\": 0.0, \"y\": 0.3999999999999999666933092612453, \"switch_deck\": \"\", \"height\": 0.19999999999999995559107901499374, \"release_list\": [ ], \"functions\": 2129.0, \"stretch\": 0.0 }, { \"color\": 1118656.0, \"persistent\": 1.0, \"text\": \"On Potemkin Buster!\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 75.0, \"b0\": \"A straight forward script. If Potbuster lands, timeout Krackatoa and one other from twitch chat.\\nFor a list of other potential timeouts, right click on the button and select Edit Default Variables.\", \"v0\": 8.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"hitEvent\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"hitEvent\" }, { \"b53\": \"\", \"b5\": \"0\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"hitEvent.data.data.combo_length\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 3.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"hitEvent.data.data.attacker_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"PotemkinBusterExe\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 5.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Krackatoa was shot because Potemkin Buster landed. (XrdDemo_Potemkin_Buster: Line 4)\" }, { \"b1\": \"krackatoa\", \"b3\": \"Potemkin Buster\", \"cmd\": 275.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\", \"b2\": \"10\" }, { \"b1\": \"that_one_sajam\", \"cmd\": 101.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"sajams\", \"b2\": \"that_one_sajam_pos\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 6000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"And let's shoot \\\/$that_one_sajam$\\\/ for good measure, too. (XrdDemo_Potemkin_Buster: Line 7)\" }, { \"b1\": \"\\\/$that_one_sajam$\\\/\", \"b3\": \"Potemkin Buster\", \"cmd\": 275.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 6000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\", \"b2\": \"10\" } ], \"press_type\": 0.0, \"x\": 0.0, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_hitEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Potemkin_Buster\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"sajams\\\":\\n[\\\"sajam\\\", \\n\\\"jiyuna\\\",\\n\\\"brian_f\\\",\\n\\\"solidbones\\\",\\n\\\"ultradavid\\\",\\n\\\"DaigoTheBeasTV\\\"]\\n}\", \"deck\": 5.0, \"width\": 0.25000000000000011102230246251565, \"button_id\": \"XrdDemo_Potemkin_Buster\", \"button_duration\": 6000.0, \"y\": 0.60000000000000008881784197001252, \"switch_deck\": \"\", \"height\": 0.19999999999999998334665463062265, \"release_list\": [ ], \"functions\": 2129.0, \"stretch\": 0.0 }, { \"color\": 132.0, \"persistent\": 1.0, \"text\": \"IK Detector\", \"release_duration\": 0.0, \"queueable\": 1.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 195.0, \"b0\": \"This script involves leverage three different triggers to figure out if IKs have landed.\\nIt checks whether the IK is done raw, or in a combo, and filters for weird outliers.\\nThe weird outlier is Potemkin. Potemkin's IK hits twice, so you have to accomodate for that.\\n\\nIf you want to use this script, drop whatever SAMMI commands you like into the associated Comments below.\", \"v0\": 61.0 }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"wh\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"wh\" }, { \"cmd\": 24.0, \"obsid\": \"Main\", \"pos\": 3.0, \"v3\": { \"ggxrd_hitEvent\": 10.0, \"default\": 0.0, \"ggxrd_roundStartEvent\": 7.0, \"ggxrd_comboEndEvent\": 4.0 }, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"wh.trigger_name\", \"v0\": 58.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"ggxrd_comboEndEvent\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 2.0, \"v2\": 1.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"potemkin_exception\", \"b2\": \"0\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"double_ichigeki_exception\", \"b2\": \"0\" }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"ggxrd_roundStartEvent\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 2.0, \"v2\": 1.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"potemkin_exception\", \"b2\": \"0\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"double_ichigeki_exception\", \"b2\": \"0\" }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"ggxrd_hitEvent\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 51.0, \"v2\": 1.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 21.0, \"b0\": \"Potemkin and Double Ichigeki Exceptions \\n(Potemkin Exception now deprecated but I'd have to fix things.)\", \"v0\": 17.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 12.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.attacker_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Ichigeki\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"+=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"double_ichigeki_exception\", \"b2\": \"1\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \">\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 11.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 14.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"double_ichigeki_exception\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Player 1 Potemkin\", \"v0\": 6.0 }, { \"b53\": \"\", \"b5\": \"\\\"Player1\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.attacker\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 16.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"Xrd_Data.data.data.player_1.character\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Potemkin\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 5.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 48.0, \"b0\": \"Player 1 Potemkin Hits.\\n\\\"potemkin_exception = 1\\\" means 1st hit of IK.\\n\\\"potemkin_exception = 2\\\" means 2nd hit of IK.\", \"v0\": 4.0, \"name\": \"\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 18.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.attacker_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Ichigeki\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"+=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"potemkin_exception\", \"b2\": \"1\" }, { \"b53\": \"\", \"b5\": \"1\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.was_blocked\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 20.0, \"v5\": 1.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 50.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.combo_length\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"1\", \"b6\": \"potemkin_exception\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 3.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_last_starter\", \"b2\": \"\\\"Ichigeki\\\"\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 22.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Player 2 Potemkin\", \"v0\": 6.0 }, { \"b53\": \"\", \"b5\": \"\\\"Player2\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.attacker\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 23.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"Xrd_Data.data.data.player_2.character\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Potemkin\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 5.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 24.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 48.0, \"b0\": \"Player 2 Potemkin Hits.\\n\\\"potemkin_exception = 1\\\" means 1st hit of IK.\\n\\\"potemkin_exception = 2\\\" means 2nd hit of IK.\", \"v0\": 4.0, \"name\": \"\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 25.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.attacker_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Ichigeki\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"+=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 26.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"potemkin_exception\", \"b2\": \"1\" }, { \"b53\": \"\", \"b5\": \"1\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.was_blocked\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 27.0, \"v5\": 1.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 50.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.combo_length\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"1\", \"b6\": \"potemkin_exception\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 3.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 28.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_last_starter\", \"b2\": \"\\\"Ichigeki\\\"\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 29.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Last Starter Log. (Leftover\\\/altered logic from old code. Removed extension call.)\", \"v0\": 7.0 }, { \"b53\": \"\", \"b5\": \"0\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"!=\", \"b11\": \"1\", \"b9\": \"potemkin_exception\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.was_blocked\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 30.0, \"v5\": 1.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 75.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.combo_length\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"2\", \"b6\": \"potemkin_exception\", \"b10\": \"!=\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 6.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 1.0, \"v8\": 0.0, \"v2\": 4.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"Ichigeki\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.attacker_state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 1.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 31.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.attacker\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player1\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 32.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_last_starter\", \"b2\": \"\\\"Ichigeki\\\"\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 33.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_last_starter\", \"b2\": \"\\\"Not IK\\\"\" }, { \"b53\": \"\", \"b5\": \"\\\"Ichigeki\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.attacker_state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 1.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 34.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.attacker\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player2\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 35.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_last_starter\", \"b2\": \"\\\"Ichigeki\\\"\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 36.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_last_starter\", \"b2\": \"\\\"Not IK\\\"\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 37.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"IK Logic\", \"v0\": 24.0 }, { \"b53\": \"\", \"b5\": \"0\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"!=\", \"b11\": \"1\", \"b9\": \"potemkin_exception\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.was_blocked\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 38.0, \"v5\": 1.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 75.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.attacker_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Ichigeki\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"2\", \"b6\": \"potemkin_exception\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 23.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 2.0, \"v8\": 0.0, \"v2\": 4.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 39.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Blitz IK Detection\", \"v0\": 3.0 }, { \"b53\": \"\", \"b5\": \"\\\"CmnActHajikareStand\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"wh.data.data.victim_previous_state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 1.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 40.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 50.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.victim_previous_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CmnActHajikareAir\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CmnActHajikareCrouch\\\"\", \"b6\": \"wh.data.data.victim_previous_state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 3.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 41.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"is_blitz_ik\", \"b2\": \"1\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 42.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"is_blitz_ik\", \"b2\": \"0\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 43.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Attacker is Player 1 or Player 2?\", \"v0\": 18.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 44.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.attacker\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player1\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 8.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 5.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 45.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"is_blitz_ik\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 46.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Place On IK Logic Here\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 47.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Blitz IK P2\" }, { \"b53\": \"\", \"b5\": \"0\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"p1_potemkin_exception\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 2.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 48.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"p1_last_starter\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Ichigeki\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 49.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Place On IK Logic Here\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 50.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Raw IK P2\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 51.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Place On IK Logic Here\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 52.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Gold IK Combo P2\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 53.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"wh.data.data.attacker\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player2\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 8.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 5.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 54.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"is_blitz_ik\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 55.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Place On IK Logic Here\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 56.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Blitz IK P1\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 2.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 57.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"p2_last_starter\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Ichigeki\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 58.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Place On IK Logic Here\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 59.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Raw IK P1\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 60.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Place On IK Logic Here\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 61.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Gold IK Combo P1\" } ], \"press_type\": 0.0, \"x\": 0.0, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_hitEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Complicated_Instant_Kill_Detector\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 }, { \"case_sensitive\": 0.0, \"message\": \"ggxrd_comboEndEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Complicated_Instant_Kill_Detector\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 }, { \"case_sensitive\": 0.0, \"message\": \"ggxrd_roundStartEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Complicated_Instant_Kill_Detector\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"init\\\":1,\\n\\\"on\\\":1,\\n\\\"is_blitz_ik\\\":0,\\n\\\"p1_last_starter\\\":\\\"error\\\",\\n\\\"p2_last_starter\\\":\\\"error\\\",\\n\\\"p1_potemkin_exception\\\":0,\\n\\\"p2_potemkin_exception\\\":0,\\n\\\"double_ichigeki_exception\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.24999999999999997224442438437109, \"button_id\": \"XrdDemo_Complicated_Instant_Kill_Detector\", \"button_duration\": 0.0, \"y\": 0.19999999999999998334665463062265, \"switch_deck\": \"\", \"height\": 0.19999999999999995559107901499374, \"release_list\": [ ], \"functions\": 2257.0, \"stretch\": 0.0 }, { \"color\": 1644934.0, \"persistent\": 1.0, \"text\": \"Streamer:\\nNot Detected\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"trigger_data\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"trigger_data\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"trigger_data\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Toggle Button\", \"v0\": 6.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 4.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"trigger_data.trigger_type\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"23\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 5.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 2.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 5.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"on\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"on\", \"b2\": \"0\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Streamer Detection: OFF\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"on\", \"b2\": \"1\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Streamer Detection: ON\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Mode Select\", \"v0\": 11.0 }, { \"b53\": \"\", \"b5\": \"1\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"on\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 8.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 11.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"XrdDemo_Frame.frame.data.player_1.steam_id\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"streamer_steam_id\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"Streamer:\\nPlayer1\", \"cmd\": 28.0, \"v1\": 1.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 43.0, \"b0\": \"XrdDemo_Detect_Streamer_Pos\", \"b2\": \"\", \"v0\": -1.0, \"v2\": 6476642.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"position\", \"b2\": \"\\\"Player1\\\"\" }, { \"b53\": \"\", \"b5\": \"1\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"on\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 5.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 14.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"XrdDemo_Frame.frame.data.player_2.steam_id\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"streamer_steam_id\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"Streamer:\\nPlayer2\", \"cmd\": 28.0, \"v1\": 1.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 44.0, \"b0\": \"XrdDemo_Detect_Streamer_Pos\", \"b2\": \"\", \"v0\": -1.0, \"v2\": 13856095.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"position\", \"b2\": \"\\\"Player2\\\"\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 2.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 17.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"on\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"Streamer:\\nNot Detected\", \"cmd\": 28.0, \"v1\": 1.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 44.0, \"b0\": \"XrdDemo_Detect_Streamer_Pos\", \"b2\": \"\", \"v0\": -1.0, \"v2\": 1644934.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"position\", \"b2\": \"\\\"Off\\\"\" }, { \"b1\": \"Streamer:\\nOFF\", \"cmd\": 28.0, \"v1\": 1.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 44.0, \"b0\": \"XrdDemo_Detect_Streamer_Pos\", \"b2\": \"\", \"v0\": -1.0, \"v2\": 2500134.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"position\", \"b2\": \"\\\"Off\\\"\" } ], \"press_type\": 0.0, \"x\": 0.75, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_roundStartEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Detect_Streamer_Pos\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"streamer_steam_id\\\":\\\"76561197985176923\\\",\\n\\\"steamer_steam_nickname\\\":\\\"Krackatoa\\\",\\n\\\"position\\\":\\\"Off\\\",\\n\\\"on\\\":1\\n}\", \"deck\": 5.0, \"width\": 0.24999999999999997224442438437109, \"button_id\": \"XrdDemo_Detect_Streamer_Pos\", \"button_duration\": 0.0, \"y\": 0.40000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.20000000000000009436895709313831, \"release_list\": [ ], \"functions\": 2129.0, \"stretch\": 0.0 }, { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"Edit the Init Variables\\nthe below button with\\nyour own Steam ID.\\n(Detection only works in netplay)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.75, \"is_transparent\": 1.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"ID14\", \"button_duration\": 0.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.19999999999999998334665463062265, \"release_list\": [ ], \"functions\": 64.0, \"stretch\": 0.0 }, { \"color\": 1753138.0, \"persistent\": 1.0, \"text\": \"Item Detection\", \"release_duration\": 0.0, \"queueable\": 1.0, \"command_list\": [ { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"object_event\" }, { \"b1\": \"\\\/$object_event.data.data.object_name$\\\/\", \"cmd\": 92.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"isItem\", \"b2\": \"Item\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\\\"Streamer Threw It\\\" check\", \"v0\": 3.0 }, { \"b53\": \"\", \"b5\": \"\\\"Player1\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 1.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 3.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"XrdDemo_Detect_Streamer_Pos.position\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"object_event.data.data.created_by\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"streamerItem\", \"b2\": \"1\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"streamerItem\", \"b2\": \"0\" }, { \"b53\": \"\", \"b5\": \"\\\"Item_Pre\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \">\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"object_event.data.data.object_name\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 6.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"isItem\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"!=\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 111.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 20.0, \"b0\": \"Specific Item events can be built within the Case Statements. \\nOnly the streamer (when in netplay) may trigger them.\", \"v0\": 22.0 }, { \"b53\": \"\", \"b5\": \"1\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"Throwing\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 8.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"streamerItem\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 21.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 24.0, \"obsid\": \"Main\", \"pos\": 9.0, \"v3\": { \"default\": 0.0, \"Item_100t\": 21.0, \"Item_Helium\": 14.0, \"Item_BlackHole\": 13.0, \"Item_Frasco\": 17.0, \"Item_Chocolate\": 18.0, \"Item_JumpStand\": 20.0, \"Item_BestChocolate\": 27.0, \"Item_Donut\": 19.0, \"Item_Meteo\": 15.0, \"Item_Bomb\": 10.0, \"Item_Armageddon\": 23.0, \"Item_GoldenHammer\": 25.0, \"Item_Oilcan\": 12.0, \"Item_BigFaust\": 26.0, \"Item_FireWorks\": 22.0, \"Item_ManyDonut\": 28.0, \"Item_Hammer\": 11.0, \"Item_ChibiFaust\": 16.0, \"Item_Golden100t\": 29.0 }, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"object_event.data.data.object_name\", \"v0\": 20.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Bomb\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Hammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Oilcan\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BlackHole\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Helium\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Meteo\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ChibiFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Frasco\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Chocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Donut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_JumpStand\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 22.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_FireWorks\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 23.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Armageddon\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 1.0, \"v2\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 24.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"SEPHIROTH! Du du du dunnnnnn~! (XrdDemo_Item_Detection: Line 24)\" }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 25.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_GoldenHammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 26.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BigFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 27.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BestChocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 28.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ManyDonut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 29.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Golden100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 30.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 25.0, \"b0\": \"Specific Item events can be built within the Case Statements. \\nOnly non-streamer players may trigger them.\", \"v0\": 21.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 31.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"streamerItem\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 20.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 24.0, \"obsid\": \"Main\", \"pos\": 32.0, \"v3\": { \"default\": 0.0, \"Item_100t\": 44.0, \"Item_Helium\": 37.0, \"Item_BlackHole\": 36.0, \"Item_Frasco\": 40.0, \"Item_Chocolate\": 41.0, \"Item_JumpStand\": 43.0, \"Item_BestChocolate\": 49.0, \"Item_Donut\": 42.0, \"Item_Meteo\": 38.0, \"Item_Bomb\": 33.0, \"Item_Armageddon\": 46.0, \"Item_GoldenHammer\": 47.0, \"Item_Oilcan\": 35.0, \"Item_BigFaust\": 48.0, \"Item_FireWorks\": 45.0, \"Item_ManyDonut\": 50.0, \"Item_Hammer\": 34.0, \"Item_ChibiFaust\": 39.0, \"Item_Golden100t\": 51.0 }, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"object_event.data.data.object_name\", \"v0\": 19.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 33.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Bomb\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 34.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Hammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 35.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Oilcan\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 36.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BlackHole\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 37.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Helium\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 38.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Meteo\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 39.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ChibiFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 40.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Frasco\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 41.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Chocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 42.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Donut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 43.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_JumpStand\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 44.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 45.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_FireWorks\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 46.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Armageddon\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 47.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_GoldenHammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 48.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BigFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 49.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BestChocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 50.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ManyDonut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 51.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Golden100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 52.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 25.0, \"b0\": \"Specific Item events can be built within the Case Statements. \\nOnly Player 1 may trigger them.\", \"v0\": 21.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 53.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"object_event.data.data.created_by\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player1\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 20.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 24.0, \"obsid\": \"Main\", \"pos\": 54.0, \"v3\": { \"default\": 0.0, \"Item_100t\": 66.0, \"Item_Helium\": 59.0, \"Item_BlackHole\": 58.0, \"Item_Frasco\": 62.0, \"Item_Chocolate\": 63.0, \"Item_JumpStand\": 65.0, \"Item_BestChocolate\": 71.0, \"Item_Donut\": 64.0, \"Item_Meteo\": 60.0, \"Item_Bomb\": 55.0, \"Item_Armageddon\": 68.0, \"Item_GoldenHammer\": 69.0, \"Item_Oilcan\": 57.0, \"Item_BigFaust\": 70.0, \"Item_FireWorks\": 67.0, \"Item_ManyDonut\": 72.0, \"Item_Hammer\": 56.0, \"Item_ChibiFaust\": 61.0, \"Item_Golden100t\": 73.0 }, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"object_event.data.data.object_name\", \"v0\": 19.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 55.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Bomb\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 56.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Hammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 57.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Oilcan\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 58.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BlackHole\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 59.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Helium\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 60.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Meteo\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 61.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ChibiFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 62.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Frasco\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 63.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Chocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 64.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Donut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 65.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_JumpStand\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 66.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 67.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_FireWorks\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 68.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Armageddon\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 69.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_GoldenHammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 70.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BigFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 71.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BestChocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 72.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ManyDonut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 73.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Golden100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 74.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 25.0, \"b0\": \"Specific Item events can be built within the Case Statements. \\nOnly Player 2 may trigger them.\", \"v0\": 21.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 75.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"object_event.data.data.created_by\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player2\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 20.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 24.0, \"obsid\": \"Main\", \"pos\": 76.0, \"v3\": { \"default\": 0.0, \"Item_100t\": 88.0, \"Item_Helium\": 81.0, \"Item_BlackHole\": 80.0, \"Item_Frasco\": 84.0, \"Item_Chocolate\": 85.0, \"Item_JumpStand\": 87.0, \"Item_BestChocolate\": 93.0, \"Item_Donut\": 86.0, \"Item_Meteo\": 82.0, \"Item_Bomb\": 77.0, \"Item_Armageddon\": 90.0, \"Item_GoldenHammer\": 91.0, \"Item_Oilcan\": 79.0, \"Item_BigFaust\": 92.0, \"Item_FireWorks\": 89.0, \"Item_ManyDonut\": 94.0, \"Item_Hammer\": 78.0, \"Item_ChibiFaust\": 83.0, \"Item_Golden100t\": 95.0 }, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"object_event.data.data.object_name\", \"v0\": 19.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 77.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Bomb\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 78.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Hammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 79.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Oilcan\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 80.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BlackHole\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 81.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Helium\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 82.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Meteo\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 83.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ChibiFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 84.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Frasco\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 85.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Chocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 86.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Donut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 87.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_JumpStand\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 88.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 89.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_FireWorks\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 90.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Armageddon\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 91.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_GoldenHammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 92.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BigFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 93.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BestChocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 94.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ManyDonut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 95.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Golden100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 96.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b0\": \"Specific Item events can be built within the Case Statements. \\nBoth Players may trigger them.\", \"v0\": 21.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 97.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\\\/$object_event.data.data.object_name$\\\/\" }, { \"cmd\": 24.0, \"obsid\": \"Main\", \"pos\": 98.0, \"v3\": { \"default\": 0.0, \"Item_100t\": 110.0, \"Item_Helium\": 103.0, \"Item_BlackHole\": 102.0, \"Item_Frasco\": 106.0, \"Item_Chocolate\": 107.0, \"Item_JumpStand\": 109.0, \"Item_BestChocolate\": 115.0, \"Item_Donut\": 108.0, \"Item_Meteo\": 104.0, \"Item_Bomb\": 99.0, \"Item_Armageddon\": 112.0, \"Item_GoldenHammer\": 113.0, \"Item_Oilcan\": 101.0, \"Item_BigFaust\": 114.0, \"Item_FireWorks\": 111.0, \"Item_ManyDonut\": 116.0, \"Item_Hammer\": 100.0, \"Item_ChibiFaust\": 105.0, \"Item_Golden100t\": 117.0 }, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"object_event.data.data.object_name\", \"v0\": 19.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 99.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Bomb\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 100.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Hammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 101.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Oilcan\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 102.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BlackHole\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 103.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Helium\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 104.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Meteo\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 105.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ChibiFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 106.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Frasco\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 107.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Chocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 108.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Donut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 109.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_JumpStand\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 110.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 111.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_FireWorks\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 112.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Armageddon\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 113.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_GoldenHammer\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 114.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BigFaust\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 115.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_BestChocolate\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 116.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_ManyDonut\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 117.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"Item_Golden100t\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 0.0, \"v2\": 1.0 } ], \"press_type\": 0.0, \"x\": 0.24999999999999997224442438437109, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_objectCreatedEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Item_Detection\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"Throwing\\\":0,\\n\\\"isItem\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.24999999999999997224442438437109, \"button_id\": \"XrdDemo_Item_Detection\", \"button_duration\": 0.0, \"y\": 0.0, \"switch_deck\": \"\", \"height\": 0.19999999999999998334665463062265, \"release_list\": [ ], \"functions\": 2257.0, \"stretch\": 0.0 }, { \"color\": 5636100.0, \"persistent\": 1.0, \"text\": \"Detect Wakeup Frame\", \"release_duration\": 0.0, \"queueable\": 1.0, \"command_list\": [ { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame\" }, { \"b53\": \"\", \"b5\": \"\\\"ggxrd_roundStartEvent\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"frame.trigger_name\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 2.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"init\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"1\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 7.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_wakeup_frame\", \"b2\": \"0\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_wakeup_frame\", \"b2\": \"0\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_last_known_state\", \"b2\": \"\\\"\\\"\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_last_known_state\", \"b2\": \"\\\"\\\"\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_downed\", \"b2\": \"0\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_downed\", \"b2\": \"0\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"init\", \"b2\": \"0\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 10.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"p1_downed\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"CmnActBDown2Stand\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\\\"CmnActKizetsu\\\"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\\\"CmnActWallHaritsukiGetUp\\\"\", \"b9\": \"frame.data.data.player_1.state\", \"b51\": \"\", \"b15\": \"wh.data.data.player_1.state\", \"b3\": \"frame.data.data.player_1.state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 11.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 75.0, \"b20\": \"\", \"v7\": 1.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"frame.data.data.player_1.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"p1_downed\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"0\", \"b2\": \"\\\"CmnActUkemi\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CmnActFDown2Stand\\\"\", \"b6\": \"frame.data.data.player_1.state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 2.0, \"v8\": 2.0, \"v2\": 4.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_downed\", \"b2\": \"1\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_last_known_state\", \"b2\": \"frame.data.data.player_1.state\" }, { \"b53\": \"\", \"b5\": \"1\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"!=\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"p1_downed\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 14.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"p1_last_known_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"frame.data.data.player_1.state\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 4.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_wakeup_frame\", \"b2\": \"frame.data.data.current_frame\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p1_downed\", \"b2\": \"0\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Got Up!\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Woke up! (XrdDemo_Detect_Wakeup_Frame: Line 16)\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 19.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"p2_downed\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 3.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"CmnActBDown2Stand\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\\\"CmnActKizetsu\\\"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\\\"CmnActWallHaritsukiGetUp\\\"\", \"b9\": \"frame.data.data.player_2.state\", \"b51\": \"\", \"b15\": \"wh.data.data.player_1.state\", \"b3\": \"frame.data.data.player_2.state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 20.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 75.0, \"b20\": \"\", \"v7\": 1.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"frame.data.data.player_2.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"p1_downed\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"0\", \"b2\": \"\\\"CmnActUkemi\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CmnActFDown2Stand\\\"\", \"b6\": \"frame.data.data.player_2.state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 2.0, \"v8\": 2.0, \"v2\": 4.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_downed\", \"b2\": \"1\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 22.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_last_known_state\", \"b2\": \"frame.data.data.player_2.state\" }, { \"b53\": \"\", \"b5\": \"1\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"!=\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"p2_downed\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 23.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"p2_last_known_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"frame.data.data.player_2.state\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 4.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 24.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_wakeup_frame\", \"b2\": \"frame.data.data.current_frame\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 25.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"p2_downed\", \"b2\": \"0\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 26.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Got Up!\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 27.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Woke up! (XrdDemo_Detect_Wakeup_Frame: Line 25)\" } ], \"press_type\": 0.0, \"x\": 0.0, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_stateUpdate\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Detect_Wakeup_Frame\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 }, { \"case_sensitive\": 0.0, \"message\": \"ggxrd_roundStartEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Detect_Wakeup_Frame\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"p1_wakeup_frame\\\":0,\\n\\\"p2_wakeup_frame\\\":0,\\n\\\"p1_last_known_state\\\":\\\"\\\",\\n\\\"p2_last_known_state\\\":\\\"\\\",\\n\\\"p1_downed\\\":0,\\n\\\"p2_downed\\\":0,\\n\\\"init\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.24999999999999997224442438437109, \"button_id\": \"XrdDemo_Detect_Wakeup_Frame\", \"button_duration\": 0.0, \"y\": 0.80000000000000004440892098500626, \"switch_deck\": \"\", \"height\": 0.19999999999999998334665463062265, \"release_list\": [ ], \"functions\": 2257.0, \"stretch\": 0.0 }, { \"color\": 1982301.0, \"persistent\": 1.0, \"text\": \"Numpad Display\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 158.0, \"b0\": \"In this script, we look at hit events for moves and translate them using the Xrd Moveset Interpreter.\\nHowever, some moves have hit events in weird places (Such as Potemkin Buster!)\\nI have some logic to cull duplicate alerts when the same move connects. \\nIf the combo count doesn't rise, or if the same move connects too close together, no Alert!\\n\\nThere are many ways to process data like this. Try thinking up your own!\\n\\n-Krack.\", \"v0\": 20.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"trigger_data\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"trigger_data\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"trigger_data\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 15.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 4.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"trigger_data.trigger_name\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"ggxrd_comboEndEvent\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"last_combo_length\", \"b2\": \"0\" }, { \"b53\": \"\", \"b5\": \"trigger_data.data.data.combo_length\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"last_combo_length\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 6.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"trigger_data.trigger_name\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"!=\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"ggxrd_hitEvent\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 14.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"last_combo_length\", \"b2\": \"trigger_data.data.data.combo_length\" }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"numpad_notation\" }, { \"b53\": \"\", \"b5\": \"trigger_data.data.data.attacker_state\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"<\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"last_state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 1.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 9.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 50.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(trigger_data.data.data.current_frame-last_frame)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"15\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"0\", \"b6\": \"combo_length\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 3.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"skip\", \"b2\": \"1\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"skip\", \"b2\": \"0\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 12.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"skip\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 8.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 1.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 13.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"trigger_data.data.data.attacker\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player1\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"character_filter\", \"b2\": \"Xrd_data.data.data.player_1.character\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"character_filter\", \"b2\": \"Xrd_data.data.data.player_2.character\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"last_frame\", \"b2\": \"trigger_data.data.data.current_frame\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"last_state\", \"b2\": \"trigger_data.data.data.attacker_state\" }, { \"state\": \"\\\/$trigger_data.data.data.attacker_state$\\\/\", \"cmd\": 0.0, \"obsid\": \"Main\", \"pos\": 18.0, \"mode\": \"Numpad\", \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"returnVariable\": \"numpad_notation\", \"extcmd\": \"Xrd Moveset Interpreter\", \"character\": \"\\\/$character_filter$\\\/\", \"ext\": \"SAMMI Bridge\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"numpad_notation\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\\\/$numpad_notation$\\\/\" } ], \"press_type\": 0.0, \"x\": 0.25, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_hitEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Translate\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 }, { \"case_sensitive\": 0.0, \"message\": \"ggxrd_comboEndEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Translate\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"last_combo_length\\\":0,\\n\\\"last_frame\\\":0,\\n\\\"last_state\\\":\\\"\\\",\\n\\\"skip\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.24999999999999997224442438437109, \"button_id\": \"XrdDemo_Translate\", \"button_duration\": 0.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.19999999999999998334665463062265, \"release_list\": [ ], \"functions\": 2129.0, \"stretch\": 0.0 }, { \"color\": 47047.0, \"persistent\": 1.0, \"text\": \"Burst Thrown!\", \"release_duration\": 0.0, \"queueable\": 1.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Straight Forward. Check to see if Throw caught the opponent mid-burst.\", \"v0\": 7.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"hit_event\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"hit_event\" }, { \"b53\": \"\", \"b5\": \"\\\"CmnActBurst\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"hit_event.data.data.victim_previous_state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 3.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"hit_event.data.data.attacker_state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"AirThrowExe\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 4.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 2.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 4.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"hit_event.data.data.victim\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player2\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 throws P2 burst.\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 6.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"hit_event.data.data.victim\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player1\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 throws P1 burst.\" } ], \"press_type\": 0.0, \"x\": 0.25, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_hitEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Burst_Thrown\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"p1_burst_throw\\\":0,\\n\\\"p2_burst_throw\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.24999999999999997224442438437109, \"button_id\": \"XrdDemo_Burst_Thrown\", \"button_duration\": 0.0, \"y\": 0.40000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.19999999999999998334665463062265, \"release_list\": [ ], \"functions\": 2257.0, \"stretch\": 0.0 }, { \"color\": 0.0, \"persistent\": 1.0, \"text\": \"Gameplay\\nFrame\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 32.0, \"b0\": \"Click on the Open Variable Window button at the bottom of the screen here to check out the incoming game state mid-match.\\nYou must have entered a match first to see something.\", \"v0\": 0.0, \"name\": \"\" }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame\" } ], \"press_type\": 0.0, \"x\": 0.75, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_stateUpdate\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Frame\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"XrdDemo_Frame\", \"button_duration\": 0.0, \"y\": 0.0, \"switch_deck\": \"\", \"height\": 0.20000000000000001110223024625157, \"release_list\": [ ], \"functions\": 81.0, \"stretch\": 0.0 }, { \"color\": 3618615.0, \"persistent\": 1.0, \"text\": \"Gameplay\\nTimeout\\nEvent\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Gameplay Timeout!\" } ], \"press_type\": 0.0, \"x\": 0.5, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_timeoutEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Timeout\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"XrdDemo_Timeout\", \"button_duration\": 0.0, \"y\": 0.0, \"switch_deck\": \"\", \"height\": 0.20000000000000001110223024625157, \"release_list\": [ ], \"functions\": 81.0, \"stretch\": 0.0 }, { \"color\": 5636100.0, \"persistent\": 1.0, \"text\": \"Reversal\\\/Oki\\nDetector\", \"release_duration\": 0.0, \"queueable\": 1.0, \"command_list\": [ { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"hit\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"hit\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 129.0, \"b0\": \"This button triggers on hit and resets some values on roundstart.\\nIt checks a variable over in the wakeup detection button (XrdDemo_Detect_Wakeup_Frame).\\nFor 30 frames after a player wakes up, depending on who gets hit, choose between a \\\"reversal\\\" message or an \\\"okizeme\\\" message.\\nFilter repeated attacks with a little 30 frame cooldown variable.\\nIf you want to be fancy\\\/pendantic, you could filter out \\\"NmlAtk\\\" moves from flagging as Reversals with the String Contains command.\\nCurrently doesn't track supers due to cinematic freeze.\", \"v0\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 3.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"hit.trigger_name\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"ggxrd_roundStartEvent\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame_of_last_p1_hit\", \"b2\": \"0\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame_of_last_p2_hit\", \"b2\": \"0\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 6.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"hit.data.data.victim\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player2\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 6.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \">\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 7.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(hit.data.data.current_frame-frame_of_last_p1_hit)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"30\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 4.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"<\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 8.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(hit.data.data.current_frame-XrdDemo_Detect_Wakeup_Frame.p1_wakeup_frame)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"30\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Reversal: \\\/$hit.data.data.attacker_state$\\\/ \\\/$(hit.data.data.current_frame-XrdDemo_Detect_Wakeup_Frame.p1_wakeup_frame-1)$\\\/\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"<\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 10.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(hit.data.data.current_frame-XrdDemo_Detect_Wakeup_Frame.p2_wakeup_frame)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"30\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Oki: \\\/$hit.data.data.attacker_state$\\\/ \\\/$(hit.data.data.current_frame-XrdDemo_Detect_Wakeup_Frame.p2_wakeup_frame-1)$\\\/\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame_of_last_p1_hit\", \"b2\": \"hit.data.data.current_frame\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 13.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"hit.data.data.victim\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"Player1\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 6.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \">\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 14.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(hit.data.data.current_frame-frame_of_last_p2_hit)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"30\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 4.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"<\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 15.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(hit.data.data.current_frame-XrdDemo_Detect_Wakeup_Frame.p2_wakeup_frame)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"30\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Reversal: \\\/$hit.data.data.attacker_state$\\\/ \\\/$(hit.data.data.current_frame-XrdDemo_Detect_Wakeup_Frame.p2_wakeup_frame-1)$\\\/\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"<\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 17.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(hit.data.data.current_frame-XrdDemo_Detect_Wakeup_Frame.p1_wakeup_frame)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"30\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Oki: \\\/$hit.data.data.attacker_state$\\\/ \\\/$(hit.data.data.current_frame-XrdDemo_Detect_Wakeup_Frame.p1_wakeup_frame-1)$\\\/\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame_of_last_p2_hit\", \"b2\": \"hit.data.data.current_frame\" } ], \"press_type\": 0.0, \"x\": 0.25, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_hitEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Reversal_Detector\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 }, { \"case_sensitive\": 0.0, \"message\": \"ggxrd_roundStartEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Reversal_Detector\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"frame_of_last_p1_hit\\\":0,\\n\\\"frame_of_last_p2_hit\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"XrdDemo_Reversal_Detector\", \"button_duration\": 0.0, \"y\": 0.80000000000000004440892098500626, \"switch_deck\": \"\", \"height\": 0.20000000000000001110223024625157, \"release_list\": [ ], \"functions\": 2257.0, \"stretch\": 0.0 }, { \"color\": 3618615.0, \"persistent\": 1.0, \"text\": \"Match End Event\", \"release_duration\": 0.0, \"queueable\": 1.0, \"command_list\": [ { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"event\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"event\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 2.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"event.trigger_name\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"ggxrd_timeoutEvent\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"match_ended\", \"b2\": \"0\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 4.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"event.trigger_name\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"ggxrd_roundStartEvent\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"match_ended\", \"b2\": \"0\" }, { \"b53\": \"\", \"b5\": \"0\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"match_ended\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 6.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"event.trigger_name\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"ggxrd_stateUpdate\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 1.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 6.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 2.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 7.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"event.data.data.player_1.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CmnActResultWin\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Player 1 Wins the Match.\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"match_ended\", \"b2\": \"1\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 10.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"event.data.data.player_2.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CmnActResultWin\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Player 2 Wins the Match.\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"match_ended\", \"b2\": \"1\" } ], \"press_type\": 0.0, \"x\": 0.5, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_stateUpdate\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Match_End_Event\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 }, { \"case_sensitive\": 0.0, \"message\": \"ggxrd_timeoutEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Match_End_Event\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 }, { \"case_sensitive\": 0.0, \"message\": \"ggxrd_roundStartEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Match_End_Event\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"match_ended\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"XrdDemo_Match_End_Event\", \"button_duration\": 0.0, \"y\": 0.59999999999999997779553950749687, \"switch_deck\": \"\", \"height\": 0.20000000000000001110223024625157, \"release_list\": [ ], \"functions\": 2257.0, \"stretch\": 0.0 }, { \"color\": 3618615.0, \"persistent\": 1.0, \"text\": \"Round Start\\nEvent\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.5, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_roundStartEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Round_Start_Event\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"XrdDemo_Round_Start_Event\", \"button_duration\": 0.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.20000000000000001110223024625157, \"release_list\": [ ], \"functions\": 80.0, \"stretch\": 0.0 }, { \"color\": 3618615.0, \"persistent\": 1.0, \"text\": \"Round End\\nEvent\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.5, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_roundEndEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Round_End_Event\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"XrdDemo_Round_End_Event\", \"button_duration\": 0.0, \"y\": 0.40000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.20000000000000001110223024625157, \"release_list\": [ ], \"functions\": 80.0, \"stretch\": 0.0 }, { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"IB Detection\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"frame\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"!=\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 2.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"last_frame\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"0\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 7.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"IB Detection\", \"v0\": 6.0 }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \">=\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 4.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(frame.data.data.player_2.tension_pulse-last_frame.data.data.player_2.tension_pulse)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"500\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"CmnActMidGuardLoop\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\\\"CmnActHighGuardLoop\\\"\", \"b9\": \"frame.data.data.player_2.state\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"frame.data.data.player_2.state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 5.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 75.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"frame.data.data.player_2.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CmnActCrouchGuardLoop\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CmnActAirGuardLoop\\\"\", \"b6\": \"frame.data.data.player_2.state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 2.0, \"v8\": 0.0, \"v2\": 4.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P2 Instant Block\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \">=\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 7.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"(frame.data.data.player_1.tension_pulse-last_frame.data.data.player_1.tension_pulse)\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"500\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"b53\": \"\", \"b5\": \"\\\"CmnActMidGuardLoop\\\"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\\\"CmnActHighGuardLoop\\\"\", \"b9\": \"frame.data.data.player_1.state\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"frame.data.data.player_1.state\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 8.0, \"v5\": 2.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 75.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"frame.data.data.player_1.state\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"CmnActCrouchGuardLoop\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\\\"CmnActAirGuardLoop\\\"\", \"b6\": \"frame.data.data.player_1.state\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 2.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 1.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 2.0, \"v8\": 0.0, \"v2\": 4.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"P1 Instant Block\" }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"last_frame\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"last_frame\", \"b2\": \"frame\" } ], \"press_type\": 0.0, \"x\": 0.25, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_stateUpdate\", \"group_id\": \"\", \"button_id\": \"BLTR_IB_Detection\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"{\\n\\\"last_frame\\\":0\\n}\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"BLTR_IB_Detection\", \"button_duration\": 0.0, \"y\": 0.59999999999999997779553950749687, \"switch_deck\": \"\", \"height\": 0.20000000000000001110223024625157, \"release_list\": [ ], \"functions\": 2129.0, \"stretch\": 0.0 }, { \"color\": 132.0, \"persistent\": 1.0, \"text\": \"Danger Time\\nEvent\", \"release_duration\": 0.0, \"queueable\": 1.0, \"command_list\": [ { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"event\" }, { \"b1\": \"all\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"event\" }, { \"b53\": \"\", \"b5\": \"\", \"b13\": \"==\", \"v14\": 0.0, \"b36\": \"\", \"b38\": \"\", \"v10\": 0.0, \"b32\": \"\", \"b19\": \"==\", \"b57\": \"\", \"b59\": \"\", \"b17\": \"\", \"b1\": \"==\", \"v18\": 0.0, \"v16\": 0.0, \"b34\": \"==\", \"b7\": \"==\", \"b11\": \"\", \"b9\": \"\", \"b51\": \"\", \"b15\": \"\", \"b3\": \"\", \"b55\": \"==\", \"v12\": 0.0, \"cmd\": 7.0, \"b30\": \"\", \"b43\": \"==\", \"v21\": 0.0, \"v1\": 0.0, \"b26\": \"\", \"b28\": \"==\", \"obsid\": \"Main\", \"b22\": \"==\", \"pos\": 2.0, \"v5\": 0.0, \"b47\": \"\", \"b49\": \"==\", \"v3\": 0.0, \"vis\": 1.0, \"b24\": \"\", \"ms\": 0.0, \"b41\": \"\", \"sel\": 0.0, \"b45\": \"\", \"v9\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b20\": \"\", \"v7\": 0.0, \"b33\": \"\", \"v11\": 0.0, \"b16\": \"==\", \"b0\": \"event.data.data.object_name\", \"b58\": \"==\", \"b56\": \"\", \"b18\": \"\", \"b4\": \"==\", \"b12\": \"\", \"b52\": \"==\", \"b39\": \"\", \"b37\": \"==\", \"v15\": 0.0, \"b54\": \"\", \"b14\": \"\", \"b2\": \"\\\"cmn_stop_sousai_obj\\\"\", \"b31\": \"==\", \"v13\": 0.0, \"b35\": \"\", \"v17\": 0.0, \"v19\": 0.0, \"b50\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"==\", \"b23\": \"\", \"v4\": 0.0, \"b48\": \"\", \"b46\": \"==\", \"v20\": 0.0, \"b42\": \"\", \"b29\": \"\", \"v0\": 2.0, \"b27\": \"\", \"b44\": \"\", \"b21\": \"\", \"v6\": 0.0, \"v8\": 0.0, \"v2\": 1.0, \"b25\": \"==\", \"b40\": \"==\", \"v22\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"cmn_stop_sousai_obj is the name of one of the objects spawned by the Danger Time activation effect.\", \"v0\": 1.0 }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"DAISUKE MODE ACTIVATED!\" } ], \"press_type\": 0.0, \"x\": 0.5, \"is_transparent\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"ggxrd_objectCreatedEvent\", \"group_id\": \"\", \"button_id\": \"XrdDemo_Danger_Time\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 5.0, \"width\": 0.25, \"button_id\": \"XrdDemo_Danger_Time\", \"button_duration\": 0.0, \"y\": 0.80000000000000004440892098500626, \"switch_deck\": \"\", \"height\": 0.20000000000000001110223024625157, \"release_list\": [ ], \"functions\": 209.0, \"stretch\": 0.0 } ], \"deck_name\": \"Xrd Demo Deck\", \"grid_x\": 4.0, \"stretch\": 0.0 }", "unique_id": "20241130215410469808904", "include_image": { } }